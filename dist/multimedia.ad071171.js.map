{"mappings":"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","sources":["node_modules/video.js/dist/video.js"],"sourcesContent":["/**\n * @license\n * Video.js 7.20.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojs = factory());\n}(this, (function () { 'use strict';\n\n  var version$5 = \"7.20.3\";\n\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n  var hooks_ = {};\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecyle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n\n  var hooks = function hooks(type, fn) {\n    hooks_[type] = hooks_[type] || [];\n\n    if (fn) {\n      hooks_[type] = hooks_[type].concat(fn);\n    }\n\n    return hooks_[type];\n  };\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hook = function hook(type, fn) {\n    hooks(type, fn);\n  };\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n\n\n  var removeHook = function removeHook(type, fn) {\n    var index = hooks(type).indexOf(fn);\n\n    if (index <= -1) {\n      return false;\n    }\n\n    hooks_[type] = hooks_[type].slice();\n    hooks_[type].splice(index, 1);\n    return true;\n  };\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n\n\n  var hookOnce = function hookOnce(type, fn) {\n    hooks(type, [].concat(fn).map(function (original) {\n      var wrapper = function wrapper() {\n        removeHook(type, wrapper);\n        return original.apply(void 0, arguments);\n      };\n\n      return wrapper;\n    }));\n  };\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   * @private\n   */\n\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n  var FullscreenApi = {\n    prefixed: true\n  }; // browser API methods\n\n  var apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n  ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n  ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\n  var specApi = apiMap[0];\n  var browserApi; // determine the supported set of functions\n\n  for (var i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  } // map the browser API names to the spec API names\n\n\n  if (browserApi) {\n    for (var _i = 0; _i < browserApi.length; _i++) {\n      FullscreenApi[specApi[_i]] = browserApi[_i];\n    }\n\n    FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n  // This is the private tracking variable for the logging history.\n  var history = [];\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} type\n   *         The name of the console method to use.\n   *\n   * @param  {Array} args\n   *         The arguments to be passed to the matching console method.\n   */\n\n  var LogByTypeFactory = function LogByTypeFactory(name, log) {\n    return function (type, level, args) {\n      var lvl = log.levels[level];\n      var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n      if (type !== 'log') {\n        // Add the type to the front of the message when it's not \"log\".\n        args.unshift(type.toUpperCase() + ':');\n      } // Add console prefix after adding to history.\n\n\n      args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n      if (history) {\n        history.push([].concat(args)); // only store 1000 history entries\n\n        var splice = history.length - 1000;\n        history.splice(0, splice > 0 ? splice : 0);\n      } // If there's no console then don't try to output messages, but they will\n      // still be stored in history.\n\n\n      if (!window.console) {\n        return;\n      } // Was setting these once outside of this function, but containing them\n      // in the function makes it easier to test cases where console doesn't exist\n      // when the module is executed.\n\n\n      var fn = window.console[type];\n\n      if (!fn && type === 'debug') {\n        // Certain browsers don't have support for console.debug. For those, we\n        // should default to the closest comparable log.\n        fn = window.console.info || window.console.log;\n      } // Bail out if there's no console or if this type is not allowed by the\n      // current logging level.\n\n\n      if (!fn || !lvl || !lvlRegExp.test(type)) {\n        return;\n      }\n\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n    };\n  };\n\n  function createLogger$1(name) {\n    // This is the private tracking variable for logging level.\n    var level = 'info'; // the curried logByType bound to the specific log and history\n\n    var logByType;\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * Mixed[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {Mixed[]} args\n     *           One or more messages or objects that should be logged.\n     */\n\n    var log = function log() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      logByType('log', level, args);\n    }; // This is the logByType helper that the logging methods below use\n\n\n    logByType = LogByTypeFactory(name, log);\n    /**\n     * Create a new sublogger which chains the old name to the new name.\n     *\n     * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} name\n     *        The name to add call the new logger\n     * @return {Object}\n     */\n\n    log.createLogger = function (subname) {\n      return createLogger$1(name + ': ' + subname);\n    };\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n\n\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {string} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n\n    log.level = function (lvl) {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n        }\n\n        level = lvl;\n      }\n\n      return level;\n    };\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n\n\n    log.history = function () {\n      return history ? [].concat(history) : [];\n    };\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n\n\n    log.history.filter = function (fname) {\n      return (history || []).filter(function (historyItem) {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n      });\n    };\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n\n\n    log.history.clear = function () {\n      if (history) {\n        history.length = 0;\n      }\n    };\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n\n\n    log.history.disable = function () {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n\n\n    log.history.enable = function () {\n      if (history === null) {\n        history = [];\n      }\n    };\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as an error\n     */\n\n\n    log.error = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return logByType('error', level, args);\n    };\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n\n\n    log.warn = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return logByType('warn', level, args);\n    };\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n\n\n    log.debug = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return logByType('debug', level, args);\n    };\n\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  var log$1 = createLogger$1('VIDEOJS');\n  var createLogger = log$1.createLogger;\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var _extends_1 = createCommonjsModule(function (module) {\n    function _extends() {\n      module.exports = _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      return _extends.apply(this, arguments);\n    }\n\n    module.exports = _extends;\n  });\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {Mixed} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {Mixed}\n   *         The new accumulated value.\n   */\n  var toString$1 = Object.prototype.toString;\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n\n  var keys = function keys(object) {\n    return isObject$1(object) ? Object.keys(object) : [];\n  };\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n\n\n  function each(object, fn) {\n    keys(object).forEach(function (key) {\n      return fn(object[key], key);\n    });\n  }\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {Mixed} [initial = 0]\n   *        Starting value\n   *\n   * @return {Mixed}\n   *         The final accumulated value.\n   */\n\n  function reduce(object, fn, initial) {\n    if (initial === void 0) {\n      initial = 0;\n    }\n\n    return keys(object).reduce(function (accum, key) {\n      return fn(accum, object[key], key);\n    }, initial);\n  }\n  /**\n   * Object.assign-style object shallow merge/extend.\n   *\n   * @param  {Object} target\n   * @param  {Object} ...sources\n   * @return {Object}\n   */\n\n  function assign(target) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    if (Object.assign) {\n      return _extends_1.apply(void 0, [target].concat(sources));\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        target[key] = value;\n      });\n    });\n    return target;\n  }\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isObject$1(value) {\n    return !!value && typeof value === 'object';\n  }\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n\n  function isPlain(value) {\n    return isObject$1(value) && toString$1.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * @file computed-style.js\n   * @module computed-style\n   */\n\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @function\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyleValue;\n\n      try {\n        computedStyleValue = window.getComputedStyle(el);\n      } catch (e) {\n        return '';\n      }\n\n      return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n    }\n\n    return '';\n  }\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n  var USER_AGENT = window.navigator && window.navigator.userAgent || '';\n  var webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\n  var appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPOD = /iPod/i.test(USER_AGENT);\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {string|null}\n   */\n\n  var IOS_VERSION = function () {\n    var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n    if (match && match[1]) {\n      return match[1];\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANDROID = /Android/i.test(USER_AGENT);\n  /**\n   * The detected Android version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|string|null}\n   */\n\n  var ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n    if (!match) {\n      return null;\n    }\n\n    var major = match[1] && parseFloat(match[1]);\n    var minor = match[2] && parseFloat(match[2]);\n\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n\n    return null;\n  }();\n  /**\n   * Whether or not this is a native Android browser.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_EDGE = /Edg/i.test(USER_AGENT);\n  /**\n   * Whether or not this is Google Chrome.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n  /**\n   * The detected Google Chrome version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var CHROME_VERSION = function () {\n    var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n\n    return null;\n  }();\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @const\n   * @type {number|null}\n   */\n\n  var IE_VERSION = function () {\n    var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    var version = result && parseFloat(result[1]);\n\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n\n    return version;\n  }();\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  /**\n   * Whether or not this is a Windows machine.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\n  var IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n\n  var IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\n  var browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    IS_IPOD: IS_IPOD,\n    IOS_VERSION: IOS_VERSION,\n    IS_ANDROID: IS_ANDROID,\n    ANDROID_VERSION: ANDROID_VERSION,\n    IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n    IS_FIREFOX: IS_FIREFOX,\n    IS_EDGE: IS_EDGE,\n    IS_CHROME: IS_CHROME,\n    CHROME_VERSION: CHROME_VERSION,\n    IE_VERSION: IE_VERSION,\n    IS_SAFARI: IS_SAFARI,\n    IS_WINDOWS: IS_WINDOWS,\n    TOUCH_ENABLED: TOUCH_ENABLED,\n    IS_IPAD: IS_IPAD,\n    IS_IPHONE: IS_IPHONE,\n    IS_IOS: IS_IOS,\n    IS_ANY_SAFARI: IS_ANY_SAFARI\n  });\n\n  /**\n   * @file dom.js\n   * @module dom\n   */\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n\n  function isNonBlankString(str) {\n    // we use str.trim as it will trim any whitespace characters\n    // from the front or back of non-whitespace characters. aka\n    // Any string that contains non-whitespace characters will\n    // still contain them after `trim` but whitespace only strings\n    // will have a length of 0, failing this check.\n    return typeof str === 'string' && Boolean(str.trim());\n  }\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n\n\n  function throwIfWhitespace(str) {\n    // str.indexOf instead of regex because str.indexOf is faster performance wise.\n    if (str.indexOf(' ') >= 0) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n  /**\n   * Produce a regular expression for matching a className within an elements className.\n   *\n   * @private\n   * @param  {string} className\n   *         The className to generate the RegExp for.\n   *\n   * @return {RegExp}\n   *         The RegExp that will check for a specific `className` in an elements\n   *         className.\n   */\n\n\n  function classRegExp(className) {\n    return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n  }\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n\n\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window.document;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {Mixed} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n\n  function isEl(value) {\n    return isObject$1(value) && value.nodeType === 1;\n  }\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window.parent !== window.self;\n    } catch (x) {\n      return true;\n    }\n  }\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n\n      var ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  function createEl(tagName, properties, attributes, content) {\n    if (tagName === void 0) {\n      tagName = 'div';\n    }\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    var el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      var val = properties[propName]; // See #2176\n      // We originally were accepting both properties and attributes in the\n      // same object, but that doesn't work so well.\n\n      if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n        log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n        el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n        // method for it.\n      } else if (propName === 'textContent') {\n        textContent(el, val);\n      } else if (el[propName] !== val || propName === 'tabIndex') {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n\n    if (content) {\n      appendContent(el, content);\n    }\n\n    return el;\n  }\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {Element} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n\n    return el;\n  }\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n\n    if (element.classList) {\n      return element.classList.contains(classToCheck);\n    }\n\n    return classRegExp(classToCheck).test(element.className);\n  }\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {string} classToAdd\n   *         Class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n\n  function addClass(element, classToAdd) {\n    if (element.classList) {\n      element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n      // in the case of classList not being supported.\n    } else if (!hasClass(element, classToAdd)) {\n      element.className = (element.className + ' ' + classToAdd).trim();\n    }\n\n    return element;\n  }\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {string} classToRemove\n   *         Class name to remove\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n\n  function removeClass(element, classToRemove) {\n    // Protect in case the player gets disposed\n    if (!element) {\n      log$1.warn(\"removeClass was called with an element that doesn't exist\");\n      return null;\n    }\n\n    if (element.classList) {\n      element.classList.remove(classToRemove);\n    } else {\n      throwIfWhitespace(classToRemove);\n      element.className = element.className.split(/\\s+/).filter(function (c) {\n        return c !== classToRemove;\n      }).join(' ');\n    }\n\n    return element;\n  }\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n\n  function toggleClass(element, classToToggle, predicate) {\n    // This CANNOT use `classList` internally because IE11 does not support the\n    // second parameter to the `classList.toggle()` method! Which is fine because\n    // `classList` will be used by the add/remove functions.\n    var has = hasClass(element, classToToggle);\n\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n\n    if (typeof predicate !== 'boolean') {\n      predicate = !has;\n    } // If the necessary class operation matches the current state of the\n    // element, no action is required.\n\n\n    if (predicate === has) {\n      return;\n    }\n\n    if (predicate) {\n      addClass(element, classToToggle);\n    } else {\n      removeClass(element, classToToggle);\n    }\n\n    return element;\n  }\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      var attrValue = attributes[attrName];\n\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n\n  function getAttributes(tag) {\n    var obj = {}; // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n\n    var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      var attrs = tag.attributes;\n\n      for (var i = attrs.length - 1; i >= 0; i--) {\n        var attrName = attrs[i].name;\n        var attrVal = attrs[i].value; // check for known booleans\n        // the matching element property will return a value for typeof\n\n        if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n\n        obj[attrName] = attrVal;\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n  /**\n   * Attempt to block the ability to select text.\n   */\n\n  function blockTextSelection() {\n    document.body.focus();\n\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n  /**\n   * Turn off text selection blocking.\n   */\n\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      var rect = el.getBoundingClientRect();\n      var result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n\n      return result;\n    }\n  }\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n\n  function findPosition(el) {\n    if (!el || el && !el.offsetParent) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    var width = el.offsetWidth;\n    var height = el.offsetHeight;\n    var left = 0;\n    var top = 0;\n\n    while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n      el = el.offsetParent;\n    }\n\n    return {\n      left: left,\n      top: top,\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n\n  function getPointerPosition(el, event) {\n    var translated = {\n      x: 0,\n      y: 0\n    };\n\n    if (IS_IOS) {\n      var item = el;\n\n      while (item && item.nodeName.toLowerCase() !== 'html') {\n        var transform = computedStyle(item, 'transform');\n\n        if (/^matrix/.test(transform)) {\n          var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n          translated.x += values[4];\n          translated.y += values[5];\n        } else if (/^matrix3d/.test(transform)) {\n          var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n          translated.x += _values[12];\n          translated.y += _values[13];\n        }\n\n        item = item.parentNode;\n      }\n    }\n\n    var position = {};\n    var boxTarget = findPosition(event.target);\n    var box = findPosition(el);\n    var boxW = box.width;\n    var boxH = box.height;\n    var offsetY = event.offsetY - (box.top - boxTarget.top);\n    var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n    if (event.changedTouches) {\n      offsetX = event.changedTouches[0].pageX - box.left;\n      offsetY = event.changedTouches[0].pageY + box.top;\n\n      if (IS_IOS) {\n        offsetX -= translated.x;\n        offsetY -= translated.y;\n      }\n    }\n\n    position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n    position.x = Math.max(0, Math.min(1, offsetX / boxW));\n    return position;\n  }\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {Mixed} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n\n  function isTextNode(value) {\n    return isObject$1(value) && value.nodeType === 3;\n  }\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n\n    return el;\n  }\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `TextNode` | The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    } // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n\n\n    return (Array.isArray(content) ? content : [content]).map(function (value) {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n\n      if (isEl(value) || isTextNode(value)) {\n        return value;\n      }\n\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(function (value) {\n      return value;\n    });\n  }\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(function (node) {\n      return el.appendChild(node);\n    });\n    return el;\n  }\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n      return true;\n    }\n\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n      return true;\n    } // `mouseup` event on a single left click has\n    // `button` and `buttons` equal to 0\n\n\n    if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n\n  var $ = createQuerier('querySelector');\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n\n  var $$ = createQuerier('querySelectorAll');\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  var _windowLoaded = false;\n  var videojs$1;\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n\n  var autoSetup = function autoSetup() {\n    if (videojs$1.options.autoSetup === false) {\n      return;\n    }\n\n    var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n    if (mediaEls && mediaEls.length > 0) {\n      for (var i = 0, e = mediaEls.length; i < e; i++) {\n        var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs$1(mediaEl);\n            }\n          } // If getAttribute isn't defined, we need to wait for the DOM.\n\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      } // No videos were found, so keep looping unless page is finished loading.\n\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n\n\n  function autoSetupTimeout(wait, vjs) {\n    // Protect against breakage in non-browser environments\n    if (!isReal()) {\n      return;\n    }\n\n    if (vjs) {\n      videojs$1 = vjs;\n    }\n\n    window.setTimeout(autoSetup, wait);\n  }\n  /**\n   * Used to set the internal tracking of window loaded state to true.\n   *\n   * @private\n   */\n\n\n  function setWindowLoaded() {\n    _windowLoaded = true;\n    window.removeEventListener('load', setWindowLoaded);\n  }\n\n  if (isReal()) {\n    if (document.readyState === 'complete') {\n      setWindowLoaded();\n    } else {\n      /**\n       * Listen for the load event on window, and set _windowLoaded to true.\n       *\n       * We use a standard event listener here to avoid incrementing the GUID\n       * before any players are created.\n       *\n       * @listens load\n       */\n      window.addEventListener('load', setWindowLoaded);\n    }\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n\n  /**\n   * Create a DOM syle element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  var createStyleElement = function createStyleElement(className) {\n    var style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n\n  var setTextContent = function setTextContent(el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n  // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n  //\n  // The initial GUID is 3 because some users have come to rely on the first\n  // default player ID ending up as `vjs_video_3`.\n  //\n  // See: https://github.com/videojs/video.js/pull/6216\n  var _initialGuid = 3;\n  /**\n   * Unique ID for an element or function\n   *\n   * @type {Number}\n   */\n\n  var _guid = _initialGuid;\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n  var FakeWeakMap;\n\n  if (!window.WeakMap) {\n    FakeWeakMap = /*#__PURE__*/function () {\n      function FakeWeakMap() {\n        this.vdata = 'vdata' + Math.floor(window.performance && window.performance.now() || Date.now());\n        this.data = {};\n      }\n\n      var _proto = FakeWeakMap.prototype;\n\n      _proto.set = function set(key, value) {\n        var access = key[this.vdata] || newGUID();\n\n        if (!key[this.vdata]) {\n          key[this.vdata] = access;\n        }\n\n        this.data[access] = value;\n        return this;\n      };\n\n      _proto.get = function get(key) {\n        var access = key[this.vdata]; // we have data, return it\n\n        if (access) {\n          return this.data[access];\n        } // we don't have data, return nothing.\n        // return undefined explicitly as that's the contract for this method\n\n\n        log$1('We have no data for this element', key);\n        return undefined;\n      };\n\n      _proto.has = function has(key) {\n        var access = key[this.vdata];\n        return access in this.data;\n      };\n\n      _proto[\"delete\"] = function _delete(key) {\n        var access = key[this.vdata];\n\n        if (access) {\n          delete this.data[access];\n          delete key[this.vdata];\n        }\n      };\n\n      return FakeWeakMap;\n    }();\n  }\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  var DomData = window.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n\n  function _cleanUpEvents(elem, type) {\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type]; // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n      // Remove the meta-handler from the element\n\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    } // Remove the events object if there are no types left\n\n\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    } // Finally remove the element data if there is no data left\n\n\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      DomData[\"delete\"](elem);\n    }\n  }\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} callback\n   *        Event listener.\n   */\n\n\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n\n\n  function fixEvent(event) {\n    if (event.fixed_) {\n      return event;\n    }\n\n    function returnTrue() {\n      return true;\n    }\n\n    function returnFalse() {\n      return false;\n    } // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n    if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n      var old = event || window.event;\n      event = {}; // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n\n      for (var key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        // Lighthouse complains if Event.path is copied\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      } // The event occurred on this element\n\n\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      } // Handle which other element the event is related to\n\n\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      } // Stop the default browser action\n\n\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n\n      event.defaultPrevented = false; // Stop the event from bubbling\n\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n\n      event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n\n      event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n      if (event.clientX !== null && event.clientX !== undefined) {\n        var doc = document.documentElement;\n        var body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      } // Handle key presses\n\n\n      event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    }\n\n    event.fixed_ = true; // Returns fixed-up instance\n\n    return event;\n  }\n  /**\n   * Whether passive event listeners are supported\n   */\n\n  var _supportsPassive;\n\n  var supportsPassive = function supportsPassive() {\n    if (typeof _supportsPassive !== 'boolean') {\n      _supportsPassive = false;\n\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function get() {\n            _supportsPassive = true;\n          }\n        });\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n      } catch (e) {// disregard\n      }\n    }\n\n    return _supportsPassive;\n  };\n  /**\n   * Touch events Chrome expects to be passive\n   */\n\n\n  var passiveEvents = ['touchstart', 'touchmove'];\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        Event listener.\n   */\n\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n\n    if (!DomData.has(elem)) {\n      DomData.set(elem, {});\n    }\n\n    var data = DomData.get(elem); // We need a place to store all our handler data\n\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    data.handlers[type].push(fn);\n\n    if (!data.dispatcher) {\n      data.disabled = false;\n\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n\n        event = fixEvent(event);\n        var handlers = data.handlers[event.type];\n\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          var handlersCopy = handlers.slice(0);\n\n          for (var m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log$1.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        var options = false;\n\n        if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {EventTarget~EventListener} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!DomData.has(elem)) {\n      return;\n    }\n\n    var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n    if (!data.handlers) {\n      return;\n    }\n\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    } // Utility function\n\n\n    var removeType = function removeType(el, t) {\n      data.handlers[t] = [];\n\n      _cleanUpEvents(el, t);\n    }; // Are we removing all bound events?\n\n\n    if (type === undefined) {\n      for (var t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n\n      return;\n    }\n\n    var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n    if (!handlers) {\n      return;\n    } // If no listener was provided, remove all listeners for type\n\n\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    } // We're only removing a single handler\n\n\n    if (fn.guid) {\n      for (var n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n\n    _cleanUpEvents(elem, type);\n  }\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n    var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n    // handler;\n    // If an event name was passed as a string, creates an event out of it\n\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    } // Normalizes the event properties.\n\n\n    event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n\n\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      if (!DomData.has(event.target)) {\n        DomData.set(event.target, {});\n      }\n\n      var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true; // Executes the default action.\n\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        } // Re-enables event dispatching.\n\n\n        targetData.disabled = false;\n      }\n    } // Inform the triggerer if the default was prevented by returning false\n\n\n    return !event.defaultPrevented;\n  }\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n  /**\n   * Trigger a listener only once and then turn if off for all\n   * configured events\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n\n  function any(elem, type, fn) {\n    var func = function func() {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n    func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one,\n    any: any\n  });\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  var UPDATE_REFRESH_INTERVAL = 30;\n  /**\n   * Bind (a.k.a proxy or context). A simple method for changing the context of\n   * a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @function\n   * @param    {Mixed} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n\n  var bind = function bind(context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    } // Create the new function that changes the context\n\n\n    var bound = fn.bind(context); // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n\n  var throttle = function throttle(fn, wait) {\n    var last = window.performance.now();\n\n    var throttled = function throttled() {\n      var now = window.performance.now();\n\n      if (now - last >= wait) {\n        fn.apply(void 0, arguments);\n        last = now;\n      }\n    };\n\n    return throttled;\n  };\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n\n  var debounce = function debounce(func, wait, immediate, context) {\n    if (context === void 0) {\n      context = window;\n    }\n\n    var timeout;\n\n    var cancel = function cancel() {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n    /* eslint-disable consistent-this */\n\n\n    var debounced = function debounced() {\n      var self = this;\n      var args = arguments;\n\n      var _later = function later() {\n        timeout = null;\n        _later = null;\n\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(_later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  /**\n   * @file src/js/event-target.js\n   */\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n\n  var EventTarget$2 = function EventTarget() {};\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {Object} EventTarget~Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventTarget~EventListener\n   * @this {EventTarget}\n   *\n   * @param {EventTarget~Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @private\n   */\n\n\n  EventTarget$2.prototype.allowedEvents_ = {};\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to call with `EventTarget`s\n   */\n\n  EventTarget$2.prototype.on = function (type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    on(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n\n\n  EventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to remove.\n   */\n\n  EventTarget$2.prototype.off = function (type, fn) {\n    off(this, type, fn);\n  };\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n\n\n  EventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        The function to be called once for each event name.\n   */\n\n  EventTarget$2.prototype.one = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    one(this, type, fn);\n    this.addEventListener = ael;\n  };\n\n  EventTarget$2.prototype.any = function (type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    var ael = this.addEventListener;\n\n    this.addEventListener = function () {};\n\n    any(this, type, fn);\n    this.addEventListener = ael;\n  };\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n\n\n  EventTarget$2.prototype.trigger = function (event) {\n    var type = event.type || event; // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n\n    if (typeof event === 'string') {\n      event = {\n        type: type\n      };\n    }\n\n    event = fixEvent(event);\n\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n\n    trigger(this, event);\n  };\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n\n\n  EventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n  var EVENT_MAP;\n\n  EventTarget$2.prototype.queueTrigger = function (event) {\n    var _this = this;\n\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n\n    var type = event.type || event;\n    var map = EVENT_MAP.get(this);\n\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n\n    var oldTimeout = map.get(type);\n    map[\"delete\"](type);\n    window.clearTimeout(oldTimeout);\n    var timeout = window.setTimeout(function () {\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP[\"delete\"](_this);\n      }\n\n      _this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  };\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n\n  var objName = function objName(obj) {\n    if (typeof obj.name === 'function') {\n      return obj.name();\n    }\n\n    if (typeof obj.name === 'string') {\n      return obj.name;\n    }\n\n    if (obj.name_) {\n      return obj.name_;\n    }\n\n    if (obj.constructor && obj.constructor.name) {\n      return obj.constructor.name;\n    }\n\n    return typeof obj;\n  };\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n\n\n  var isEvented = function isEvented(object) {\n    return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n      return typeof object[k] === 'function';\n    });\n  };\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n\n\n  var addEventedCallback = function addEventedCallback(target, callback) {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n\n      target.eventedCallbacks.push(callback);\n    }\n  };\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n\n\n  var isValidEventType = function isValidEventType(type) {\n    return (// The regex here verifies that the `type` contains at least one non-\n      // whitespace character.\n      typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n    );\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateTarget = function validateTarget(target, obj, fnName) {\n    if (!target || !target.nodeName && !isEvented(target)) {\n      throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   *\n   * @param  {Object} obj\n  *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateEventType = function validateEventType(type, obj, fnName) {\n    if (!isValidEventType(type)) {\n      throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n    }\n  };\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n\n\n  var validateListener = function validateListener(listener, obj, fnName) {\n    if (typeof listener !== 'function') {\n      throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n    }\n  };\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n\n\n  var normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    var target;\n    var type;\n    var listener;\n\n    if (isTargetingSelf) {\n      target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n\n      if (args.length >= 3) {\n        args.shift();\n      }\n\n      type = args[0];\n      listener = args[1];\n    } else {\n      target = args[0];\n      type = args[1];\n      listener = args[2];\n    }\n\n    validateTarget(target, self, fnName);\n    validateEventType(type, self, fnName);\n    validateListener(listener, self, fnName);\n    listener = bind(self, listener);\n    return {\n      isTargetingSelf: isTargetingSelf,\n      target: target,\n      type: type,\n      listener: listener\n    };\n  };\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n\n\n  var listen = function listen(target, method, type, listener) {\n    validateTarget(target, target, method);\n\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n\n\n  var EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on: function on() {\n      var _this = this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n          isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n          target = _normalizeListenArgs.target,\n          type = _normalizeListenArgs.type,\n          listener = _normalizeListenArgs.listener;\n\n      listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        var removeListenerOnDispose = function removeListenerOnDispose() {\n          return _this.off(target, type, listener);\n        }; // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n\n\n        removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n\n        var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n          return _this.off('dispose', removeListenerOnDispose);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will be called once per event and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one: function one() {\n      var _this2 = this;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n          isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n          target = _normalizeListenArgs2.target,\n          type = _normalizeListenArgs2.type,\n          listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener); // Targeting another evented object.\n      } else {\n        // TODO: This wrapper is incorrect! It should only\n        //       remove the wrapper for the event type that called it.\n        //       Instead all listners are removed on the first trigger!\n        //       see https://github.com/videojs/video.js/issues/5962\n        var wrapper = function wrapper() {\n          _this2.off(target, type, wrapper);\n\n          for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            largs[_key3] = arguments[_key3];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once for the first event that is triggered\n     * then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    any: function any() {\n      var _this3 = this;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n          isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n          target = _normalizeListenArgs3.target,\n          type = _normalizeListenArgs3.type,\n          listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n      if (isTargetingSelf) {\n        listen(target, 'any', type, listener); // Targeting another evented object.\n      } else {\n        var wrapper = function wrapper() {\n          _this3.off(target, type, wrapper);\n\n          for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n            largs[_key5] = arguments[_key5];\n          }\n\n          listener.apply(null, largs);\n        }; // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n\n\n        wrapper.guid = listener.guid;\n        listen(target, 'any', type, wrapper);\n      }\n    },\n\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off: function off$1(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n      } else {\n        var target = targetOrType;\n        var type = typeOrListener; // Fail fast and in a meaningful way!\n\n        validateTarget(target, this, 'off');\n        validateEventType(type, this, 'off');\n        validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n        listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n\n        this.off('dispose', listener);\n\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger: function trigger$1(event, hash) {\n      validateTarget(this.eventBusEl_, this, 'trigger');\n      var type = event && typeof event !== 'string' ? event.type : event;\n\n      if (!isValidEventType(type)) {\n        var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n        if (event) {\n          (this.log || log$1).error(error);\n        } else {\n          throw new Error(error);\n        }\n      }\n\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n\n  function evented(target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n      }\n\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n\n    assign(target, EventedMixin);\n\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(function (callback) {\n        callback();\n      });\n    } // When any evented object is disposed, it removes all its listeners.\n\n\n    target.on('dispose', function () {\n      target.off();\n      [target, target.el_, target.eventBusEl_].forEach(function (val) {\n        if (val && DomData.has(val)) {\n          DomData[\"delete\"](val);\n        }\n      });\n      window.setTimeout(function () {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n\n  var StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState: function setState(stateUpdates) {\n      var _this = this;\n\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n\n      var changes;\n      each(stateUpdates, function (value, key) {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (_this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: _this.state[key],\n            to: value\n          };\n        }\n\n        _this.state[key] = value;\n      }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes: changes,\n          type: 'statechanged'\n        });\n      }\n\n      return changes;\n    }\n  };\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n\n  function stateful(target, defaultState) {\n    assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n\n    target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n\n    return target;\n  }\n\n  /**\n   * @file string-cases.js\n   * @module to-lower-case\n   */\n\n  /**\n   * Lowercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be lowercased\n   *\n   * @return {string}\n   *         The string with a lowercased first letter\n   */\n  var toLowerCase = function toLowerCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toLowerCase();\n    });\n  };\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n\n  var toTitleCase$1 = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n\n  var titleCaseEquals = function titleCaseEquals(str1, str2) {\n    return toTitleCase$1(str1) === toTitleCase$1(str2);\n  };\n\n  /**\n   * @file merge-options.js\n   * @module merge-options\n   */\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @static\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n\n  function mergeOptions$3() {\n    var result = {};\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    sources.forEach(function (source) {\n      if (!source) {\n        return;\n      }\n\n      each(source, function (value, key) {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n\n        result[key] = mergeOptions$3(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  var MapSham = /*#__PURE__*/function () {\n    function MapSham() {\n      this.map_ = {};\n    }\n\n    var _proto = MapSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.map_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.map_[key];\n      return has;\n    };\n\n    _proto.set = function set(key, value) {\n      this.map_[key] = value;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.map_) {\n        callback.call(thisArg, this.map_[key], key, this);\n      }\n    };\n\n    return MapSham;\n  }();\n\n  var Map$1 = window.Map ? window.Map : MapSham;\n\n  var SetSham = /*#__PURE__*/function () {\n    function SetSham() {\n      this.set_ = {};\n    }\n\n    var _proto = SetSham.prototype;\n\n    _proto.has = function has(key) {\n      return key in this.set_;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var has = this.has(key);\n      delete this.set_[key];\n      return has;\n    };\n\n    _proto.add = function add(key) {\n      this.set_[key] = 1;\n      return this;\n    };\n\n    _proto.forEach = function forEach(callback, thisArg) {\n      for (var key in this.set_) {\n        callback.call(thisArg, key, key, this);\n      }\n    };\n\n    return SetSham;\n  }();\n\n  var Set$1 = window.Set ? window.Set : SetSham;\n\n  var keycode = createCommonjsModule(function (module, exports) {\n    // Source: http://jsfiddle.net/vWx8V/\n    // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n    /**\n     * Conenience method returns corresponding value for given keyName or keyCode.\n     *\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Mixed}\n     * @api public\n     */\n    function keyCode(searchInput) {\n      // Keyboard Events\n      if (searchInput && 'object' === typeof searchInput) {\n        var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n        if (hasKeyCode) searchInput = hasKeyCode;\n      } // Numbers\n\n\n      if ('number' === typeof searchInput) return names[searchInput]; // Everything else (cast to string)\n\n      var search = String(searchInput); // check codes\n\n      var foundNamedKey = codes[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // check aliases\n\n      var foundNamedKey = aliases[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey; // weird character?\n\n      if (search.length === 1) return search.charCodeAt(0);\n      return undefined;\n    }\n    /**\n     * Compares a keyboard event with a given keyCode or keyName.\n     *\n     * @param {Event} event Keyboard event that should be tested\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Boolean}\n     * @api public\n     */\n\n\n    keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n      if (event && 'object' === typeof event) {\n        var keyCode = event.which || event.keyCode || event.charCode;\n\n        if (keyCode === null || keyCode === undefined) {\n          return false;\n        }\n\n        if (typeof nameOrCode === 'string') {\n          // check codes\n          var foundNamedKey = codes[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          } // check aliases\n\n\n          var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n        } else if (typeof nameOrCode === 'number') {\n          return nameOrCode === keyCode;\n        }\n\n        return false;\n      }\n    };\n\n    exports = module.exports = keyCode;\n    /**\n     * Get by name\n     *\n     *   exports.code['enter'] // => 13\n     */\n\n    var codes = exports.code = exports.codes = {\n      'backspace': 8,\n      'tab': 9,\n      'enter': 13,\n      'shift': 16,\n      'ctrl': 17,\n      'alt': 18,\n      'pause/break': 19,\n      'caps lock': 20,\n      'esc': 27,\n      'space': 32,\n      'page up': 33,\n      'page down': 34,\n      'end': 35,\n      'home': 36,\n      'left': 37,\n      'up': 38,\n      'right': 39,\n      'down': 40,\n      'insert': 45,\n      'delete': 46,\n      'command': 91,\n      'left command': 91,\n      'right command': 93,\n      'numpad *': 106,\n      'numpad +': 107,\n      'numpad -': 109,\n      'numpad .': 110,\n      'numpad /': 111,\n      'num lock': 144,\n      'scroll lock': 145,\n      'my computer': 182,\n      'my calculator': 183,\n      ';': 186,\n      '=': 187,\n      ',': 188,\n      '-': 189,\n      '.': 190,\n      '/': 191,\n      '`': 192,\n      '[': 219,\n      '\\\\': 220,\n      ']': 221,\n      \"'\": 222\n    }; // Helper aliases\n\n    var aliases = exports.aliases = {\n      'windows': 91,\n      '⇧': 16,\n      '⌥': 18,\n      '⌃': 17,\n      '⌘': 91,\n      'ctl': 17,\n      'control': 17,\n      'option': 18,\n      'pause': 19,\n      'break': 19,\n      'caps': 20,\n      'return': 13,\n      'escape': 27,\n      'spc': 32,\n      'spacebar': 32,\n      'pgup': 33,\n      'pgdn': 34,\n      'ins': 45,\n      'del': 46,\n      'cmd': 91\n    };\n    /*!\n     * Programatically add the following\n     */\n    // lower case chars\n\n    for (i = 97; i < 123; i++) {\n      codes[String.fromCharCode(i)] = i - 32;\n    } // numbers\n\n\n    for (var i = 48; i < 58; i++) {\n      codes[i - 48] = i;\n    } // function keys\n\n\n    for (i = 1; i < 13; i++) {\n      codes['f' + i] = i + 111;\n    } // numpad keys\n\n\n    for (i = 0; i < 10; i++) {\n      codes['numpad ' + i] = i + 96;\n    }\n    /**\n     * Get by code\n     *\n     *   exports.name[13] // => 'Enter'\n     */\n\n\n    var names = exports.names = exports.title = {}; // title for backward compat\n    // Create reverse mapping\n\n    for (i in codes) {\n      names[codes[i]] = i;\n    } // Add aliases\n\n\n    for (var alias in aliases) {\n      codes[alias] = aliases[alias];\n    }\n  });\n  keycode.code;\n  keycode.codes;\n  keycode.aliases;\n  keycode.names;\n  keycode.title;\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n\n  var Component$1 = /*#__PURE__*/function () {\n    /**\n     * A callback that is called when a component is ready. Does not have any\n     * paramters and any callback value will be ignored.\n     *\n     * @callback Component~ReadyCallback\n     * @this Component\n     */\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of component options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to intialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    function Component(player, options, ready) {\n      var _this = this;\n\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      }\n\n      this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n      this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n      this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n      options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n      this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        var id = player && player.id && player.id() || 'no_player';\n        this.id_ = id + \"_component_\" + newGUID();\n      }\n\n      this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      }\n\n      if (options.className && this.el_) {\n        options.className.split(' ').forEach(function (c) {\n          return _this.addClass(c);\n        });\n      } // if evented is anything except false, we want to mixin in evented\n\n\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n        this.handleLanguagechange = this.handleLanguagechange.bind(this);\n        this.on(this.player_, 'languagechange', this.handleLanguagechange);\n      }\n\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {};\n      this.setTimeoutIds_ = new Set$1();\n      this.setIntervalIds_ = new Set$1();\n      this.rafIds_ = new Set$1();\n      this.namedRafs_ = new Map$1();\n      this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n      if (options.initChildren !== false) {\n        this.initChildren();\n      } // Don't want to trigger ready here or it will go before init is actually\n      // finished for all children that run this constructor\n\n\n      this.ready(ready);\n\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     *\n     * @param {Object} options\n     * @param {Element} options.originalEl element with which to replace player element\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.dispose = function dispose(options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      // Bail out if the component has already been disposed.\n      if (this.isDisposed_) {\n        return;\n      }\n\n      if (this.readyQueue_) {\n        this.readyQueue_.length = 0;\n      }\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the dispose event does not\n       *           bubble up\n       */\n\n\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      });\n      this.isDisposed_ = true; // Dispose all children.\n\n      if (this.children_) {\n        for (var i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      } // Delete child references\n\n\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          if (options.restoreEl) {\n            this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n          } else {\n            this.el_.parentNode.removeChild(this.el_);\n          }\n        }\n\n        this.el_ = null;\n      } // remove reference to the player after disposing of the element\n\n\n      this.player_ = null;\n    }\n    /**\n     * Determine whether or not this component has been disposed.\n     *\n     * @return {boolean}\n     *         If the component has been disposed, will be `true`. Otherwise, `false`.\n     */\n    ;\n\n    _proto.isDisposed = function isDisposed() {\n      return Boolean(this.isDisposed_);\n    }\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    ;\n\n    _proto.player = function player() {\n      return this.player_;\n    }\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:mergeOptions}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     */\n    ;\n\n    _proto.options = function options(obj) {\n      if (!obj) {\n        return this.options_;\n      }\n\n      this.options_ = mergeOptions$3(this.options_, obj);\n      return this.options_;\n    }\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    ;\n\n    _proto.el = function el() {\n      return this.el_;\n    }\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    ;\n\n    _proto.localize = function localize(string, tokens, defaultValue) {\n      if (defaultValue === void 0) {\n        defaultValue = string;\n      }\n\n      var code = this.player_.language && this.player_.language();\n      var languages = this.player_.languages && this.player_.languages();\n      var language = languages && languages[code];\n      var primaryCode = code && code.split('-')[0];\n      var primaryLang = languages && languages[primaryCode];\n      var localizedString = defaultValue;\n\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          var value = tokens[index - 1];\n          var ret = value;\n\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n\n          return ret;\n        });\n      }\n\n      return localizedString;\n    }\n    /**\n     * Handles language change for the player in components. Should be overriden by sub-components.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {}\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    ;\n\n    _proto.contentEl = function contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    ;\n\n    _proto.id = function id() {\n      return this.id_;\n    }\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    ;\n\n    _proto.name = function name() {\n      return this.name_;\n    }\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    ;\n\n    _proto.children = function children() {\n      return this.children_;\n    }\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    ;\n\n    _proto.getChildById = function getChildById(id) {\n      return this.childIndex_[id];\n    }\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    ;\n\n    _proto.getChild = function getChild(name) {\n      if (!name) {\n        return;\n      }\n\n      return this.childNameIndex_[name];\n    }\n    /**\n     * Returns the descendant `Component` following the givent\n     * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n     * try to get 'foo' on the current component, 'bar' on the 'foo'\n     * component and 'baz' on the 'bar' component and return undefined\n     * if any of those don't exist.\n     *\n     * @param {...string[]|...string} names\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The descendant `Component` following the given descendant\n     *         `names` or undefined.\n     */\n    ;\n\n    _proto.getDescendant = function getDescendant() {\n      for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n        names[_key] = arguments[_key];\n      }\n\n      // flatten array argument into the main array\n      names = names.reduce(function (acc, n) {\n        return acc.concat(n);\n      }, []);\n      var currentChild = this;\n\n      for (var i = 0; i < names.length; i++) {\n        currentChild = currentChild.getChild(names[i]);\n\n        if (!currentChild || !currentChild.getChild) {\n          return;\n        }\n      }\n\n      return currentChild;\n    }\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options, index) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (index === void 0) {\n        index = this.children_.length;\n      }\n\n      var component;\n      var componentName; // If child is a string, create component with options\n\n      if (typeof child === 'string') {\n        componentName = toTitleCase$1(child);\n        var componentClassName = options.componentClass || componentName; // Set name through options\n\n        options.name = componentName; // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n\n        var ComponentClass = Component.getComponent(componentClassName);\n\n        if (!ComponentClass) {\n          throw new Error(\"Component \" + componentClassName + \" does not exist\");\n        } // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n\n\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n\n        component = new ComponentClass(this.player_ || this, options); // child is a component instance\n      } else {\n        component = child;\n      }\n\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      } // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n\n\n      componentName = componentName || component.name && toTitleCase$1(component.name());\n\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n        this.childNameIndex_[toLowerCase(componentName)] = component;\n      } // Add the UI object's element to the container div (box)\n      // Having an element is not required\n\n\n      if (typeof component.el === 'function' && component.el()) {\n        // If inserting before a component, insert before that component's element\n        var refNode = null;\n\n        if (this.children_[index + 1]) {\n          // Most children are components, but the video tech is an HTML element\n          if (this.children_[index + 1].el_) {\n            refNode = this.children_[index + 1].el_;\n          } else if (isEl(this.children_[index + 1])) {\n            refNode = this.children_[index + 1];\n          }\n        }\n\n        this.contentEl().insertBefore(component.el(), refNode);\n      } // Return so it can stored on parent object if desired.\n\n\n      return component;\n    }\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      if (!component || !this.children_) {\n        return;\n      }\n\n      var childFound = false;\n\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!childFound) {\n        return;\n      }\n\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[toTitleCase$1(component.name())] = null;\n      this.childNameIndex_[toLowerCase(component.name())] = null;\n      var compEl = component.el();\n\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    ;\n\n    _proto.initChildren = function initChildren() {\n      var _this2 = this;\n\n      var children = this.options_.children;\n\n      if (children) {\n        // `this` is `parent`\n        var parentOptions = this.options_;\n\n        var handleAdd = function handleAdd(child) {\n          var name = child.name;\n          var opts = child.opts; // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          } // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n\n\n          if (opts === false) {\n            return;\n          } // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n\n\n          if (opts === true) {\n            opts = {};\n          } // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n\n\n          opts.playerOptions = _this2.options_.playerOptions; // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n\n          var newChild = _this2.addChild(name, opts);\n\n          if (newChild) {\n            _this2[name] = newChild;\n          }\n        }; // Allow for an array of children details to passed in the options\n\n\n        var workingChildren;\n        var Tech = Component.getComponent('Tech');\n\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n\n        workingChildren // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n\n            return child === wchild.name;\n          });\n        })).map(function (child) {\n          var name;\n          var opts;\n\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || _this2.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n\n          return {\n            name: name,\n            opts: opts\n          };\n        }).filter(function (child) {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n    /**\n     * Builds the default DOM class name. Should be overriden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @return {Component}\n     *         Returns itself; method can be chained.\n     */\n    ;\n\n    _proto.ready = function ready(fn, sync) {\n      if (sync === void 0) {\n        sync = false;\n      }\n\n      if (!fn) {\n        return;\n      }\n\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    ;\n\n    _proto.triggerReady = function triggerReady() {\n      this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n      this.setTimeout(function () {\n        var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n        this.readyQueue_ = [];\n\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        } // Allow for using event listeners also\n\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('ready');\n      }, 1);\n    }\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$ = function $$1(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    ;\n\n    _proto.$$ = function $$$1(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    ;\n\n    _proto.hasClass = function hasClass$1(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {string} classToAdd\n     *        CSS class name to add\n     */\n    ;\n\n    _proto.addClass = function addClass$1(classToAdd) {\n      addClass(this.el_, classToAdd);\n    }\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {string} classToRemove\n     *        CSS class name to remove\n     */\n    ;\n\n    _proto.removeClass = function removeClass$1(classToRemove) {\n      removeClass(this.el_, classToRemove);\n    }\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    ;\n\n    _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    ;\n\n    _proto.show = function show() {\n      this.removeClass('vjs-hidden');\n    }\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    ;\n\n    _proto.hide = function hide() {\n      this.addClass('vjs-hidden');\n    }\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.lockShowing = function lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unlockShowing = function unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attibute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    ;\n\n    _proto.getAttribute = function getAttribute$1(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    ;\n\n    _proto.setAttribute = function setAttribute$1(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    ;\n\n    _proto.removeAttribute = function removeAttribute$1(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *           postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.width = function width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *         postpixed with '%' or 'px'.\n     */\n    ;\n\n    _proto.height = function height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    ;\n\n    _proto.dimensions = function dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number}\n     *         The dimension when getting or 0 if unset\n     */\n    ;\n\n    _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        } // Check if using css width/height (% or px) and adjust\n\n\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {EventTarget~Event}\n           */\n          this.trigger('componentresize');\n        }\n\n        return;\n      } // Not setting a value, so getting it\n      // Make sure element exists\n\n\n      if (!this.el_) {\n        return 0;\n      } // Get dimension value from style\n\n\n      var val = this.el_.style[widthOrHeight];\n      var pxIndex = val.indexOf('px');\n\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      } // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n\n\n      return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n    }\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    ;\n\n    _proto.currentDimension = function currentDimension(widthOrHeight) {\n      var computedWidthOrHeight = 0;\n\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n\n      computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n\n      if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n        var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n        computedWidthOrHeight = this.el_[rule];\n      }\n\n      return computedWidthOrHeight;\n    }\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    ;\n\n    _proto.currentDimensions = function currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    ;\n\n    _proto.currentWidth = function currentWidth() {\n      return this.currentDimension('width');\n    }\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    ;\n\n    _proto.currentHeight = function currentHeight() {\n      return this.currentDimension('height');\n    }\n    /**\n     * Set the focus to this component\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.el_.focus();\n    }\n    /**\n     * Remove the focus from this component\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.el_.blur();\n    }\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser. Exclude Tab for focus trapping.\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.stopPropagation();\n        }\n\n        this.player_.handleKeyDown(event);\n      }\n    }\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @private\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    ;\n\n    _proto.emitTapEvents = function emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      var touchStart = 0;\n      var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n\n      var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n      var touchTimeThreshold = 200;\n      var couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n          touchStart = window.performance.now(); // Reset couldBeTap tracking\n\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          var xdiff = event.touches[0].pageX - firstTouch.pageX;\n          var ydiff = event.touches[0].pageY - firstTouch.pageY;\n          var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n\n      var noTap = function noTap() {\n        couldBeTap = false;\n      }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n\n      this.on('touchend', function (event) {\n        firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          var touchTime = window.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('tap'); // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    ;\n\n    _proto.enableTouchActivity = function enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      } // listener for reporting that the user is active\n\n\n      var report = bind(this.player(), this.player().reportUserActivity);\n      var touchHolding;\n      this.on('touchstart', function () {\n        report(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n        touchHolding = this.setInterval(report, 250);\n      });\n\n      var touchEnd = function touchEnd(event) {\n        report(); // stop the interval that maintains activity if the touch is holding\n\n        this.clearInterval(touchHolding);\n      };\n\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    ;\n\n    _proto.setTimeout = function setTimeout(fn, timeout) {\n      var _this3 = this;\n\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId;\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      timeoutId = window.setTimeout(function () {\n        if (_this3.setTimeoutIds_.has(timeoutId)) {\n          _this3.setTimeoutIds_[\"delete\"](timeoutId);\n        }\n\n        fn();\n      }, timeout);\n      this.setTimeoutIds_.add(timeoutId);\n      return timeoutId;\n    }\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    ;\n\n    _proto.clearTimeout = function clearTimeout(timeoutId) {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_[\"delete\"](timeoutId);\n        window.clearTimeout(timeoutId);\n      }\n\n      return timeoutId;\n    }\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    ;\n\n    _proto.setInterval = function setInterval(fn, interval) {\n      fn = bind(this, fn);\n      this.clearTimersOnDispose_();\n      var intervalId = window.setInterval(fn, interval);\n      this.setIntervalIds_.add(intervalId);\n      return intervalId;\n    }\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    ;\n\n    _proto.clearInterval = function clearInterval(intervalId) {\n      if (this.setIntervalIds_.has(intervalId)) {\n        this.setIntervalIds_[\"delete\"](intervalId);\n        window.clearInterval(intervalId);\n      }\n\n      return intervalId;\n    }\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    ;\n\n    _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n      var _this4 = this;\n\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.setTimeout(fn, 1000 / 60);\n      }\n\n      this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n\n      var id;\n      fn = bind(this, fn);\n      id = window.requestAnimationFrame(function () {\n        if (_this4.rafIds_.has(id)) {\n          _this4.rafIds_[\"delete\"](id);\n        }\n\n        fn();\n      });\n      this.rafIds_.add(id);\n      return id;\n    }\n    /**\n     * Request an animation frame, but only one named animation\n     * frame will be queued. Another will never be added until\n     * the previous one finishes.\n     *\n     * @param {string} name\n     *        The name to give this requestAnimationFrame\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     */\n    ;\n\n    _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n      var _this5 = this;\n\n      if (this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.clearTimersOnDispose_();\n      fn = bind(this, fn);\n      var id = this.requestAnimationFrame(function () {\n        fn();\n\n        if (_this5.namedRafs_.has(name)) {\n          _this5.namedRafs_[\"delete\"](name);\n        }\n      });\n      this.namedRafs_.set(name, id);\n      return name;\n    }\n    /**\n     * Cancels a current named animation frame if it exists.\n     *\n     * @param {string} name\n     *        The name of the requestAnimationFrame to cancel.\n     */\n    ;\n\n    _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n      if (!this.namedRafs_.has(name)) {\n        return;\n      }\n\n      this.cancelAnimationFrame(this.namedRafs_.get(name));\n      this.namedRafs_[\"delete\"](name);\n    }\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    ;\n\n    _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n      // Fall back to using a timer.\n      if (!this.supportsRaf_) {\n        return this.clearTimeout(id);\n      }\n\n      if (this.rafIds_.has(id)) {\n        this.rafIds_[\"delete\"](id);\n        window.cancelAnimationFrame(id);\n      }\n\n      return id;\n    }\n    /**\n     * A function to setup `requestAnimationFrame`, `setTimeout`,\n     * and `setInterval`, clearing on dispose.\n     *\n     * > Previously each timer added and removed dispose listeners on it's own.\n     * For better performance it was decided to batch them all, and use `Set`s\n     * to track outstanding timer ids.\n     *\n     * @private\n     */\n    ;\n\n    _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n      var _this6 = this;\n\n      if (this.clearingTimersOnDispose_) {\n        return;\n      }\n\n      this.clearingTimersOnDispose_ = true;\n      this.one('dispose', function () {\n        [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n          var idName = _ref[0],\n              cancelName = _ref[1];\n\n          // for a `Set` key will actually be the value again\n          // so forEach((val, val) =>` but for maps we want to use\n          // the key.\n          _this6[idName].forEach(function (val, key) {\n            return _this6[cancelName](key);\n          });\n        });\n        _this6.clearingTimersOnDispose_ = false;\n      });\n    }\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    ;\n\n    Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n      }\n\n      var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n      var isTech = Tech && Tech.isTech(ComponentToRegister);\n      var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n      if (isTech || !isComp) {\n        var reason;\n\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n\n        throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n      }\n\n      name = toTitleCase$1(name);\n\n      if (!Component.components_) {\n        Component.components_ = {};\n      }\n\n      var Player = Component.getComponent('Player');\n\n      if (name === 'Player' && Player && Player.players) {\n        var players = Player.players;\n        var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n\n        if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n          return players[pname];\n        }).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n\n      Component.components_[name] = ComponentToRegister;\n      Component.components_[toLowerCase(name)] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {Component}\n     *         The `Component` that got registered under the given name.\n     */\n    ;\n\n    Component.getComponent = function getComponent(name) {\n      if (!name || !Component.components_) {\n        return;\n      }\n\n      return Component.components_[name];\n    };\n\n    return Component;\n  }();\n  /**\n   * Whether or not this component supports `requestAnimationFrame`.\n   *\n   * This is exposed primarily for testing purposes.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n\n  Component$1.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n  Component$1.registerComponent('Component', Component$1);\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  var assertThisInitialized = _assertThisInitialized;\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  var inheritsLoose = _inheritsLoose;\n\n  /**\n   * @file time-ranges.js\n   * @module time-ranges\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time-ranges~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n    }\n  }\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n\n\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   */\n\n\n  function createTimeRangesObj(ranges) {\n    var timeRangesObj;\n\n    if (ranges === undefined || ranges.length === 0) {\n      timeRangesObj = {\n        length: 0,\n        start: function start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end: function end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    } else {\n      timeRangesObj = {\n        length: ranges.length,\n        start: getRange.bind(null, 'start', 0, ranges),\n        end: getRange.bind(null, 'end', 1, ranges)\n      };\n    }\n\n    if (window.Symbol && window.Symbol.iterator) {\n      timeRangesObj[window.Symbol.iterator] = function () {\n        return (ranges || []).values();\n      };\n    }\n\n    return timeRangesObj;\n  }\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   */\n\n\n  function createTimeRanges(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRange` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n\n  function bufferedPercent(buffered, duration) {\n    var bufferedDuration = 0;\n    var start;\n    var end;\n\n    if (!duration) {\n      return 0;\n    }\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    for (var i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      bufferedDuration += end - start;\n    }\n\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file media-error.js\n   */\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject$1(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n\n      assign(this, value);\n    }\n\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n\n\n  MediaError.prototype.code = 0;\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n\n  MediaError.prototype.message = '';\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n\n  MediaError.prototype.status = null;\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  }; // Add types as properties on MediaError\n  // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\n  for (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n    MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n    MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n  } // jsdocs for instance/static members added above\n\n  var tuple = SafeParseTuple;\n\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, function (e) {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  var trackToJson_ = function trackToJson_(track) {\n    var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n\n\n  var textTracksToJson = function textTracksToJson(tech) {\n    var trackEls = tech.$$('track');\n    var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n      return t.track;\n    });\n    var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      var json = trackToJson_(trackEl.track);\n\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n\n\n  var jsonToTextTracks = function jsonToTextTracks(json, tech) {\n    json.forEach(function (track) {\n      var addedTrack = tech.addRemoteTextTrack(track).track;\n\n      if (!track.src && track.cues) {\n        track.cues.forEach(function (cue) {\n          return addedTrack.addCue(cue);\n        });\n      }\n    });\n    return tech.textTracks();\n  };\n\n  var textTrackConverter = {\n    textTracksToJson: textTracksToJson,\n    jsonToTextTracks: jsonToTextTracks,\n    trackToJson_: trackToJson_\n  };\n\n  var MODAL_CLASS_NAME = 'vjs-modal-dialog';\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n\n  var ModalDialog = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ModalDialog, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Mixed} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    function ModalDialog(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.close_ = function (e) {\n        return _this.close(e);\n      };\n\n      _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n      _this.closeable(!_this.options_.uncloseable);\n\n      _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n\n\n      _this.contentEl_ = createEl('div', {\n        className: MODAL_CLASS_NAME + \"-content\"\n      }, {\n        role: 'document'\n      });\n      _this.descEl_ = createEl('p', {\n        className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n        id: _this.el().getAttribute('aria-describedby')\n      });\n      textContent(_this.descEl_, _this.description());\n\n      _this.el_.appendChild(_this.descEl_);\n\n      _this.el_.appendChild(_this.contentEl_);\n\n      return _this;\n    }\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n\n\n    var _proto = ModalDialog.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': this.id() + \"_description\",\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog'\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    ;\n\n    _proto.label = function label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    ;\n\n    _proto.description = function description() {\n      var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n\n      return desc;\n    }\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    ;\n\n    _proto.open = function open() {\n      if (!this.opened_) {\n        var player = this.player();\n        /**\n          * Fired just before a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#beforemodalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('beforemodalopen');\n        this.opened_ = true; // Fill content if the modal has never opened before and\n        // never been filled.\n\n        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n          this.fill();\n        } // If the player was playing, pause it and take note of its previously\n        // playing state.\n\n\n        this.wasPlaying_ = !player.paused();\n\n        if (this.options_.pauseOnOpen && this.wasPlaying_) {\n          player.pause();\n        }\n\n        this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n        this.hadControls_ = player.controls();\n        player.controls(false);\n        this.show();\n        this.conditionalFocus_();\n        this.el().setAttribute('aria-hidden', 'false');\n        /**\n          * Fired just after a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#modalopen\n          * @type {EventTarget~Event}\n          */\n\n        this.trigger('modalopen');\n        this.hasBeenOpened_ = true;\n      }\n    }\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    ;\n\n    _proto.opened = function opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n\n      return this.opened_;\n    }\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    ;\n\n    _proto.close = function close() {\n      if (!this.opened_) {\n        return;\n      }\n\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n\n      this.off('keydown', this.handleKeyDown_);\n\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalclose');\n      this.conditionalBlur_();\n\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    ;\n\n    _proto.closeable = function closeable(value) {\n      if (typeof value === 'boolean') {\n        var closeable = this.closeable_ = !!value;\n        var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          var temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close_);\n        } // If this is being made uncloseable and has a close button, remove it.\n\n\n        if (!closeable && close) {\n          this.off(close, 'close', this.close_);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n\n      return this.closeable_;\n    }\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    ;\n\n    _proto.fill = function fill() {\n      this.fillWith(this.content());\n    }\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {Mixed} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    ;\n\n    _proto.fillWith = function fillWith(content) {\n      var contentEl = this.contentEl();\n      var parentEl = contentEl.parentNode;\n      var nextSiblingEl = contentEl.nextSibling;\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      } // make sure that the close button is last in the dialog DOM\n\n\n      var closeButton = this.getChild('closeButton');\n\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n    }\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    ;\n\n    _proto.empty = function empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('modalempty');\n    }\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {Mixed} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {Mixed}\n     *         The current content of the modal dialog\n     */\n    ;\n\n    _proto.content = function content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n\n      return this.content_;\n    }\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalFocus_ = function conditionalFocus_() {\n      var activeEl = document.activeElement;\n      var playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n\n      if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      } // exit early if it isn't a tab key\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        return;\n      }\n\n      var focusableEls = this.focusableEls_();\n      var activeEl = this.el_.querySelector(':focus');\n      var focusIndex;\n\n      for (var i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    ;\n\n    _proto.focusableEls_ = function focusableEls_() {\n      var allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, function (child) {\n        return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    };\n\n    return ModalDialog;\n  }(Component$1);\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component$1.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n\n  var TrackList = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(TrackList, _EventTarget);\n\n    /**\n     * Create an instance of this class\n     *\n     * @param {Track[]} tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    function TrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.tracks_ = [];\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'length', {\n        get: function get() {\n          return this.tracks_.length;\n        }\n      });\n\n      for (var i = 0; i < tracks.length; i++) {\n        _this.addTrack(tracks[i]);\n      }\n\n      return _this;\n    }\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = TrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      var index = this.tracks_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.tracks_[index];\n          }\n        });\n      } // Do not add duplicate tracks\n\n\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {EventTarget~Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n\n        this.trigger({\n          track: track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n      /**\n       * Triggered when a track label is changed.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n\n      track.labelchange_ = function () {\n        _this2.trigger({\n          track: track,\n          type: 'labelchange',\n          target: _this2\n        });\n      };\n\n      if (isEvented(track)) {\n        track.addEventListener('labelchange', track.labelchange_);\n      }\n    }\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    ;\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      var track;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n\n          if (track.off) {\n            track.off();\n          }\n\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n\n      if (!track) {\n        return;\n      }\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n\n\n      this.trigger({\n        track: track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    ;\n\n    _proto.getTrackById = function getTrackById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var track = this[i];\n\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TrackList;\n  }(EventTarget$2);\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @private\n   */\n\n\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack',\n    labelchange: 'labelchange'\n  }; // emulate attribute EventHandler support to allow for feature detection\n\n  for (var event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers$1 = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another audio track is enabled, disable it\n\n\n      list[i].enabled = false;\n    }\n  };\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n\n\n  var AudioTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(AudioTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    function AudioTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      return _this;\n    }\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = AudioTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.enabled) {\n        disableOthers$1(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.enabledChange_ = function () {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers$1(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('enabledchange', track.enabledChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    };\n\n    return AudioTrackList;\n  }(TrackList);\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n\n  var disableOthers = function disableOthers(list, track) {\n    for (var i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      } // another video track is enabled, disable it\n\n\n      list[i].selected = false;\n    }\n  };\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n\n\n  var VideoTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(VideoTrackList, _TrackList);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    function VideoTrackList(tracks) {\n      var _this;\n\n      if (tracks === void 0) {\n        tracks = [];\n      }\n\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n\n      _this = _TrackList.call(this, tracks) || this;\n      _this.changing_ = false;\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selectedIndex', {\n        get: function get() {\n          for (var _i = 0; _i < this.length; _i++) {\n            if (this[_i].selected) {\n              return _i;\n            }\n          }\n\n          return -1;\n        },\n        set: function set() {}\n      });\n      return _this;\n    }\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n\n\n    var _proto = VideoTrackList.prototype;\n\n    _proto.addTrack = function addTrack(track) {\n      var _this2 = this;\n\n      if (track.selected) {\n        disableOthers(this, track);\n      }\n\n      _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n      if (!track.addEventListener) {\n        return;\n      }\n\n      track.selectedChange_ = function () {\n        if (_this2.changing_) {\n          return;\n        }\n\n        _this2.changing_ = true;\n        disableOthers(_this2, track);\n        _this2.changing_ = false;\n\n        _this2.trigger('change');\n      };\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('selectedchange', track.selectedChange_);\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack);\n\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    };\n\n    return VideoTrackList;\n  }(TrackList);\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n\n  var TextTrackList = /*#__PURE__*/function (_TrackList) {\n    inheritsLoose(TextTrackList, _TrackList);\n\n    function TextTrackList() {\n      return _TrackList.apply(this, arguments) || this;\n    }\n\n    var _proto = TextTrackList.prototype;\n\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    _proto.addTrack = function addTrack(track) {\n      var _this = this;\n\n      _TrackList.prototype.addTrack.call(this, track);\n\n      if (!this.queueChange_) {\n        this.queueChange_ = function () {\n          return _this.queueTrigger('change');\n        };\n      }\n\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = function () {\n          return _this.trigger('selectedlanguagechange');\n        };\n      }\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n\n\n      track.addEventListener('modechange', this.queueChange_);\n      var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    };\n\n    _proto.removeTrack = function removeTrack(rtrack) {\n      _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    };\n\n    return TextTrackList;\n  }(TrackList);\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  var HtmlTrackElementList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    function HtmlTrackElementList(trackElements) {\n      if (trackElements === void 0) {\n        trackElements = [];\n      }\n\n      this.trackElements_ = [];\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.trackElements_.length;\n        }\n      });\n\n      for (var i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n\n\n    var _proto = HtmlTrackElementList.prototype;\n\n    _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n      var index = this.trackElements_.length;\n\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get: function get() {\n            return this.trackElements_[index];\n          }\n        });\n      } // Do not add duplicate elements\n\n\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    ;\n\n    _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n      var trackElement_;\n\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n\n      return trackElement_;\n    }\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n      for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    };\n\n    return HtmlTrackElementList;\n  }();\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  var TextTrackCueList = /*#__PURE__*/function () {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    function TextTrackCueList(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n\n      Object.defineProperty(this, 'length', {\n        get: function get() {\n          return this.length_;\n        }\n      });\n    }\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n\n\n    var _proto = TextTrackCueList.prototype;\n\n    _proto.setCues_ = function setCues_(cues) {\n      var oldLength = this.length || 0;\n      var i = 0;\n      var l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n\n      var defineProp = function defineProp(index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get: function get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n\n      if (oldLength < l) {\n        i = oldLength;\n\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    ;\n\n    _proto.getCueById = function getCueById(id) {\n      var result = null;\n\n      for (var i = 0, l = this.length; i < l; i++) {\n        var cue = this[i];\n\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n\n      return result;\n    };\n\n    return TextTrackCueList;\n  }();\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  var VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n\n  var AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n\n  var TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n\n  var TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n\n  var Track = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(Track, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    function Track(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        language: options.language || ''\n      };\n      var label = options.label || '';\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      var _loop = function _loop(key) {\n        Object.defineProperty(assertThisInitialized(_this), key, {\n          get: function get() {\n            return trackProps[key];\n          },\n          set: function set() {}\n        });\n      };\n\n      for (var key in trackProps) {\n        _loop(key);\n      }\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @fires Track#labelchange\n       */\n\n\n      Object.defineProperty(assertThisInitialized(_this), 'label', {\n        get: function get() {\n          return label;\n        },\n        set: function set(newLabel) {\n          if (newLabel !== label) {\n            label = newLabel;\n            /**\n             * An event that fires when label changes on this track.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event Track#labelchange\n             * @type {EventTarget~Event}\n             */\n\n            this.trigger('labelchange');\n          }\n        }\n      });\n      return _this;\n    }\n\n    return Track;\n  }(EventTarget$2);\n\n  /**\n   * @file url.js\n   * @module url\n   */\n\n  /**\n   * @typedef {Object} url:URLObject\n   *\n   * @property {string} protocol\n   *           The protocol of the url that was parsed.\n   *\n   * @property {string} hostname\n   *           The hostname of the url that was parsed.\n   *\n   * @property {string} port\n   *           The port of the url that was parsed.\n   *\n   * @property {string} pathname\n   *           The pathname of the url that was parsed.\n   *\n   * @property {string} search\n   *           The search query of the url that was parsed.\n   *\n   * @property {string} hash\n   *           The hash of the url that was parsed.\n   *\n   * @property {string} host\n   *           The host of the url that was parsed.\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {String} url\n   *           The url to parse\n   *\n   * @return   {url:URLObject}\n   *           An object of url details\n   */\n  var parseUrl = function parseUrl(url) {\n    // This entire method can be replace with URL once we are able to drop IE11\n    var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n    var a = document.createElement('a');\n    a.href = url; // Copy the specific URL properties to a new object\n    // This is also needed for IE because the anchor loses its\n    // properties when it's removed from the dom\n\n    var details = {};\n\n    for (var i = 0; i < props.length; i++) {\n      details[props[i]] = a[props[i]];\n    } // IE adds the port to the host property unlike everyone else. If\n    // a port identifier is added for standard ports, strip it.\n\n\n    if (details.protocol === 'http:') {\n      details.host = details.host.replace(/:80$/, '');\n    }\n\n    if (details.protocol === 'https:') {\n      details.host = details.host.replace(/:443$/, '');\n    }\n\n    if (!details.protocol) {\n      details.protocol = window.location.protocol;\n    }\n    /* istanbul ignore if */\n\n\n    if (!details.host) {\n      details.host = window.location.host;\n    }\n\n    return details;\n  };\n  /**\n   * Get absolute version of relative URL. Used to tell Flash the correct URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   *\n   * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n   */\n\n  var getAbsoluteURL = function getAbsoluteURL(url) {\n    // Check if absolute URL\n    if (!url.match(/^https?:\\/\\//)) {\n      // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n      // add the url to an anchor and let the browser parse the URL\n      var a = document.createElement('a');\n      a.href = url;\n      url = a.href;\n    }\n\n    return url;\n  };\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n\n  var getFileExtension = function getFileExtension(path) {\n    if (typeof path === 'string') {\n      var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n      var pathParts = splitPathRe.exec(path);\n\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @param    {Object} [winLoc]\n   *           the domain to check the url against, defaults to window.location\n   *\n   * @param    {string} [winLoc.protocol]\n   *           The window location protocol defaults to window.location.protocol\n   *\n   * @param    {string} [winLoc.host]\n   *           The window location host defaults to window.location.host\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n\n  var isCrossOrigin = function isCrossOrigin(url, winLoc) {\n    if (winLoc === void 0) {\n      winLoc = window.location;\n    }\n\n    var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n    var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n    // IE8 doesn't know location.origin, so we won't rely on it here\n\n    var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n    return crossOrigin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isFunction_1 = isFunction;\n  var toString = Object.prototype.toString;\n\n  function isFunction(fn) {\n    if (!fn) {\n      return false;\n    }\n\n    var string = toString.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  var httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    if (decodeResponseBody === void 0) {\n      decodeResponseBody = false;\n    }\n\n    return function (err, response, responseBody) {\n      // if the XHR failed, return that error\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n\n        if (decodeResponseBody) {\n          if (window_1.TextDecoder) {\n            var charset = getCharset(response.headers && response.headers['content-type']);\n\n            try {\n              cause = new TextDecoder(charset).decode(responseBody);\n            } catch (e) {}\n          } else {\n            cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n          }\n        }\n\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n\n      callback(null, responseBody);\n    };\n  };\n\n  function getCharset(contentTypeHeader) {\n    if (contentTypeHeader === void 0) {\n      contentTypeHeader = '';\n    }\n\n    return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n      var _contentType$split = contentType.split('='),\n          type = _contentType$split[0],\n          value = _contentType$split[1];\n\n      if (type.trim() === 'charset') {\n        return value.trim();\n      }\n\n      return charset;\n    }, 'utf-8');\n  }\n\n  var httpHandler = httpResponseHandler;\n\n  createXHR.httpHandler = httpHandler;\n  /**\n   * @license\n   * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n   * Copyright (c) 2014 David Björklund\n   * Available under the MIT license\n   * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n   */\n\n  var parseHeaders = function parseHeaders(headers) {\n    var result = {};\n\n    if (!headers) {\n      return result;\n    }\n\n    headers.trim().split('\\n').forEach(function (row) {\n      var index = row.indexOf(':');\n      var key = row.slice(0, index).trim().toLowerCase();\n      var value = row.slice(index + 1).trim();\n\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (Array.isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n\n  var lib = createXHR; // Allow use of default import syntax in TypeScript\n\n  var default_1 = createXHR;\n  createXHR.XMLHttpRequest = window_1.XMLHttpRequest || noop$1;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window_1.XDomainRequest;\n  forEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n\n  function forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n\n    return true;\n  }\n\n  function initParams(uri, options, callback) {\n    var params = uri;\n\n    if (isFunction_1(options)) {\n      callback = options;\n\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = _extends_1({}, options, {\n        uri: uri\n      });\n    }\n\n    params.callback = callback;\n    return params;\n  }\n\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    }\n\n    var called = false;\n\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n\n    function readystatechange() {\n      if (xhr.readyState === 4) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n\n      return body;\n    }\n\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n\n      evt.statusCode = 0;\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n\n      var response = failureResponse;\n      var err = null;\n\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      }\n\n      return callback(err, response, response.body);\n    }\n\n    var xhr = options.xhr || null;\n\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n\n    xhr.onabort = function () {\n      aborted = true;\n    };\n\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n\n    xhr.send(body || null);\n    return xhr;\n  }\n\n  function getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n      if (xhr.responseType === \"document\") {\n        return xhr.responseXML;\n      }\n\n      var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n      if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML;\n      }\n    } catch (e) {}\n\n    return null;\n  }\n\n  function noop$1() {}\n  lib[\"default\"] = default_1;\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n\n  var parseCues = function parseCues(srcContent, track) {\n    var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n    var errors = [];\n\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n\n    parser.parse(srcContent);\n\n    if (errors.length > 0) {\n      if (window.console && window.console.groupCollapsed) {\n        window.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n      }\n\n      errors.forEach(function (error) {\n        return log$1.error(error);\n      });\n\n      if (window.console && window.console.groupEnd) {\n        window.console.groupEnd();\n      }\n    }\n\n    parser.flush();\n  };\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n\n\n  var loadTrack = function loadTrack(src, track) {\n    var opts = {\n      uri: src\n    };\n    var crossOrigin = isCrossOrigin(src);\n\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n\n    var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n    if (withCredentials) {\n      opts.withCredentials = withCredentials;\n    }\n\n    lib(opts, bind(this, function (err, response, responseBody) {\n      if (err) {\n        return log$1.error(err, response);\n      }\n\n      track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n\n      if (typeof window.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n            if (event.type === 'vttjserror') {\n              log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n              return;\n            }\n\n            return parseCues(responseBody, track);\n          });\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n\n\n  var TextTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(TextTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function TextTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      var mode = TextTrackMode[settings.mode] || 'disabled';\n      var default_ = settings[\"default\"];\n\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n\n      _this = _Track.call(this, settings) || this;\n      _this.tech_ = settings.tech;\n      _this.cues_ = [];\n      _this.activeCues_ = [];\n      _this.preload_ = _this.tech_.preloadTextTracks !== false;\n      var cues = new TextTrackCueList(_this.cues_);\n      var activeCues = new TextTrackCueList(_this.activeCues_);\n      var changed = false;\n      _this.timeupdateHandler = bind(assertThisInitialized(_this), function (event) {\n        if (event === void 0) {\n          event = {};\n        }\n\n        if (this.tech_.isDisposed()) {\n          return;\n        }\n\n        if (!this.tech_.isReady_) {\n          if (event.type !== 'timeupdate') {\n            this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n          }\n\n          return;\n        } // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n        this.activeCues = this.activeCues;\n\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n      });\n\n      var disposeHandler = function disposeHandler() {\n        _this.stopTracking();\n      };\n\n      _this.tech_.one('dispose', disposeHandler);\n\n      if (mode !== 'disabled') {\n        _this.startTracking();\n      }\n\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        \"default\": {\n          get: function get() {\n            return default_;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get: function get() {\n            return mode;\n          },\n          set: function set(newMode) {\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n\n            if (mode === newMode) {\n              return;\n            }\n\n            mode = newMode;\n\n            if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n              // On-demand load.\n              loadTrack(this.src, this);\n            }\n\n            this.stopTracking();\n\n            if (mode !== 'disabled') {\n              this.startTracking();\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {EventTarget~Event}\n             */\n\n\n            this.trigger('modechange');\n          }\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            return cues;\n          },\n          set: function set() {}\n        },\n\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get: function get() {\n            if (!this.loaded_) {\n              return null;\n            } // nothing to do\n\n\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n\n            var ct = this.tech_.currentTime();\n            var active = [];\n\n            for (var i = 0, l = this.cues.length; i < l; i++) {\n              var cue = this.cues[i];\n\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n                active.push(cue);\n              }\n            }\n\n            changed = false;\n\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (var _i = 0; _i < active.length; _i++) {\n                if (this.activeCues_.indexOf(active[_i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set: function set() {}\n        }\n      });\n\n      if (settings.src) {\n        _this.src = settings.src;\n\n        if (!_this.preload_) {\n          // Tracks will load on-demand.\n          // Act like we're loaded for other purposes.\n          _this.loaded_ = true;\n        }\n\n        if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n          loadTrack(_this.src, assertThisInitialized(_this));\n        }\n      } else {\n        _this.loaded_ = true;\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrack.prototype;\n\n    _proto.startTracking = function startTracking() {\n      // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n      this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler); // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n\n      this.tech_.on('timeupdate', this.timeupdateHandler);\n    };\n\n    _proto.stopTracking = function stopTracking() {\n      if (this.rvf_) {\n        this.tech_.cancelVideoFrameCallback(this.rvf_);\n        this.rvf_ = undefined;\n      }\n\n      this.tech_.off('timeupdate', this.timeupdateHandler);\n    }\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n    ;\n\n    _proto.addCue = function addCue(originalCue) {\n      var cue = originalCue;\n\n      if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n        cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n        for (var prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        } // make sure that `id` is copied over\n\n\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n\n      var tracks = this.tech_.textTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    ;\n\n    _proto.removeCue = function removeCue(_removeCue) {\n      var i = this.cues_.length;\n\n      while (i--) {\n        var cue = this.cues_[i];\n\n        if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    };\n\n    return TextTrack;\n  }(Track);\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   */\n\n\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n\n  var AudioTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(AudioTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    function AudioTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var enabled = false;\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'enabled', {\n        get: function get() {\n          return enabled;\n        },\n        set: function set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n\n          enabled = newEnabled;\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('enabledchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.enabled) {\n        _this.enabled = settings.enabled;\n      }\n\n      _this.loaded_ = true;\n      return _this;\n    }\n\n    return AudioTrack;\n  }(Track);\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n\n  var VideoTrack = /*#__PURE__*/function (_Track) {\n    inheritsLoose(VideoTrack, _Track);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    function VideoTrack(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var settings = mergeOptions$3(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      _this = _Track.call(this, settings) || this;\n      var selected = false;\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n\n      Object.defineProperty(assertThisInitialized(_this), 'selected', {\n        get: function get() {\n          return selected;\n        },\n        set: function set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n\n          selected = newSelected;\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('selectedchange');\n        }\n      }); // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n\n      if (settings.selected) {\n        _this.selected = settings.selected;\n      }\n\n      return _this;\n    }\n\n    return VideoTrack;\n  }(Track);\n\n  /**\n   * @memberof HTMLTrackElement\n   * @typedef {HTMLTrackElement~ReadyState}\n   * @enum {number}\n   */\n\n  var NONE = 0;\n  var LOADING = 1;\n  var LOADED = 2;\n  var ERROR = 3;\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n\n  var HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(HTMLTrackElement, _EventTarget);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    function HTMLTrackElement(options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      var readyState;\n      var track = new TextTrack(options);\n      _this.kind = track.kind;\n      _this.src = track.src;\n      _this.srclang = track.language;\n      _this.label = track.label;\n      _this[\"default\"] = track[\"default\"];\n      Object.defineProperties(assertThisInitialized(_this), {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get: function get() {\n            return readyState;\n          }\n        },\n\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get: function get() {\n            return track;\n          }\n        }\n      });\n      readyState = NONE;\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n\n      track.addEventListener('loadeddata', function () {\n        readyState = LOADED;\n\n        _this.trigger({\n          type: 'load',\n          target: assertThisInitialized(_this)\n        });\n      });\n      return _this;\n    }\n\n    return HTMLTrackElement;\n  }(EventTarget$2);\n\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n  HTMLTrackElement.NONE = NONE;\n  HTMLTrackElement.LOADING = LOADING;\n  HTMLTrackElement.LOADED = LOADED;\n  HTMLTrackElement.ERROR = ERROR;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  var NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = type + \"Tracks\";\n    NORMAL[type].privateName = type + \"Tracks_\";\n  });\n  var REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n\n  var ALL = _extends_1({}, NORMAL, REMOTE);\n\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  var minDoc = {};\n\n  var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : {};\n  var doccy;\n\n  if (typeof document !== 'undefined') {\n    doccy = document;\n  } else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n      doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n  }\n\n  var document_1 = doccy;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n  var _objCreate = Object.create || function () {\n    function F() {}\n\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n\n      F.prototype = o;\n      return new F();\n    };\n  }(); // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n\n\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  }; // Try to parse input as a time stamp.\n\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n\n    var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n\n    if (!m) {\n      return null;\n    }\n\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  } // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n\n\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function set(k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function get(k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function has(k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function alt(k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function integer(k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function percent(k, v) {\n\n      if (v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }; // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n\n      var kv = groups[i].split(keyValueDelim);\n\n      if (kv.length !== 2) {\n        continue;\n      }\n\n      var k = kv[0].trim();\n      var v = kv[1].trim();\n      callback(k, v);\n    }\n  }\n\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input; // 4.1 WebVTT timestamp\n\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      } // Remove time stamp from input.\n\n\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    } // 4.4.2 WebVTT cue settings\n\n\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n\n            break;\n\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n\n          case \"line\":\n            var vals = v.split(\",\"),\n                vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n\n            break;\n\n          case \"size\":\n            settings.percent(k, v);\n            break;\n\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/); // Apply default values for any missing fields.\n\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n\n      try {\n        cue.line = settings.get(\"line\", \"auto\");\n      } catch (e) {}\n\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100); // Safari still uses the old middle value and won't accept center\n\n      try {\n        cue.align = settings.get(\"align\", \"center\");\n      } catch (e) {\n        cue.align = settings.get(\"align\", \"middle\");\n      }\n\n      try {\n        cue.position = settings.get(\"position\", \"auto\");\n      } catch (e) {\n        cue.position = settings.get(\"position\", {\n          start: 0,\n          left: 0,\n          center: 50,\n          middle: 50,\n          end: 100,\n          right: 100\n        }, cue.align);\n      }\n\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        center: \"center\",\n        middle: \"center\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    } // 4.1 WebVTT cue timings.\n\n\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n    skipWhitespace();\n\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n    // 4.1 WebVTT cue settings list.\n\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  } // When evaluating this file as part of a Webpack bundle for server\n  // side rendering, `document` is an empty object.\n\n\n  var TEXTAREA_ELEMENT = document_1.createElement && document_1.createElement(\"textarea\");\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  }; // 5.1 default text color\n  // 5.2 default text background color is equivalent to text color with bg_ prefix\n\n  var DEFAULT_COLOR_CLASS = {\n    white: 'rgba(255,255,255,1)',\n    lime: 'rgba(0,255,0,1)',\n    cyan: 'rgba(0,255,255,1)',\n    red: 'rgba(255,0,0,1)',\n    yellow: 'rgba(255,255,0,1)',\n    magenta: 'rgba(255,0,255,1)',\n    blue: 'rgba(0,0,255,1)',\n    black: 'rgba(0,0,0,1)'\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  }; // Parse content into a document fragment.\n\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      } // Consume 'n' characters from the input.\n\n\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n\n      return consume(m[1] ? m[1] : m[2]);\n    }\n\n    function unescape(s) {\n      TEXTAREA_ELEMENT.innerHTML = s;\n      s = TEXTAREA_ELEMENT.textContent;\n      TEXTAREA_ELEMENT.textContent = \"\";\n      return s;\n    }\n\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    } // Create an element for this tag.\n\n\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n\n      if (!tagName) {\n        return null;\n      }\n\n      var element = window.document.createElement(tagName);\n      var name = TAG_ANNOTATION[type];\n\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n\n      return element;\n    }\n\n    var rootDiv = window.document.createElement(\"div\"),\n        current = rootDiv,\n        t,\n        tagStack = [];\n\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          } // Otherwise just ignore the end tag.\n\n\n          continue;\n        }\n\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n        if (!m) {\n          continue;\n        } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n        node = createElement(m[1], m[3]);\n\n        if (!node) {\n          continue;\n        } // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n\n\n        if (!shouldAdd(current, node)) {\n          continue;\n        } // Set the class list (as a list of classes, separated by space).\n\n\n        if (m[2]) {\n          var classes = m[2].split('.');\n          classes.forEach(function (cl) {\n            var bgColor = /^bg_/.test(cl); // slice out `bg_` if it's a background color\n\n            var colorName = bgColor ? cl.slice(3) : cl;\n\n            if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n              var propName = bgColor ? 'background-color' : 'color';\n              var propValue = DEFAULT_COLOR_CLASS[colorName];\n              node.style[propName] = propValue;\n            }\n          });\n          node.className = classes.join(' ');\n        } // Append the node to the current node, and enter the scope of the new\n        // node.\n\n\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      } // Text nodes are leaf nodes.\n\n\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n\n    return rootDiv;\n  } // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n        text = \"\",\n        charCode;\n\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n\n      var node = nodeStack.pop(),\n          text = node.textContent || node.innerText;\n\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n\n        return text;\n      }\n\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n\n    pushNodes(nodeStack, cueDiv);\n\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n\n    return \"ltr\";\n  }\n\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n\n    var track = cue.track,\n        trackList = track.textTrackList,\n        count = 0;\n\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n\n    return ++count * -1;\n  }\n\n  function StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n\n\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  }; // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n\n\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except middle instead of center on Safari.\n\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n\n    var textPos = 0;\n\n    switch (cue.positionAlign) {\n      case \"start\":\n        textPos = cue.position;\n        break;\n\n      case \"center\":\n        textPos = cue.position - cue.size / 2;\n        break;\n\n      case \"end\":\n        textPos = cue.position - cue.size;\n        break;\n    } // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n\n\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      }); // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  } // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n\n\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  }; // Check if this box overlaps another box, b2.\n\n\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  }; // Check if this box overlaps any other boxes in boxes.\n\n\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // Check if this box is within another box.\n\n\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  }; // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n\n\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n\n      case \"-x\":\n        return this.right > container.right;\n\n      case \"+y\":\n        return this.top < container.top;\n\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  }; // Find the percentage of the area that this box is overlapping with another\n  // box.\n\n\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n        y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n        intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  }; // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n\n\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  }; // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  }; // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n\n\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n          specifiedPosition = new BoxPosition(b),\n          percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        } // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n\n\n        if (b.within(containerBox)) {\n          return b;\n        }\n\n        var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        } // Reset the box position to the specified position.\n\n\n        b = new BoxPosition(specifiedPosition);\n      }\n\n      return bestPosition || specifiedPosition;\n    }\n\n    var boxPosition = new BoxPosition(styleBox),\n        cue = styleBox.cue,\n        linePos = computeLinePos(cue),\n        axis = []; // If we have a line number to align the cue to.\n\n    if (cue.snapToLines) {\n      var size;\n\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n\n      var step = boxPosition.lineHeight,\n          position = step * Math.round(linePos),\n          maxPosition = containerBox[size] + step,\n          initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      } // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n\n\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      } // Move the box to the specified position. This may not be its best\n      // position.\n\n\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n      switch (cue.lineAlign) {\n        case \"center\":\n          linePos -= calculatedPercentage / 2;\n          break;\n\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      } // Apply initial line position to the cue box.\n\n\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n      // to it.\n\n      boxPosition = new BoxPosition(styleBox);\n    }\n\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n\n  function WebVTT$1() {// Nothing\n  } // Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function decode(data) {\n        if (!data) {\n          return \"\";\n        }\n\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n\n    return parseContent(window, cuetext);\n  };\n\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    } // Remove all previous children.\n\n\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n\n      return false;\n    } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n\n      return;\n    }\n\n    var boxPositions = [],\n        containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n        fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n\n    (function () {\n      var styleBox, cue;\n\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n\n    if (!vttjs) {\n      vttjs = {};\n    }\n\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function reportOrThrowError(e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function parse(data) {\n      var self = this; // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n\n        var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n\n        self.buffer = buffer.substr(pos);\n        return line;\n      } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n\n            case \"width\":\n              settings.percent(k, v);\n              break;\n\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n\n              if (xy.length !== 2) {\n                break;\n              } // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n\n\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/); // Create the region, using default values for any values that were not\n        // specified.\n\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n          self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      } // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n\n\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      } // 3.2 WebVTT metadata header syntax\n\n\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      } // 5.1 WebVTT file parsing.\n\n\n      try {\n        var line;\n\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n\n          self.state = \"HEADER\";\n        }\n\n        var alreadyCollectedLine = false;\n\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n              if (!line) {\n                continue;\n              }\n\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\"); // Safari still uses the old middle value and won't accept center\n\n              try {\n                self.cue.align = \"center\";\n              } catch (e) {\n                self.cue.align = \"middle\";\n              }\n\n              self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n\n            // Process line as start of a cue.\n\n            /*falls through*/\n\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n\n              self.state = \"CUETEXT\";\n              continue;\n\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n\n              self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n              continue;\n\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n\n        self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n\n      return this;\n    },\n    flush: function flush() {\n      var self = this;\n\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        } // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n\n\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"center\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1,\n    \"auto\": 1,\n    \"line-left\": 1,\n    \"line-right\": 1\n  };\n\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = \"auto\";\n    var _positionAlign = \"auto\";\n    var _size = 100;\n    var _align = \"center\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function get() {\n          return _id;\n        },\n        set: function set(value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function get() {\n          return _pauseOnExit;\n        },\n        set: function set(value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function get() {\n          return _startTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function get() {\n          return _endTime;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function get() {\n          return _text;\n        },\n        set: function set(value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function get() {\n          return _region;\n        },\n        set: function set(value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function get() {\n          return _vertical;\n        },\n        set: function set(value) {\n          var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n          if (setting === false) {\n            throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n          }\n\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function get() {\n          return _snapToLines;\n        },\n        set: function set(value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function get() {\n          return _line;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n          }\n\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _lineAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n          } else {\n            _lineAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function get() {\n          return _position;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function get() {\n          return _positionAlign;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n          } else {\n            _positionAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function get() {\n          return _size;\n        },\n        set: function set(value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function get() {\n          return _align;\n        },\n        set: function set(value) {\n          var setting = findAlignSetting(value);\n\n          if (!setting) {\n            throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n          }\n\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n    /**\n     * Other <track> spec defined properties\n     */\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n    this.displayState = undefined;\n  }\n  /**\n   * VTTCue methods\n   */\n\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  } // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function get() {\n          return _width;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function get() {\n          return _lines;\n        },\n        set: function set(value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _regionAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorY;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function get() {\n          return _viewportAnchorX;\n        },\n        set: function set(value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function get() {\n          return _scroll;\n        },\n        set: function set(value) {\n          var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n          if (setting === false) {\n            console.warn(\"Scroll: an invalid or illegal string was specified.\");\n          } else {\n            _scroll = setting;\n          }\n        }\n      }\n    });\n  }\n\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window_1.vttjs = vttjs;\n    window_1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window_1.VTTCue;\n    var nativeVTTRegion = window_1.VTTRegion;\n\n    vttjs.shim = function () {\n      window_1.VTTCue = cueShim;\n      window_1.VTTRegion = regionShim;\n    };\n\n    vttjs.restore = function () {\n      window_1.VTTCue = nativeVTTCue;\n      window_1.VTTRegion = nativeVTTRegion;\n    };\n\n    if (!window_1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  browserIndex.WebVTT;\n  browserIndex.VTTCue;\n  browserIndex.VTTRegion;\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} Tech~SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n\n  function createTrackHelper(self, kind, label, language, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var tracks = self.textTracks();\n    options.kind = kind;\n\n    if (label) {\n      options.label = label;\n    }\n\n    if (language) {\n      options.language = language;\n    }\n\n    options.tech = self;\n    var track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link HTML5}\n   *\n   * @extends Component\n   */\n\n\n  var Tech = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Tech, _Component);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Tech(options, ready) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (ready === void 0) {\n        ready = function ready() {};\n      }\n\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      _this = _Component.call(this, null, options, ready) || this;\n\n      _this.onDurationChange_ = function (e) {\n        return _this.onDurationChange(e);\n      };\n\n      _this.trackProgress_ = function (e) {\n        return _this.trackProgress(e);\n      };\n\n      _this.trackCurrentTime_ = function (e) {\n        return _this.trackCurrentTime(e);\n      };\n\n      _this.stopTrackingCurrentTime_ = function (e) {\n        return _this.stopTrackingCurrentTime(e);\n      };\n\n      _this.disposeSourceHandler_ = function (e) {\n        return _this.disposeSourceHandler(e);\n      };\n\n      _this.queuedHanders_ = new Set(); // keep track of whether the current source has played at all to\n      // implement a very limited played()\n\n      _this.hasStarted_ = false;\n\n      _this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n\n      _this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        if (options && options[props.getterName]) {\n          _this[props.privateName] = options[props.getterName];\n        }\n      }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n      if (!_this.featuresProgressEvents) {\n        _this.manualProgressOn();\n      } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n      if (!_this.featuresTimeupdateEvents) {\n        _this.manualTimeUpdatesOn();\n      }\n\n      ['Text', 'Audio', 'Video'].forEach(function (track) {\n        if (options[\"native\" + track + \"Tracks\"] === false) {\n          _this[\"featuresNative\" + track + \"Tracks\"] = false;\n        }\n      });\n\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        _this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        _this.featuresNativeTextTracks = true;\n      }\n\n      if (!_this.featuresNativeTextTracks) {\n        _this.emulateTextTracks();\n      }\n\n      _this.preloadTextTracks = options.preloadTextTracks !== false;\n      _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n      _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n      if (!options.nativeControlsForTouch) {\n        _this.emitTapEvents();\n      }\n\n      if (_this.constructor) {\n        _this.name_ = _this.constructor.name || 'Unknown Tech';\n      }\n\n      return _this;\n    }\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n\n\n    var _proto = Tech.prototype;\n\n    _proto.triggerSourceset = function triggerSourceset(src) {\n      var _this2 = this;\n\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', function () {\n          return _this2.setTimeout(function () {\n            return _this2.triggerSourceset(src);\n          }, 1);\n        });\n      }\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger({\n        src: src,\n        type: 'sourceset'\n      });\n    }\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    ;\n\n    _proto.manualProgressOn = function manualProgressOn() {\n      this.on('durationchange', this.onDurationChange_);\n      this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n      this.one('ready', this.trackProgress_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    ;\n\n    _proto.manualProgressOff = function manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange_);\n    }\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {EventTarget~Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    ;\n\n    _proto.trackProgress = function trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n        var numBufferedPercent = this.bufferedPercent();\n\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {EventTarget~Event}\n           */\n          this.trigger('progress');\n        }\n\n        this.bufferedPercent_ = numBufferedPercent;\n\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {EventTarget~Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    ;\n\n    _proto.onDurationChange = function onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      return createTimeRanges(0, 0);\n    }\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    ;\n\n    _proto.stopTrackingProgress = function stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime_);\n      this.on('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    ;\n\n    _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime_);\n      this.off('pause', this.stopTrackingCurrentTime_);\n    }\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    ;\n\n    _proto.trackCurrentTime = function trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    ;\n\n    _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    ;\n\n    _proto.clearTracks = function clearTracks(types) {\n      var _this3 = this;\n\n      types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n      types.forEach(function (type) {\n        var list = _this3[type + \"Tracks\"]() || [];\n        var i = list.length;\n\n        while (i--) {\n          var track = list[i];\n\n          if (type === 'text') {\n            _this3.removeRemoteTextTrack(track);\n          }\n\n          list.removeTrack(track);\n        }\n      });\n    }\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    ;\n\n    _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n      var list = this.autoRemoteTextTracks_ || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.reset = function reset() {}\n    /**\n     * Get the value of `crossOrigin` from the tech.\n     *\n     * @abstract\n     *\n     * @see {Html5#crossOrigin}\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin() {}\n    /**\n     * Set the value of `crossOrigin` on the tech.\n     *\n     * @abstract\n     *\n     * @param {string} crossOrigin the crossOrigin value\n     * @see {Html5#setCrossOrigin}\n     */\n    ;\n\n    _proto.setCrossOrigin = function setCrossOrigin() {}\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    ;\n\n    _proto.error = function error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n\n      return this.error_;\n    }\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    ;\n\n    _proto.played = function played() {\n      if (this.hasStarted_) {\n        return createTimeRanges(0, 0);\n      }\n\n      return createTimeRanges();\n    }\n    /**\n     * Start playback\n     *\n     * @abstract\n     *\n     * @see {Html5#play}\n     */\n    ;\n\n    _proto.play = function play() {}\n    /**\n     * Set whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#setScrubbing}\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing() {}\n    /**\n     * Get whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#scrubbing}\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {}\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @fires Tech#timeupdate\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime() {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    ;\n\n    _proto.initTrackListeners = function initTrackListeners() {\n      var _this4 = this;\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {EventTarget~Event}\n        */\n      NORMAL.names.forEach(function (name) {\n        var props = NORMAL[name];\n\n        var trackListChanges = function trackListChanges() {\n          _this4.trigger(name + \"trackchange\");\n        };\n\n        var tracks = _this4[props.getterName]();\n\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n\n        _this4.on('dispose', function () {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    ;\n\n    _proto.addWebVttScript_ = function addWebVttScript_() {\n      var _this5 = this;\n\n      if (window.WebVTT) {\n        return;\n      } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n\n\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        } // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n\n\n        var script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n        script.onload = function () {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjsloaded');\n        };\n\n        script.onerror = function () {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          _this5.trigger('vttjserror');\n        };\n\n        this.on('dispose', function () {\n          script.onload = null;\n          script.onerror = null;\n        }); // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n\n        window.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n    /**\n     * Emulate texttracks\n     *\n     */\n    ;\n\n    _proto.emulateTextTracks = function emulateTextTracks() {\n      var _this6 = this;\n\n      var tracks = this.textTracks();\n      var remoteTracks = this.remoteTextTracks();\n\n      var handleAddTrack = function handleAddTrack(e) {\n        return tracks.addTrack(e.track);\n      };\n\n      var handleRemoveTrack = function handleRemoveTrack(e) {\n        return tracks.removeTrack(e.track);\n      };\n\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n\n      var updateDisplay = function updateDisplay() {\n        return _this6.trigger('texttrackchange');\n      };\n\n      var textTracksChanges = function textTracksChanges() {\n        updateDisplay();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n\n      return createTrackHelper(this, kind, label, language);\n    }\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      var track = mergeOptions$3(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=true]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     * @deprecated The default functionality for this function will be equivalent\n     *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n     *             also be removed.\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var _this7 = this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      var htmlTrackElement = this.createRemoteTextTrack(options);\n\n      if (manualCleanup !== true && manualCleanup !== false) {\n        // deprecation warning\n        log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n        manualCleanup = true;\n      } // store HTMLTrackElement and TextTrack to remote list\n\n\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n      if (manualCleanup !== true) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(function () {\n          return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n        });\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return {};\n    }\n    /**\n     * Attempt to create a floating video window always on top of other windows\n     * so that users may continue consuming media while they interact with other\n     * content sites, or applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise|undefined}\n     *         A promise with a Picture-in-Picture window if the browser supports\n     *         Promises (or one was passed in as an option). It returns undefined\n     *         otherwise.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return PromiseClass.reject();\n      }\n    }\n    /**\n     * A method to check for the value of the 'disablePictureInPicture' <video> property.\n     * Defaults to true, as it should be considered disabled if the tech does not support pip\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture() {\n      return true;\n    }\n    /**\n     * A method to set or unset the 'disablePictureInPicture' <video> property.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n    /**\n     * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n     *\n     * @param {function} cb\n     * @return {number} request id\n     */\n    ;\n\n    _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n      var _this8 = this;\n\n      var id = newGUID();\n\n      if (!this.isReady_ || this.paused()) {\n        this.queuedHanders_.add(id);\n        this.one('playing', function () {\n          if (_this8.queuedHanders_.has(id)) {\n            _this8.queuedHanders_[\"delete\"](id);\n\n            cb();\n          }\n        });\n      } else {\n        this.requestNamedAnimationFrame(id, cb);\n      }\n\n      return id;\n    }\n    /**\n     * A fallback implementation of cancelVideoFrameCallback\n     *\n     * @param {number} id id of callback to be cancelled\n     */\n    ;\n\n    _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n      if (this.queuedHanders_.has(id)) {\n        this.queuedHanders_[\"delete\"](id);\n      } else {\n        this.cancelNamedAnimationFrame(id);\n      }\n    }\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPoster = function setPoster() {}\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.playsinline = function playsinline() {}\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.setPlaysinline = function setPlaysinline() {}\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n    /*\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    ;\n\n    Tech.canPlayType = function canPlayType() {\n      return '';\n    }\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    Tech.canPlaySource = function canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    ;\n\n    Tech.isTech = function isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    ;\n\n    Tech.registerTech = function registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n\n      if (!Tech.isTech(tech)) {\n        throw new Error(\"Tech \" + name + \" must be a Tech\");\n      }\n\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n\n      name = toTitleCase$1(name);\n      Tech.techs_[name] = tech;\n      Tech.techs_[toLowerCase(name)] = tech;\n\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n\n      return tech;\n    }\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    ;\n\n    Tech.getTech = function getTech(name) {\n      if (!name) {\n        return;\n      }\n\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n\n      name = toTitleCase$1(name);\n\n      if (window && window.videojs && window.videojs[name]) {\n        log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n        return window.videojs[name];\n      }\n    };\n\n    return Tech;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVolumeControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default\n   */\n\n  Tech.prototype.featuresMuteControl = true;\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresFullscreenResize = false;\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresPlaybackRate = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresProgressEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresSourceset = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n   * not triggered by video-js-swf. This will be used to determine if\n   * {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresTimeupdateEvents = false;\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresNativeTextTracks = false;\n  /**\n   * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Tech.prototype.featuresVideoFrameCallback = false;\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      var handlers = _Tech.sourceHandlers;\n\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n\n      handlers.splice(index, 0, handler);\n    };\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlayType = function (type) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n\n      return '';\n    };\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n\n\n    _Tech.selectSourceHandler = function (source, options) {\n      var handlers = _Tech.sourceHandlers || [];\n      var can;\n\n      for (var i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n\n        if (can) {\n          return handlers[i];\n        }\n      }\n\n      return null;\n    };\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n\n\n    _Tech.canPlaySource = function (srcObj, options) {\n      var sh = _Tech.selectSourceHandler(srcObj, options);\n\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n\n      return '';\n    };\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n\n\n    var deferrable = ['seekable', 'seeking', 'duration'];\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      var originalFn = this[fnName];\n\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {Tech~SourceObject} source\n     *        A source object with src and type keys\n     */\n\n    _Tech.prototype.setSource = function (source) {\n      var sh = _Tech.selectSourceHandler(source, this.options_);\n\n      if (!sh) {\n        // Fall back to a native source hander when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log$1.error('No source handler found for the current source.');\n        }\n      } // Dispose any existing source handler\n\n\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler_);\n\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler_);\n    };\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n\n\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      } // always clean up auto-text tracks\n\n\n      this.cleanupAutoTextTracks();\n\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n\n        this.sourceHandler_ = null;\n      }\n    };\n  }; // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n\n\n  Component$1.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n  var middlewares = {};\n  var middlewareInstances = {};\n  var TERMINATOR = {};\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n\n  function setSource(player, src, next) {\n    player.setTimeout(function () {\n      return setSourceHelper(src, middlewares[src.type], next, player);\n    }, 1);\n  }\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n\n  function setTech(middleware, tech) {\n    middleware.forEach(function (mw) {\n      return mw.setTech && mw.setTech(tech);\n    });\n  }\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {Mixed}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`.\n   */\n\n  function set(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n\n  function mediate(middleware, tech, method, arg) {\n    if (arg === void 0) {\n      arg = null;\n    }\n\n    var callMethod = 'call' + toTitleCase$1(method);\n    var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n\n    var returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    muted: 1,\n    played: 1,\n    paused: 1,\n    seekable: 1,\n    volume: 1,\n    ended: 1\n  };\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedSetters = {\n    setCurrentTime: 1,\n    setMuted: 1,\n    setVolume: 1\n  };\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n\n  var allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n\n  function middlewareIterator(method) {\n    return function (value, mw) {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n\n      if (mw[method]) {\n        return mw[method](value);\n      }\n\n      return value;\n    };\n  }\n\n  function executeRight(mws, method, value, terminated) {\n    for (var i = mws.length - 1; i >= 0; i--) {\n      var mw = mws[i];\n\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n\n\n  function clearCacheForPlayer(player) {\n    middlewareInstances[player.id()] = null;\n  }\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n\n  function getOrCreateFactory(player, mwFactory) {\n    var mws = middlewareInstances[player.id()];\n    var mw = null;\n\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n\n    for (var i = 0; i < mws.length; i++) {\n      var _mws$i = mws[i],\n          mwf = _mws$i[0],\n          mwi = _mws$i[1];\n\n      if (mwf !== mwFactory) {\n        continue;\n      }\n\n      mw = mwi;\n    }\n\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n\n    return mw;\n  }\n\n  function setSourceHelper(src, middleware, next, player, acc, lastRun) {\n    if (src === void 0) {\n      src = {};\n    }\n\n    if (middleware === void 0) {\n      middleware = [];\n    }\n\n    if (acc === void 0) {\n      acc = [];\n    }\n\n    if (lastRun === void 0) {\n      lastRun = false;\n    }\n\n    var _middleware = middleware,\n        mwFactory = _middleware[0],\n        mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      mw.setSource(assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        } // we've succeeded, now we need to go deeper\n\n\n        acc.push(mw); // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /**\n   * Mimetypes\n   *\n   * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n\n  var MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    m4a: 'audio/mp4',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    caf: 'audio/x-caf',\n    flac: 'audio/flac',\n    oga: 'audio/ogg',\n    wav: 'audio/wav',\n    m3u8: 'application/x-mpegURL',\n    mpd: 'application/dash+xml',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n\n  var getMimetype = function getMimetype(src) {\n    if (src === void 0) {\n      src = '';\n    }\n\n    var ext = getFileExtension(src);\n    var mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n\n  var findMimetype = function findMimetype(player, src) {\n    if (!src) {\n      return '';\n    } // 1. check for the type in the `source` cache\n\n\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    } // 2. see if we have this source in our `currentSources` cache\n\n\n    var matchingSources = player.cache_.sources.filter(function (s) {\n      return s.src === src;\n    });\n\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    } // 3. look for the src url in source elements and use the type there\n\n\n    var sources = player.$$('source');\n\n    for (var i = 0; i < sources.length; i++) {\n      var s = sources[i];\n\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    } // 4. finally fallback to our list of mime types based on src url extension\n\n\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n\n  var filterSource = function filterSource(src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      var newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject$1(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src: src\n      })];\n    } else if (isObject$1(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n\n    return src;\n  };\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n\n\n  function fixSource(src) {\n    if (!src.type) {\n      var mimetype = getMimetype(src.src);\n\n      if (mimetype) {\n        src.type = mimetype;\n      }\n    }\n\n    return src;\n  }\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n\n  var MediaLoader = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MediaLoader, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function that is run when this component is ready.\n     */\n    function MediaLoader(player, options, ready) {\n      var _this;\n\n      // MediaLoader has no element\n      var options_ = mergeOptions$3({\n        createEl: false\n      }, options);\n      _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          var techName = toTitleCase$1(j[i]);\n          var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n\n          if (!techName) {\n            tech = Component$1.getComponent(techName);\n          } // Check if the browser supports this technology\n\n\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (e.g. HTML5) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n\n      return _this;\n    }\n\n    return MediaLoader;\n  }(Component$1);\n\n  Component$1.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n\n  var ClickableComponent = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ClickableComponent, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of component options.\n     *\n     * @param  {function} [options.clickHandler]\n     *         The function to call when the button is clicked / activated\n     *\n     * @param  {string} [options.controlText]\n     *         The text to set on the button\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     */\n    function ClickableComponent(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (_this.options_.controlText) {\n        _this.controlText(_this.options_.controlText);\n      }\n\n      _this.handleMouseOver_ = function (e) {\n        return _this.handleMouseOver(e);\n      };\n\n      _this.handleMouseOut_ = function (e) {\n        return _this.handleMouseOut(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.emitTapEvents();\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = ClickableComponent.prototype;\n\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      props = assign({\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n\n      if (tag === 'button') {\n        log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n      } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n      attributes = assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n      var el = createEl(tag, props, attributes);\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    ;\n\n    _proto.createControlTextEl = function createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.el();\n      }\n\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n\n      var localizedText = this.localize(text);\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n\n      if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enable this `ClickableComponent`\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n\n        this.on(['tap', 'click'], this.handleClick_);\n        this.on('keydown', this.handleKeyDown_);\n      }\n    }\n    /**\n     * Disable this `ClickableComponent`\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n\n      this.off('mouseover', this.handleMouseOver_);\n      this.off('mouseout', this.handleMouseOut_);\n      this.off(['tap', 'click'], this.handleClick_);\n      this.off('keydown', this.handleKeyDown_);\n    }\n    /**\n     * Handles language change in ClickableComponent for the player in components\n     *\n     *\n     */\n    ;\n\n    _proto.handleLanguagechange = function handleLanguagechange() {\n      this.controlText(this.controlText_);\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.options_.clickHandler) {\n        this.options_.clickHandler.call(this, arguments);\n      }\n    }\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return ClickableComponent;\n  }(Component$1);\n\n  Component$1.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n\n  var PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(PosterImage, _ClickableComponent);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PosterImage(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n\n      _this.update();\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      };\n\n      player.on('posterchange', _this.update_);\n      return _this;\n    }\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n\n\n    var _proto = PosterImage.prototype;\n\n    _proto.dispose = function dispose() {\n      this.player().off('posterchange', this.update_);\n\n      _ClickableComponent.prototype.dispose.call(this);\n    }\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = createEl('div', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      });\n      return el;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var url = this.player().poster();\n      this.setSrc(url); // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /**\n     * Set the source of the `PosterImage` depending on the display method.\n     *\n     * @param {string} url\n     *        The URL to the source for the `PosterImage`.\n     */\n    ;\n\n    _proto.setSrc = function setSrc(url) {\n      var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n      // this will throw an extra error\n\n      if (url) {\n        backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {EventTarget~Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    };\n\n    return PosterImage;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('PosterImage', PosterImage);\n\n  var darkGray = '#222';\n  var lightGray = '#ccc';\n  var fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n\n  function constructColor(color, opacity) {\n    var hex;\n\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n\n\n  var TextTrackDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TextTrackDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    function TextTrackDisplay(player, options, ready) {\n      var _this;\n\n      _this = _Component.call(this, player, options, ready) || this;\n\n      var updateDisplayHandler = function updateDisplayHandler(e) {\n        return _this.updateDisplay(e);\n      };\n\n      player.on('loadstart', function (e) {\n        return _this.toggleDisplay(e);\n      });\n      player.on('texttrackchange', updateDisplayHandler);\n      player.on('loadedmetadata', function (e) {\n        return _this.preselectTrack(e);\n      }); // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n\n      player.ready(bind(assertThisInitialized(_this), function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        window.addEventListener('orientationchange', updateDisplayHandler);\n        player.on('dispose', function () {\n          return window.removeEventListener('orientationchange', updateDisplayHandler);\n        });\n        var tracks = this.options_.playerOptions.tracks || [];\n\n        for (var i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n\n        this.preselectTrack();\n      }));\n      return _this;\n    }\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n\n\n    var _proto = TextTrackDisplay.prototype;\n\n    _proto.preselectTrack = function preselectTrack() {\n      var modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      var trackList = this.player_.textTracks();\n      var userPref = this.player_.cache_.selectedLanguage;\n      var firstDesc;\n      var firstCaptions;\n      var preferredTrack;\n\n      for (var i = 0; i < trackList.length; i++) {\n        var track = trackList[i];\n\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track; // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          } // clear everything if offTextTrackMenuItem was clicked\n\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track[\"default\"]) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      } // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n\n\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.toggleDisplay = function toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'translate': 'yes',\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    ;\n\n    _proto.clearDisplay = function clearDisplay() {\n      if (typeof window.WebVTT === 'function') {\n        window.WebVTT.processCues(window, [], this.el_);\n      }\n    }\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var tracks = this.player_.textTracks();\n      var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n      this.clearDisplay();\n\n      if (allowMultipleShowingTracks) {\n        var showingTracks = [];\n\n        for (var _i = 0; _i < tracks.length; ++_i) {\n          var track = tracks[_i];\n\n          if (track.mode !== 'showing') {\n            continue;\n          }\n\n          showingTracks.push(track);\n        }\n\n        this.updateForTrack(showingTracks);\n        return;\n      } //  Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n      var descriptionsTrack = null;\n      var captionsSubtitlesTrack = null;\n      var i = tracks.length;\n\n      while (i--) {\n        var _track = tracks[i];\n\n        if (_track.mode === 'showing') {\n          if (_track.kind === 'descriptions') {\n            descriptionsTrack = _track;\n          } else {\n            captionsSubtitlesTrack = _track;\n          }\n        }\n      }\n\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n    /**\n     * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n     *\n     * @param {TextTrack} track\n     *        Text track object containing active cues to style.\n     */\n    ;\n\n    _proto.updateDisplayState = function updateDisplayState(track) {\n      var overrides = this.player_.textTrackSettings.getValues();\n      var cues = track.activeCues;\n      var i = cues.length;\n\n      while (i--) {\n        var cue = cues[i];\n\n        if (!cue) {\n          continue;\n        }\n\n        var cueDiv = cue.displayState;\n\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n          }\n        }\n\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          var fontSize = window.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n        }\n\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    }\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack|TextTrack[]} tracks\n     *        Text track object or text track array to be added to the list.\n     */\n    ;\n\n    _proto.updateForTrack = function updateForTrack(tracks) {\n      if (!Array.isArray(tracks)) {\n        tracks = [tracks];\n      }\n\n      if (typeof window.WebVTT !== 'function' || tracks.every(function (track) {\n        return !track.activeCues;\n      })) {\n        return;\n      }\n\n      var cues = []; // push all active track cues\n\n      for (var i = 0; i < tracks.length; ++i) {\n        var track = tracks[i];\n\n        for (var j = 0; j < track.activeCues.length; ++j) {\n          cues.push(track.activeCues[j]);\n        }\n      } // removes all cues before it processes new ones\n\n\n      window.WebVTT.processCues(window, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n      for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n        var _track2 = tracks[_i2];\n\n        for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n          var cueEl = _track2.activeCues[_j].displayState;\n          addClass(cueEl, 'vjs-text-track-cue');\n          addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n          if (_track2.language) {\n            setAttribute(cueEl, 'lang', _track2.language);\n          }\n        }\n\n        if (this.player_.textTrackSettings) {\n          this.updateDisplayState(_track2);\n        }\n      }\n    };\n\n    return TextTrackDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n\n  var LoadingSpinner = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadingSpinner, _Component);\n\n    function LoadingSpinner() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = LoadingSpinner.prototype;\n\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    _proto.createEl = function createEl$1() {\n      var isAudio = this.player_.isAudio();\n      var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      var controlText = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('{1} is loading.', [playerType])\n      });\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n\n      el.appendChild(controlText);\n      return el;\n    };\n\n    return LoadingSpinner;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n\n  var Button = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(Button, _ClickableComponent);\n\n    function Button() {\n      return _ClickableComponent.apply(this, arguments) || this;\n    }\n\n    var _proto = Button.prototype;\n\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    _proto.createEl = function createEl$1(tag, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      tag = 'button';\n      props = assign({\n        className: this.buildCSSClass()\n      }, props); // Add attributes for button element\n\n      attributes = assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n\n      var el = createEl(tag, props, attributes);\n\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    }\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    ;\n\n    _proto.addChild = function addChild(child, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var className = this.constructor.name;\n      log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n      return Component$1.prototype.addChild.call(this, child, options);\n    }\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      _ClickableComponent.prototype.enable.call(this);\n\n      this.el_.removeAttribute('disabled');\n    }\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      _ClickableComponent.prototype.disable.call(this);\n\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.stopPropagation();\n        return;\n      } // Pass keypress handling up for unsupported keys\n\n\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    };\n\n    return Button;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('Button', Button);\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n\n  var BigPlayButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(BigPlayButton, _Button);\n\n    function BigPlayButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n      _this.mouseused_ = false;\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n\n\n    var _proto = BigPlayButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n      if (this.mouseused_ && event.clientX && event.clientY) {\n        var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n        silencePromise(playPromise);\n\n        if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n        // calling .focus() on the video element causes the video to go black,\n        // so we avoid it in that specific case\n        !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n          this.player_.tech(true).focus();\n        }\n\n        return;\n      }\n\n      var cb = this.player_.getChild('controlBar');\n      var playToggle = cb && cb.getChild('playToggle');\n\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n\n      var playFocus = function playFocus() {\n        return playToggle.focus();\n      };\n\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, function () {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    };\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      this.mouseused_ = false;\n\n      _Button.prototype.handleKeyDown.call(this, event);\n    };\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      this.mouseused_ = true;\n    };\n\n    return BigPlayButton;\n  }(Button);\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component$1.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n\n  var CloseButton = /*#__PURE__*/function (_Button) {\n    inheritsLoose(CloseButton, _Button);\n\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    function CloseButton(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.controlText(options && options.controlText || _this.localize('Close'));\n\n      return _this;\n    }\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n\n\n    var _proto = CloseButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    }\n    /**\n     * Event handler that is called when a `CloseButton` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Esc, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Esc button will trigger `click` event\n      if (keycode.isEventKey(event, 'Esc')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        _Button.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    return CloseButton;\n  }(Button);\n\n  Component$1.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n\n  var PlayToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PlayToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function PlayToggle(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n      options.replay = options.replay === undefined || options.replay;\n\n      _this.on(player, 'play', function (e) {\n        return _this.handlePlay(e);\n      });\n\n      _this.on(player, 'pause', function (e) {\n        return _this.handlePause(e);\n      });\n\n      if (options.replay) {\n        _this.on(player, 'ended', function (e) {\n          return _this.handleEnded(e);\n        });\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PlayToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked(event) {\n      this.removeClass('vjs-ended');\n\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay(event) {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n      this.controlText('Pause');\n    }\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    ;\n\n    _proto.handlePause = function handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n      this.controlText('Play');\n    }\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    ;\n\n    _proto.handleEnded = function handleEnded(event) {\n      var _this2 = this;\n\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n      this.controlText('Replay'); // on the next seek remove the replay button\n\n      this.one(this.player_, 'seeked', function (e) {\n        return _this2.handleSeeked(e);\n      });\n    };\n\n    return PlayToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component$1.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file format-time.js\n   * @module format-time\n   */\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  var defaultImplementation = function defaultImplementation(seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    var s = Math.floor(seconds % 60);\n    var m = Math.floor(seconds / 60 % 60);\n    var h = Math.floor(seconds / 3600);\n    var gm = Math.floor(guide / 60 % 60);\n    var gh = Math.floor(guide / 3600); // handle invalid times\n\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    } // Check if we need to show hours\n\n\n    h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  }; // Internal pointer to the current implementation.\n\n\n  var implementation = defaultImplementation;\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n  /**\n   * Resets formatTime to the default implementation.\n   */\n\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @static\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n\n  function formatTime(seconds, guide) {\n    if (guide === void 0) {\n      guide = seconds;\n    }\n\n    return implementation(seconds, guide);\n  }\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n\n  var TimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.on(player, ['timeupdate', 'ended'], function (e) {\n        return _this.updateContent(e);\n      });\n\n      _this.updateTextNode_();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var className = this.buildCSSClass();\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: className + \" vjs-time-control vjs-control\"\n      });\n\n      var span = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize(this.labelText_) + \"\\xA0\"\n      }, {\n        role: 'presentation'\n      });\n      el.appendChild(span);\n      this.contentEl_ = createEl('span', {\n        className: className + \"-display\"\n      }, {\n        // tell screen readers not to automatically read the time as it changes\n        'aria-live': 'off',\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        'role': 'presentation'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Updates the time display text node with a new time\n     *\n     * @param {number} [time=0] the time to update to\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateTextNode_ = function updateTextNode_(time) {\n      var _this2 = this;\n\n      if (time === void 0) {\n        time = 0;\n      }\n\n      time = formatTime(time);\n\n      if (this.formattedTime_ === time) {\n        return;\n      }\n\n      this.formattedTime_ = time;\n      this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n        if (!_this2.contentEl_) {\n          return;\n        }\n\n        var oldNode = _this2.textNode_;\n\n        if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n          oldNode = null;\n          log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n        }\n\n        _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n        if (!_this2.textNode_) {\n          return;\n        }\n\n        if (oldNode) {\n          _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n        } else {\n          _this2.contentEl_.appendChild(_this2.textNode_);\n        }\n      });\n    }\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {};\n\n    return TimeDisplay;\n  }(Component$1);\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  TimeDisplay.prototype.labelText_ = 'Time';\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component$1.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n\n  var CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n    function CurrentTimeDisplay() {\n      return _TimeDisplay.apply(this, arguments) || this;\n    }\n\n    var _proto = CurrentTimeDisplay.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-current-time';\n    }\n    /**\n     * Update current time display\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      var time;\n\n      if (this.player_.ended()) {\n        time = this.player_.duration();\n      } else {\n        time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return CurrentTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n\n  var DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(DurationDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function DurationDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      var updateContent = function updateContent(e) {\n        return _this.updateContent(e);\n      }; // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n\n\n      _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n      _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n\n\n      _this.on(player, 'loadedmetadata', updateContent);\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = DurationDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-duration';\n    }\n    /**\n     * Update duration time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      var duration = this.player_.duration();\n      this.updateTextNode_(duration);\n    };\n\n    return DurationDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DurationDisplay.prototype.labelText_ = 'Duration';\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component$1.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n\n  var TimeDivider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeDivider, _Component);\n\n    function TimeDivider() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = TimeDivider.prototype;\n\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-control vjs-time-divider'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n\n      var div = _Component.prototype.createEl.call(this, 'div');\n\n      var span = _Component.prototype.createEl.call(this, 'span', {\n        textContent: '/'\n      });\n\n      div.appendChild(span);\n      el.appendChild(div);\n      return el;\n    };\n\n    return TimeDivider;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n\n  var RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n    inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function RemainingTimeDisplay(player, options) {\n      var _this;\n\n      _this = _TimeDisplay.call(this, player, options) || this;\n\n      _this.on(player, 'durationchange', function (e) {\n        return _this.updateContent(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = RemainingTimeDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var el = _TimeDisplay.prototype.createEl.call(this);\n\n      if (this.options_.displayNegative !== false) {\n        el.insertBefore(createEl('span', {}, {\n          'aria-hidden': true\n        }, '-'), this.contentEl_);\n      }\n\n      return el;\n    }\n    /**\n     * Update remaining time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateContent = function updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      }\n\n      var time; // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n\n      if (this.player_.ended()) {\n        time = 0;\n      } else if (this.player_.remainingTimeDisplay) {\n        time = this.player_.remainingTimeDisplay();\n      } else {\n        time = this.player_.remainingTime();\n      }\n\n      this.updateTextNode_(time);\n    };\n\n    return RemainingTimeDisplay;\n  }(TimeDisplay);\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @private\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var LiveDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LiveDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.updateShowing();\n\n      _this.on(_this.player(), 'durationchange', function (e) {\n        return _this.updateShowing(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LiveDisplay.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-live-control vjs-control'\n      });\n\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display'\n      }, {\n        'aria-live': 'off'\n      });\n      this.contentEl_.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('Stream Type') + \"\\xA0\"\n      }));\n      this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n      el.appendChild(this.contentEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    ;\n\n    _proto.updateShowing = function updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    };\n\n    return LiveDisplay;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n\n  var SeekToLive = /*#__PURE__*/function (_Button) {\n    inheritsLoose(SeekToLive, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekToLive(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.updateLiveEdgeStatus();\n\n      if (_this.player_.liveTracker) {\n        _this.updateLiveEdgeStatusHandler_ = function (e) {\n          return _this.updateLiveEdgeStatus(e);\n        };\n\n        _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = SeekToLive.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Button.prototype.createEl.call(this, 'button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        textContent: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    ;\n\n    _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    ;\n\n    _proto.handleClick = function handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n    /**\n     * Dispose of the element and stop tracking\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n\n      this.textEl_ = null;\n\n      _Button.prototype.dispose.call(this);\n    };\n\n    return SeekToLive;\n  }(Button);\n\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component$1.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * Keep a number between a min and a max value\n   *\n   * @param {number} number\n   *        The number to clamp\n   *\n   * @param {number} min\n   *        The minimum value\n   * @param {number} max\n   *        The maximum value\n   *\n   * @return {number}\n   *         the clamped number\n   */\n  var clamp = function clamp(number, min, max) {\n    number = Number(number);\n    return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n  };\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n\n  var Slider = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Slider, _Component);\n\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    function Slider(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      _this.handleMouseDown_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.handleMouseUp_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleKeyDown_ = function (e) {\n        return _this.handleKeyDown(e);\n      };\n\n      _this.handleClick_ = function (e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMouseMove_ = function (e) {\n        return _this.handleMouseMove(e);\n      };\n\n      _this.update_ = function (e) {\n        return _this.update(e);\n      }; // Set property names to bar to match with the child Slider class is looking for\n\n\n      _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n      _this.vertical(!!_this.options_.vertical);\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n\n\n    var _proto = Slider.prototype;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    ;\n\n    _proto.enable = function enable() {\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on('mousedown', this.handleMouseDown_);\n      this.on('touchstart', this.handleMouseDown_);\n      this.on('keydown', this.handleKeyDown_);\n      this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n      this.on(this.player_, 'controlsvisible', this.update);\n\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    ;\n\n    _proto.disable = function disable() {\n      if (!this.enabled()) {\n        return;\n      }\n\n      var doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown_);\n      this.off('touchstart', this.handleMouseDown_);\n      this.off('keydown', this.handleKeyDown_);\n      this.off('click', this.handleClick_);\n      this.off(this.player_, 'controlsvisible', this.update_);\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n\n      this.enabled_ = false;\n    }\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl(type, props, attributes) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = assign({\n        tabIndex: 0\n      }, props);\n      attributes = assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100,\n        'tabIndex': 0\n      }, attributes);\n      return _Component.prototype.createEl.call(this, type, props, attributes);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.bar.el_.ownerDocument;\n\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      } // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintented scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove_);\n      this.on(doc, 'mouseup', this.handleMouseUp_);\n      this.on(doc, 'touchmove', this.handleMouseMove_);\n      this.on(doc, 'touchend', this.handleMouseUp_);\n      this.handleMouseMove(event, true);\n    }\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {}\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp() {\n      var doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.update();\n    }\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    ;\n\n    _proto.update = function update() {\n      var _this2 = this;\n\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      // If there's no bar...\n      if (!this.el_ || !this.bar) {\n        return;\n      } // clamp progress between 0 and 1\n      // and only round to four decimal places, as we round to two below\n\n\n      var progress = this.getProgress();\n\n      if (progress === this.progress_) {\n        return progress;\n      }\n\n      this.progress_ = progress;\n      this.requestNamedAnimationFrame('Slider#update', function () {\n        // Set the new bar width or height\n        var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n        _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n      });\n      return progress;\n    }\n    /**\n     * Get the percentage of the bar that should be filled\n     * but clamped and rounded.\n     *\n     * @return {number}\n     *         percentage filled that the slider is\n     */\n    ;\n\n    _proto.getProgress = function getProgress() {\n      return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n    }\n    /**\n     * Calculate distance for slider\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    ;\n\n    _proto.calculateDistance = function calculateDistance(event) {\n      var position = getPointerPosition(this.el_, event);\n\n      if (this.vertical()) {\n        return position.y;\n      }\n\n      return position.x;\n    }\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {EventTarget~Event} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Component.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    ;\n\n    _proto.vertical = function vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n\n      this.vertical_ = !!bool;\n\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    };\n\n    return Slider;\n  }(Component$1);\n\n  Component$1.registerComponent('Slider', Slider);\n\n  var percentify = function percentify(time, end) {\n    return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n  };\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n\n\n  var LoadProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LoadProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function LoadProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.partEls_ = [];\n\n      _this.on(player, 'progress', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = LoadProgressBar.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-load-progress'\n      });\n\n      var wrapper = createEl('span', {\n        className: 'vjs-control-text'\n      });\n      var loadedText = createEl('span', {\n        textContent: this.localize('Loaded')\n      });\n      var separator = document.createTextNode(': ');\n      this.percentageEl_ = createEl('span', {\n        className: 'vjs-control-text-loaded-percentage',\n        textContent: '0%'\n      });\n      el.appendChild(wrapper);\n      wrapper.appendChild(loadedText);\n      wrapper.appendChild(separator);\n      wrapper.appendChild(this.percentageEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.partEls_ = null;\n      this.percentageEl_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Update progress bar\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n        var liveTracker = _this2.player_.liveTracker;\n\n        var buffered = _this2.player_.buffered();\n\n        var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n        var bufferedEnd = _this2.player_.bufferedEnd();\n\n        var children = _this2.partEls_;\n        var percent = percentify(bufferedEnd, duration);\n\n        if (_this2.percent_ !== percent) {\n          // update the width of the progress bar\n          _this2.el_.style.width = percent; // update the control-text\n\n          textContent(_this2.percentageEl_, percent);\n          _this2.percent_ = percent;\n        } // add child elements to represent the individual buffered time ranges\n\n\n        for (var i = 0; i < buffered.length; i++) {\n          var start = buffered.start(i);\n          var end = buffered.end(i);\n          var part = children[i];\n\n          if (!part) {\n            part = _this2.el_.appendChild(createEl());\n            children[i] = part;\n          } //  only update if changed\n\n\n          if (part.dataset.start === start && part.dataset.end === end) {\n            continue;\n          }\n\n          part.dataset.start = start;\n          part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n          part.style.left = percentify(start, bufferedEnd);\n          part.style.width = percentify(end - start, bufferedEnd);\n        } // remove unused buffered range elements\n\n\n        for (var _i = children.length; _i > buffered.length; _i--) {\n          _this2.el_.removeChild(children[_i - 1]);\n        }\n\n        children.length = buffered.length;\n      });\n    };\n\n    return LoadProgressBar;\n  }(Component$1);\n\n  Component$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n\n  var TimeTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(TimeTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TimeTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = TimeTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint, content) {\n      var tooltipRect = findPosition(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      } // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n\n\n      var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n\n      var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n\n      var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      } // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      } // prevent small width fluctuations within 0.4px from\n      // changing the value below.\n      // This really helps for live to prevent the play\n      // progress time tooltip from jittering\n\n\n      pullTooltipBy = Math.round(pullTooltipBy);\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      this.write(content);\n    }\n    /**\n     * Write the time to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted time for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n        var content;\n\n        var duration = _this2.player_.duration();\n\n        if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n          var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n          var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n\n        _this2.update(seekBarRect, seekBarPoint, content);\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return TimeTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var PlayProgressBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(PlayProgressBar, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlayProgressBar(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlayProgressBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var timeTooltip = this.getChild('timeTooltip');\n\n      if (!timeTooltip) {\n        return;\n      }\n\n      var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    };\n\n    return PlayProgressBar;\n  }(Component$1);\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  }; // Time tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n\n  Component$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n\n  var MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseTimeDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseTimeDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseTimeDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    ;\n\n    _proto.update = function update(seekBarRect, seekBarPoint) {\n      var _this2 = this;\n\n      var time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n        _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n      });\n    };\n\n    return MouseTimeDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  var STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\n  var PAGE_KEY_MULTIPLIER = 12;\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n\n  var SeekBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(SeekBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function SeekBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.setEventHandlers_();\n\n      return _this;\n    }\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n\n\n    var _proto = SeekBar.prototype;\n\n    _proto.setEventHandlers_ = function setEventHandlers_() {\n      var _this2 = this;\n\n      this.update_ = bind(this, this.update);\n      this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      } // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n\n\n      this.updateInterval = null;\n\n      this.enableIntervalHandler_ = function (e) {\n        return _this2.enableInterval_(e);\n      };\n\n      this.disableIntervalHandler_ = function (e) {\n        return _this2.disableInterval_(e);\n      };\n\n      this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    };\n\n    _proto.toggleVisibility_ = function toggleVisibility_(e) {\n      if (document.visibilityState === 'hidden') {\n        this.cancelNamedAnimationFrame('SeekBar#update');\n        this.cancelNamedAnimationFrame('Slider#update');\n        this.disableInterval_(e);\n      } else {\n        if (!this.player_.ended() && !this.player_.paused()) {\n          this.enableInterval_();\n        } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n        this.update();\n      }\n    };\n\n    _proto.enableInterval_ = function enableInterval_() {\n      if (this.updateInterval) {\n        return;\n      }\n\n      this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n    };\n\n    _proto.disableInterval_ = function disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n        return;\n      }\n\n      if (!this.updateInterval) {\n        return;\n      }\n\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    ;\n\n    _proto.update = function update(event) {\n      var _this3 = this;\n\n      // ignore updates while the tab is hidden\n      if (document.visibilityState === 'hidden') {\n        return;\n      }\n\n      var percent = _Slider.prototype.update.call(this);\n\n      this.requestNamedAnimationFrame('SeekBar#update', function () {\n        var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n        var liveTracker = _this3.player_.liveTracker;\n\n        var duration = _this3.player_.duration();\n\n        if (liveTracker && liveTracker.isLive()) {\n          duration = _this3.player_.liveTracker.liveCurrentTime();\n        }\n\n        if (_this3.percent_ !== percent) {\n          // machine readable value of progress bar (percentage complete)\n          _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n          _this3.percent_ = percent;\n        }\n\n        if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n          // human readable value of progress bar (time complete)\n          _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n          _this3.currentTime_ = currentTime;\n          _this3.duration_ = duration;\n        } // update the progress bar time tooltip with the current time\n\n\n        if (_this3.bar) {\n          _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n        }\n      });\n      return percent;\n    }\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    ;\n\n    _proto.userSeek_ = function userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n\n      this.player_.currentTime(ct);\n    }\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    ;\n\n    _proto.getCurrentTime_ = function getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      var currentTime = this.getCurrentTime_();\n      var percent;\n      var liveTracker = this.player_.liveTracker;\n\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n\n      return percent;\n    }\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      } // Stop event propagation to prevent double fire in progress-control.js\n\n\n      event.stopPropagation();\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this to run.\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event, mouseDown) {\n      if (mouseDown === void 0) {\n        mouseDown = false;\n      }\n\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      if (!mouseDown && !this.player_.scrubbing()) {\n        this.player_.scrubbing(true);\n      }\n\n      var newTime;\n      var distance = this.calculateDistance(event);\n      var liveTracker = this.player_.liveTracker;\n\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        if (distance >= 0.99) {\n          liveTracker.seekToLiveEdge();\n          return;\n        }\n\n        var seekableStart = liveTracker.seekableStart();\n        var seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        } // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n\n\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        } // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n\n\n        if (newTime === Infinity) {\n          return;\n        }\n      } // Set new time (tell player to seek to new time)\n\n\n      this.userSeek_(newTime);\n    };\n\n    _proto.enable = function enable() {\n      _Slider.prototype.enable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.show();\n    };\n\n    _proto.disable = function disable() {\n      _Slider.prototype.disable.call(this);\n\n      var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n      if (!mouseTimeDisplay) {\n        return;\n      }\n\n      mouseTimeDisplay.hide();\n    }\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n      if (event) {\n        event.stopPropagation();\n      }\n\n      this.player_.scrubbing(false);\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      } else {\n        // We're done seeking and the time has changed.\n        // If the player is paused, make sure we display the correct time on the seek bar.\n        this.update_();\n      }\n    }\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n    }\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n    }\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    ;\n\n    _proto.handleAction = function handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var liveTracker = this.player_.liveTracker;\n\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (keycode.isEventKey(event, 'Home')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(0);\n      } else if (keycode.isEventKey(event, 'End')) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.liveCurrentTime());\n        } else {\n          this.userSeek_(this.player_.duration());\n        }\n      } else if (/^[0-9]$/.test(keycode(event))) {\n        event.preventDefault();\n        event.stopPropagation();\n        var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n        } else {\n          this.userSeek_(this.player_.duration() * gotoFraction);\n        }\n      } else if (keycode.isEventKey(event, 'PgDn')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (keycode.isEventKey(event, 'PgUp')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        _Slider.prototype.handleKeyDown.call(this, event);\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.disableInterval_();\n      this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n\n      this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.off(document, 'visibilitychange', this.toggleVisibility_);\n      }\n\n      _Slider.prototype.dispose.call(this);\n    };\n\n    return SeekBar;\n  }(Slider);\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  }; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n\n  Component$1.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n\n  var ProgressControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ProgressControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ProgressControl(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.handleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      _this.throttledHandleMouseSeek = throttle(bind(assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.handleMouseDownHandler_ = function (e) {\n        return _this.handleMouseDown(e);\n      };\n\n      _this.enable();\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = ProgressControl.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (!seekBar) {\n        return;\n      }\n\n      var playProgressBar = seekBar.getChild('playProgressBar');\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n      if (!playProgressBar && !mouseTimeDisplay) {\n        return;\n      }\n\n      var seekBarEl = seekBar.el();\n      var seekBarRect = findPosition(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n\n      if (playProgressBar) {\n        playProgressBar.update(seekBarRect, seekBar.getProgress());\n      }\n    }\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    ;\n\n    _proto.handleMouseSeek = function handleMouseSeek(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    ;\n\n    _proto.enabled = function enabled() {\n      return this.enabled_;\n    }\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.children().forEach(function (child) {\n        return child.disable && child.disable();\n      });\n\n      if (!this.enabled()) {\n        return;\n      }\n\n      this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeListenersAddedOnMousedownAndTouchstart();\n      this.addClass('disabled');\n      this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n      if (this.player_.scrubbing()) {\n        var seekBar = this.getChild('seekBar');\n        this.player_.scrubbing(false);\n\n        if (seekBar.videoWasPlaying) {\n          silencePromise(this.player_.play());\n        }\n      }\n    }\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.children().forEach(function (child) {\n        return child.enable && child.enable();\n      });\n\n      if (this.enabled()) {\n        return;\n      }\n\n      this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n    /**\n     * Cleanup listeners after the user finishes interacting with the progress controls\n     */\n    ;\n\n    _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var seekBar = this.getChild('seekBar');\n\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n\n      this.removeListenersAddedOnMousedownAndTouchstart();\n    };\n\n    return ProgressControl;\n  }(Component$1);\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component$1.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n\n  var PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(PictureInPictureToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    function PictureInPictureToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n        return _this.handlePictureInPictureChange(e);\n      });\n\n      _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n        return _this.handlePictureInPictureEnabledChange(e);\n      });\n\n      _this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], function () {\n        // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n        var isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n\n        if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n          if (player.isInPictureInPicture()) {\n            player.exitPictureInPicture();\n          }\n\n          _this.hide();\n        } else {\n          _this.show();\n        }\n      }); // TODO: Deactivate button on player emptied event.\n\n\n      _this.disable();\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = PictureInPictureToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Enables or disables button based on document.pictureInPictureEnabled property value\n     * or on value returned by player.disablePictureInPicture() method.\n     */\n    ;\n\n    _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n      if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n    /**\n     * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    ;\n\n    _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n      if (this.player_.isInPictureInPicture()) {\n        this.controlText('Exit Picture-in-Picture');\n      } else {\n        this.controlText('Picture-in-Picture');\n      }\n\n      this.handlePictureInPictureEnabledChange();\n    }\n    /**\n     * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isInPictureInPicture()) {\n        this.player_.requestPictureInPicture();\n      } else {\n        this.player_.exitPictureInPicture();\n      }\n    };\n\n    return PictureInPictureToggle;\n  }(Button);\n  /**\n   * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n  Component$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n\n  var FullscreenToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(FullscreenToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function FullscreenToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this;\n\n      _this.on(player, 'fullscreenchange', function (e) {\n        return _this.handleFullscreenChange(e);\n      });\n\n      if (document[player.fsApi_.fullscreenEnabled] === false) {\n        _this.disable();\n      }\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = FullscreenToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Non-Fullscreen');\n      } else {\n        this.controlText('Fullscreen');\n      }\n    }\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    };\n\n    return FullscreenToggle;\n  }(Button);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkVolumeSupport = function checkVolumeSupport(self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeLevel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevel, _Component);\n\n    function VolumeLevel() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = VolumeLevel.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-level'\n      });\n\n      el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n        className: 'vjs-control-text'\n      }));\n      return el;\n    };\n\n    return VolumeLevel;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * Volume level tooltips display a volume above or side by side the volume bar.\n   *\n   * @extends Component\n   */\n\n  var VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeLevelTooltip, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeLevelTooltip(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the volume tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeLevelTooltip.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Updates the position of the tooltip relative to the `VolumeBar` and\n     * its content text.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n      if (!vertical) {\n        var tooltipRect = getBoundingClientRect(this.el_);\n        var playerRect = getBoundingClientRect(this.player_.el());\n        var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n        if (!playerRect || !tooltipRect) {\n          return;\n        }\n\n        var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n        var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n        var pullTooltipBy = tooltipRect.width / 2;\n\n        if (spaceLeftOfPoint < pullTooltipBy) {\n          pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n        } else if (spaceRightOfPoint < pullTooltipBy) {\n          pullTooltipBy = spaceRightOfPoint;\n        }\n\n        if (pullTooltipBy < 0) {\n          pullTooltipBy = 0;\n        } else if (pullTooltipBy > tooltipRect.width) {\n          pullTooltipBy = tooltipRect.width;\n        }\n\n        this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n      }\n\n      this.write(content + \"%\");\n    }\n    /**\n     * Write the volume to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted volume for the tooltip.\n     */\n    ;\n\n    _proto.write = function write(content) {\n      textContent(this.el_, content);\n    }\n    /**\n     * Updates the position of the volume tooltip relative to the `VolumeBar`.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     * @param {number} volume\n     *        The volume level to update the tooltip to\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    ;\n\n    _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n      var _this2 = this;\n\n      this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n        _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n        if (cb) {\n          cb();\n        }\n      });\n    };\n\n    return VolumeLevelTooltip;\n  }(Component$1);\n\n  Component$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n  /**\n   * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n   * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n   * indicating the volume level which is represented by a given point in the\n   * {@link VolumeBar}.\n   *\n   * @extends Component\n   */\n\n  var MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MouseVolumeLevelDisplay(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n      _this.update = throttle(bind(assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n      return _this;\n    }\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = MouseVolumeLevelDisplay.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n    /**\n     * Enquires updates to its own DOM as well as the DOM of its\n     * {@link VolumeLevelTooltip} child.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    ;\n\n    _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n      var _this2 = this;\n\n      var volume = 100 * rangeBarPoint;\n      this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n        if (vertical) {\n          _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n        } else {\n          _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n        }\n      });\n    };\n\n    return MouseVolumeLevelDisplay;\n  }(Component$1);\n  /**\n   * Default options for `MouseVolumeLevelDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  MouseVolumeLevelDisplay.prototype.options_ = {\n    children: ['volumeLevelTooltip']\n  };\n  Component$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n\n  var VolumeBar = /*#__PURE__*/function (_Slider) {\n    inheritsLoose(VolumeBar, _Slider);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function VolumeBar(player, options) {\n      var _this;\n\n      _this = _Slider.call(this, player, options) || this;\n\n      _this.on('slideractive', function (e) {\n        return _this.updateLastVolume_(e);\n      });\n\n      _this.on(player, 'volumechange', function (e) {\n        return _this.updateARIAAttributes(e);\n      });\n\n      player.ready(function () {\n        return _this.updateARIAAttributes();\n      });\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeBar.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Slider.prototype.createEl.call(this, 'div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      _Slider.prototype.handleMouseDown.call(this, event);\n    }\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n      if (mouseVolumeLevelDisplay) {\n        var volumeBarEl = this.el();\n        var volumeBarRect = getBoundingClientRect(volumeBarEl);\n        var vertical = this.vertical();\n        var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n        volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `VolumeBar`. This ensures we stay within it at all times.\n\n        volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n        mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n      }\n\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n    /**\n     * If the player is muted unmute it.\n     */\n    ;\n\n    _proto.checkMuted = function checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    ;\n\n    _proto.getPercent = function getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n\n      return this.player_.volume();\n    }\n    /**\n     * Increase volume level for keyboard users\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n    /**\n     * Decrease volume level for keyboard users\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n      var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    ;\n\n    _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    ;\n\n    _proto.updateLastVolume_ = function updateLastVolume_() {\n      var _this2 = this;\n\n      var volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', function () {\n        if (_this2.player_.volume() === 0) {\n          _this2.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    };\n\n    return VolumeBar;\n  }(Slider);\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  }; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\n  if (!IS_IOS && !IS_ANDROID) {\n    VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n  }\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n\n\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component$1.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n\n  var VolumeControl = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumeControl, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumeControl(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n\n      _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkVolumeSupport(assertThisInitialized(_this), player);\n      _this.throttledHandleMouseMove = throttle(bind(assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n      _this.handleMouseUpHandler_ = function (e) {\n        return _this.handleMouseUp(e);\n      };\n\n      _this.on('mousedown', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('touchstart', function (e) {\n        return _this.handleMouseDown(e);\n      });\n\n      _this.on('mousemove', function (e) {\n        return _this.handleMouseMove(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n        _this.volumeBar.addClass('vjs-slider-active');\n\n        _this.addClass('vjs-slider-active');\n\n        _this.trigger('slideractive');\n      });\n\n      _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n        _this.volumeBar.removeClass('vjs-slider-active');\n\n        _this.removeClass('vjs-slider-active');\n\n        _this.trigger('sliderinactive');\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = VolumeControl.prototype;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-horizontal';\n\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-control vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseDown = function handleMouseDown(event) {\n      var doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    ;\n\n    _proto.handleMouseUp = function handleMouseUp(event) {\n      var doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    ;\n\n    _proto.handleMouseMove = function handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    };\n\n    return VolumeControl;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component$1.registerComponent('VolumeControl', VolumeControl);\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  var checkMuteSupport = function checkMuteSupport(self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n\n  var MuteToggle = /*#__PURE__*/function (_Button) {\n    inheritsLoose(MuteToggle, _Button);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function MuteToggle(player, options) {\n      var _this;\n\n      _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n      checkMuteSupport(assertThisInitialized(_this), player);\n\n      _this.on(player, ['loadstart', 'volumechange'], function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = MuteToggle.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      var vol = this.player_.volume();\n      var lastVolume = this.player_.lastVolume_();\n\n      if (vol === 0) {\n        var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateIcon_ = function updateIcon_() {\n      var vol = this.player_.volume();\n      var level = 3; // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n\n      if (vol === 0 || this.player_.muted()) {\n        level = 0;\n      } else if (vol < 0.33) {\n        level = 1;\n      } else if (vol < 0.67) {\n        level = 2;\n      } // TODO improve muted icon classes\n\n\n      for (var i = 0; i < 4; i++) {\n        removeClass(this.el_, \"vjs-vol-\" + i);\n      }\n\n      addClass(this.el_, \"vjs-vol-\" + level);\n    }\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateControlText_ = function updateControlText_() {\n      var soundOff = this.player_.muted() || this.player_.volume() === 0;\n      var text = soundOff ? 'Unmute' : 'Mute';\n\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    };\n\n    return MuteToggle;\n  }(Button);\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component$1.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n\n  var VolumePanel = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VolumePanel, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function VolumePanel(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      } // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n\n\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n\n      _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n      _this.handleKeyPressHandler_ = function (e) {\n        return _this.handleKeyPress(e);\n      };\n\n      _this.on(player, ['loadstart'], function (e) {\n        return _this.volumePanelState_(e);\n      });\n\n      _this.on(_this.muteToggle, 'keyup', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on(_this.volumeControl, 'keyup', function (e) {\n        return _this.handleVolumeControlKeyUp(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyPress(e);\n      });\n\n      _this.on('mouseover', function (e) {\n        return _this.handleMouseOver(e);\n      });\n\n      _this.on('mouseout', function (e) {\n        return _this.handleMouseOut(e);\n      }); // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n\n\n      _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n      _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n      return _this;\n    }\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n\n\n    var _proto = VolumePanel.prototype;\n\n    _proto.sliderActive_ = function sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    ;\n\n    _proto.sliderInactive_ = function sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    ;\n\n    _proto.volumePanelState_ = function volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      } // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n\n\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var orientationClass = 'vjs-volume-panel-horizontal';\n\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: \"vjs-volume-panel vjs-control \" + orientationClass\n      });\n    }\n    /**\n     * Dispose of the `volume-panel` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseOut();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n     * the volume panel and sets focus on `MuteToggle`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keyup` event that caused this function to be called.\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.muteToggle.focus();\n      }\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n     * Turns on listening for `mouseover` event. When they happen it\n     * calls `this.handleMouseOver`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseover` event that caused this function to be called.\n     *\n     * @listens mouseover\n     */\n    ;\n\n    _proto.handleMouseOver = function handleMouseOver(event) {\n      this.addClass('vjs-hover');\n      on(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n     * Turns on listening for `mouseout` event. When they happen it\n     * calls `this.handleMouseOut`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseout` event that caused this function to be called.\n     *\n     * @listens mouseout\n     */\n    ;\n\n    _proto.handleMouseOut = function handleMouseOut(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleKeyPressHandler_);\n    }\n    /**\n     * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n     * looking for ESC, which hides the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        The keypress that triggered this event.\n     *\n     * @listens keydown | keyup\n     */\n    ;\n\n    _proto.handleKeyPress = function handleKeyPress(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.handleMouseOut();\n      }\n    };\n\n    return VolumePanel;\n  }(Component$1);\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component$1.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n\n  var Menu = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Menu, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    function Menu(player, options) {\n      var _this;\n\n      _this = _Component.call(this, player, options) || this;\n\n      if (options) {\n        _this.menuButton_ = options.menuButton;\n      }\n\n      _this.focusedChild_ = -1;\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n      _this.boundHandleBlur_ = function (e) {\n        return _this.handleBlur(e);\n      };\n\n      _this.boundHandleTapClick_ = function (e) {\n        return _this.handleTapClick(e);\n      };\n\n      return _this;\n    }\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n\n\n    var _proto = Menu.prototype;\n\n    _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    ;\n\n    _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    ;\n\n    _proto.removeChild = function removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n\n      this.removeEventListenerForItem(component);\n\n      _Component.prototype.removeChild.call(this, component);\n    }\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    ;\n\n    _proto.addItem = function addItem(component) {\n      var childComponent = this.addChild(component);\n\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    ;\n\n    _proto.createEl = function createEl$1() {\n      var contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n\n      var el = _Component.prototype.createEl.call(this, 'div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n\n      el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {EventTarget~Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    ;\n\n    _proto.handleBlur = function handleBlur(event) {\n      var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n      if (!this.children().some(function (element) {\n        return element.el() === relatedTarget;\n      })) {\n        var btn = this.menuButton_;\n\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    ;\n\n    _proto.handleTapClick = function handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        var childComponents = this.children();\n\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n\n        var foundComponent = childComponents.filter(function (component) {\n          return component.el() === event.target;\n        })[0];\n\n        if (!foundComponent) {\n          return;\n        } // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward(); // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepForward = function stepForward() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    ;\n\n    _proto.stepBack = function stepBack() {\n      var stepChild = 0;\n\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n\n      this.focus(stepChild);\n    }\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    ;\n\n    _proto.focus = function focus(item) {\n      if (item === void 0) {\n        item = 0;\n      }\n\n      var children = this.children().slice();\n      var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n      if (haveTitle) {\n        children.shift();\n      }\n\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    };\n\n    return Menu;\n  }(Component$1);\n\n  Component$1.registerComponent('Menu', Menu);\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n\n  var MenuButton = /*#__PURE__*/function (_Component) {\n    inheritsLoose(MenuButton, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function MenuButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _Component.call(this, player, options) || this;\n      _this.menuButton_ = new Button(player, options);\n\n      _this.menuButton_.controlText(_this.controlText_);\n\n      _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n      _this.menuButton_.removeClass('vjs-control');\n\n      _this.addChild(_this.menuButton_);\n\n      _this.update();\n\n      _this.enabled_ = true;\n\n      var handleClick = function handleClick(e) {\n        return _this.handleClick(e);\n      };\n\n      _this.handleMenuKeyUp_ = function (e) {\n        return _this.handleMenuKeyUp(e);\n      };\n\n      _this.on(_this.menuButton_, 'tap', handleClick);\n\n      _this.on(_this.menuButton_, 'click', handleClick);\n\n      _this.on(_this.menuButton_, 'keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on(_this.menuButton_, 'mouseenter', function () {\n        _this.addClass('vjs-hover');\n\n        _this.menu.show();\n\n        on(document, 'keyup', _this.handleMenuKeyUp_);\n      });\n\n      _this.on('mouseleave', function (e) {\n        return _this.handleMouseLeave(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleSubmenuKeyDown(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     */\n\n\n    var _proto = MenuButton.prototype;\n\n    _proto.update = function update() {\n      var menu = this.createMenu();\n\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n\n      this.menu = menu;\n      this.addChild(menu);\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n        this.menu.contentEl_.removeAttribute('role');\n      } else {\n        this.show();\n        this.menu.contentEl_.setAttribute('role', 'menu');\n      }\n    }\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      var menu = new Menu(this.player_, {\n        menuButton: this\n      });\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n\n      this.hideThreshold_ = 0; // Add a title list item to the top\n\n      if (this.options_.title) {\n        var titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          textContent: toTitleCase$1(this.options_.title),\n          tabIndex: -1\n        });\n        var titleComponent = new Component$1(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n\n      this.items = this.createItems();\n\n      if (this.items) {\n        // Add menu items to the menu\n        for (var i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n\n      return menu;\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    ;\n\n    _proto.createItems = function createItems() {}\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    ;\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      } // TODO: Fix the CSS so that this isn't necessary\n\n\n      var buttonClass = Button.prototype.buildCSSClass();\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    ;\n\n    _proto.controlText = function controlText(text, el) {\n      if (el === void 0) {\n        el = this.menuButton_.el();\n      }\n\n      return this.menuButton_.controlText(text, el);\n    }\n    /**\n     * Dispose of the `menu-button` and all child components.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.handleMouseLeave();\n\n      _Component.prototype.dispose.call(this);\n    }\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n    /**\n     * Handle `mouseleave` for `MenuButton`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseleave` event that caused this function to be called.\n     *\n     * @listens mouseleave\n     */\n    ;\n\n    _proto.handleMouseLeave = function handleMouseLeave(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleMenuKeyUp_);\n    }\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    ;\n\n    _proto.focus = function focus() {\n      this.menuButton_.focus();\n    }\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    ;\n\n    _proto.blur = function blur() {\n      this.menuButton_.blur();\n    }\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n      } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n    /**\n     * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keyup\n     */\n    ;\n\n    _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n      // Escape hides popup menu\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        this.removeClass('vjs-hover');\n      }\n    }\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault(); // Set focus back to the menu button's button\n\n          this.menuButton_.focus();\n        }\n      }\n    }\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    ;\n\n    _proto.pressButton = function pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n\n        this.menu.focus();\n      }\n    }\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    ;\n\n    _proto.unpressButton = function unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    ;\n\n    _proto.disable = function disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    ;\n\n    _proto.enable = function enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    };\n\n    return MenuButton;\n  }(Component$1);\n\n  Component$1.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n\n  var TrackButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(TrackButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TrackButton(player, options) {\n      var _this;\n\n      var tracks = options.tracks;\n      _this = _MenuButton.call(this, player, options) || this;\n\n      if (_this.items.length <= 1) {\n        _this.hide();\n      }\n\n      if (!tracks) {\n        return assertThisInitialized(_this);\n      }\n\n      var updateHandler = bind(assertThisInitialized(_this), _this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n      tracks.addEventListener('labelchange', updateHandler);\n\n      _this.player_.on('ready', updateHandler);\n\n      _this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n        tracks.removeEventListener('labelchange', updateHandler);\n      });\n\n      return _this;\n    }\n\n    return TrackButton;\n  }(MenuButton);\n\n  Component$1.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-keys.js\n   */\n\n  /**\n    * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n    * Note that 'Enter' and 'Space' are not included here (otherwise they would\n    * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n    * @typedef MenuKeys\n    * @array\n    */\n  var MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n\n  var MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n    inheritsLoose(MenuItem, _ClickableComponent);\n\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    function MenuItem(player, options) {\n      var _this;\n\n      _this = _ClickableComponent.call(this, player, options) || this;\n      _this.selectable = options.selectable;\n      _this.isSelected_ = options.selected || false;\n      _this.multiSelectable = options.multiSelectable;\n\n      _this.selected(_this.isSelected_);\n\n      if (_this.selectable) {\n        if (_this.multiSelectable) {\n          _this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          _this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        _this.el_.setAttribute('role', 'menuitem');\n      }\n\n      return _this;\n    }\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n\n\n    var _proto = MenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n\n      var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n        className: 'vjs-menu-item',\n        tabIndex: -1\n      }, props), attrs); // swap icon with menu item text.\n\n\n      el.replaceChild(createEl('span', {\n        className: 'vjs-menu-item-text',\n        textContent: this.localize(this.options_.label)\n      }), el.querySelector('.vjs-icon-placeholder'));\n      return el;\n    }\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      if (!MenuKeys.some(function (key) {\n        return keycode.isEventKey(event, key);\n      })) {\n        // Pass keydown handling up for unused keys\n        _ClickableComponent.prototype.handleKeyDown.call(this, event);\n      }\n    }\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      this.selected(true);\n    }\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    ;\n\n    _proto.selected = function selected(_selected) {\n      if (this.selectable) {\n        if (_selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    };\n\n    return MenuItem;\n  }(ClickableComponent);\n\n  Component$1.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n\n  var TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function TextTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n\n      _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        _this.handleSelectedLanguageChange.apply(assertThisInitialized(_this), args);\n      };\n\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n      _this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n\n\n      if (tracks.onchange === undefined) {\n        var event;\n\n        _this.on(['tap', 'click'], function () {\n          if (typeof window.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window.Event('change');\n            } catch (err) {// continue regardless of error\n            }\n          }\n\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n\n          tracks.dispatchEvent(event);\n        });\n      } // set the default state based on current tracks\n\n\n      _this.handleTracksChange();\n\n      return _this;\n    }\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = TextTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      var referenceTrack = this.track;\n      var tracks = this.player_.textTracks();\n\n      _MenuItem.prototype.handleClick.call(this, event);\n\n      if (!tracks) {\n        return;\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        } // If this text track is the component's track and it is not showing,\n        // set it to showing.\n\n\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          } // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n    /**\n     * Handle text track list change\n     *\n     * @param {EventTarget~Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n\n      _MenuItem.prototype.dispose.call(this);\n    };\n\n    return TextTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * A special menu item for turning of a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function OffTextTrackMenuItem(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player: player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        \"default\": false,\n        mode: 'disabled'\n      };\n\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      } // MenuItem is selectable\n\n\n      options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n      options.multiSelectable = false;\n      return _TextTrackMenuItem.call(this, player, options) || this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     */\n\n\n    var _proto = OffTextTrackMenuItem.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var shouldBeSelected = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      } // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n\n\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    };\n\n    _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n      var tracks = this.player().textTracks();\n      var allHidden = true;\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    };\n\n    return OffTextTrackMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n\n  var TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(TextTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function TextTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.textTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n\n\n    var _proto = TextTrackButton.prototype;\n\n    _proto.createItems = function createItems(items, TrackMenuItem) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      if (TrackMenuItem === void 0) {\n        TrackMenuItem = TextTrackMenuItem;\n      }\n\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      var label;\n\n      if (this.label_) {\n        label = this.label_ + \" off\";\n      } // Add an OFF menu item to turn all tracks off\n\n\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label: label\n      }));\n      this.hideThreshold_ += 1;\n      var tracks = this.player_.textTracks();\n\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          var item = new TrackMenuItem(this.player_, {\n            track: track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n          items.push(item);\n        }\n      }\n\n      return items;\n    };\n\n    return TextTrackButton;\n  }(TrackButton);\n\n  Component$1.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n\n  var ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function ChaptersTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var cue = options.cue;\n      var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n      _this.cue = cue;\n      return _this;\n    }\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = ChaptersTrackMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player_.currentTime(this.cue.startTime);\n    };\n\n    return ChaptersTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n\n  var ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(ChaptersButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this function is ready.\n     */\n    function ChaptersButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n\n      _this.selectCurrentItem_ = function () {\n        _this.items.forEach(function (item) {\n          item.selected(_this.track_.activeCues[0] === item.cue);\n        });\n      };\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = ChaptersButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {EventTarget~Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    ;\n\n    _proto.update = function update(event) {\n      if (event && event.track && event.track.kind !== 'chapters') {\n        return;\n      }\n\n      var track = this.findChaptersTrack();\n\n      if (track !== this.track_) {\n        this.setTrack(track);\n\n        _TextTrackButton.prototype.update.call(this);\n      } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n        // Update the menu initially or if the number of cues has changed since set\n        _TextTrackButton.prototype.update.call(this);\n      }\n    }\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    ;\n\n    _proto.setTrack = function setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      } // here this.track_ refers to the old track instance\n\n\n      if (this.track_) {\n        var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n\n        this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n        this.track_ = null;\n      }\n\n      this.track_ = track; // here this.track_ refers to the new track instance\n\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n\n        var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n        if (_remoteTextTrackEl) {\n          _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n\n        this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n      }\n    }\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    ;\n\n    _proto.findChaptersTrack = function findChaptersTrack() {\n      var tracks = this.player_.textTracks() || [];\n\n      for (var i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        var track = tracks[i];\n\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    ;\n\n    _proto.getMenuCaption = function getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n\n      return this.localize(toTitleCase$1(this.kind_));\n    }\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    ;\n\n    _proto.createMenu = function createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return _TextTrackButton.prototype.createMenu.call(this);\n    }\n    /**\n     * Create a menu item for each text track\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!this.track_) {\n        return items;\n      }\n\n      var cues = this.track_.cues;\n\n      if (!cues) {\n        return items;\n      }\n\n      for (var i = 0, l = cues.length; i < l; i++) {\n        var cue = cues[i];\n        var mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue: cue\n        });\n        items.push(mi);\n      }\n\n      return items;\n    };\n\n    return ChaptersButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  ChaptersButton.prototype.kind_ = 'chapters';\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component$1.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n\n  var DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function DescriptionsButton(player, options, ready) {\n      var _this;\n\n      _this = _TextTrackButton.call(this, player, options, ready) || this;\n      var tracks = player.textTracks();\n      var changeHandler = bind(assertThisInitialized(_this), _this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n\n\n    var _proto = DescriptionsButton.prototype;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      var tracks = this.player().textTracks();\n      var disabled = false; // Check whether a track of a different kind is showing\n\n      for (var i = 0, l = tracks.length; i < l; i++) {\n        var track = tracks[i];\n\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      } // If another track is showing, disable this menu button\n\n\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return DescriptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function SubtitlesButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubtitlesButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    };\n\n    return SubtitlesButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function CaptionSettingsMenuItem(player, options) {\n      var _this;\n\n      options.track = {\n        player: player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        \"default\": false,\n        mode: 'disabled'\n      }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n      _this.addClass('vjs-texttrack-settings');\n\n      _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n      return _this;\n    }\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = CaptionSettingsMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    };\n\n    return CaptionSettingsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n\n  var CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(CaptionsButton, _TextTrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    function CaptionsButton(player, options, ready) {\n      return _TextTrackButton.call(this, player, options, ready) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = CaptionsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      return _TextTrackButton.prototype.createItems.call(this, items);\n    };\n\n    return CaptionsButton;\n  }(TextTrackButton);\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  CaptionsButton.prototype.kind_ = 'captions';\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component$1.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n\n  var SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n    inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n    function SubsCapsMenuItem() {\n      return _TextTrackMenuItem.apply(this, arguments) || this;\n    }\n\n    var _proto = SubsCapsMenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'captions') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          // space added as the text will visually flow with the\n          // label\n          textContent: \" \" + this.localize('Captions')\n        }));\n      }\n\n      return el;\n    };\n\n    return SubsCapsMenuItem;\n  }(TextTrackMenuItem);\n\n  Component$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n\n  var SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n    inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n    function SubsCapsButton(player, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n\n      _this.label_ = 'subtitles';\n\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n        _this.label_ = 'captions';\n      }\n\n      _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = SubsCapsButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var items = [];\n\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n\n      items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n      return items;\n    };\n\n    return SubsCapsButton;\n  }(TextTrackButton);\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n\n\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @private\n   */\n\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n\n  var AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function AudioTrackMenuItem(player, options) {\n      var _this;\n\n      var track = options.track;\n      var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.track = track;\n\n      _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n      var changeHandler = function changeHandler() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this.handleTracksChange.apply(assertThisInitialized(_this), args);\n      };\n\n      tracks.addEventListener('change', changeHandler);\n\n      _this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n\n      return _this;\n    }\n\n    var _proto = AudioTrackMenuItem.prototype;\n\n    _proto.createEl = function createEl$1(type, props, attrs) {\n      var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n      var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n      if (this.options_.track.kind === 'main-desc') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          textContent: ' ' + this.localize('Descriptions')\n        }));\n      }\n\n      return el;\n    }\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n      // off for us.\n\n\n      this.track.enabled = true; // when native audio tracks are used, we want to make sure that other tracks are turned off\n\n      if (this.player_.tech_.featuresNativeAudioTracks) {\n        var tracks = this.player_.audioTracks();\n\n        for (var i = 0; i < tracks.length; i++) {\n          var track = tracks[i]; // skip the current track since we enabled it above\n\n          if (track === this.track) {\n            continue;\n          }\n\n          track.enabled = track === this.track;\n        }\n      }\n    }\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    ;\n\n    _proto.handleTracksChange = function handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    };\n\n    return AudioTrackMenuItem;\n  }(MenuItem);\n\n  Component$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n\n  var AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n    inheritsLoose(AudioTrackButton, _TrackButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    function AudioTrackButton(player, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      options.tracks = player.audioTracks();\n      return _TrackButton.call(this, player, options) || this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n\n\n    var _proto = AudioTrackButton.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    ;\n\n    _proto.createItems = function createItems(items) {\n      if (items === void 0) {\n        items = [];\n      }\n\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n\n      return items;\n    };\n\n    return AudioTrackButton;\n  }(TrackButton);\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n\n  var PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n    inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuItem(player, options) {\n      var _this;\n\n      var label = options.rate;\n      var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n      options.label = label;\n      options.selected = rate === player.playbackRate();\n      options.selectable = true;\n      options.multiSelectable = false;\n      _this = _MenuItem.call(this, player, options) || this;\n      _this.label = label;\n      _this.rate = rate;\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.update(e);\n      });\n\n      return _this;\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n\n\n    var _proto = PlaybackRateMenuItem.prototype;\n\n    _proto.handleClick = function handleClick(event) {\n      _MenuItem.prototype.handleClick.call(this);\n\n      this.player().playbackRate(this.rate);\n    }\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.update = function update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    };\n\n    return PlaybackRateMenuItem;\n  }(MenuItem);\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n\n  var PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n    inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    function PlaybackRateMenuButton(player, options) {\n      var _this;\n\n      _this = _MenuButton.call(this, player, options) || this;\n\n      _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n      _this.updateVisibility();\n\n      _this.updateLabel();\n\n      _this.on(player, 'loadstart', function (e) {\n        return _this.updateVisibility(e);\n      });\n\n      _this.on(player, 'ratechange', function (e) {\n        return _this.updateLabel(e);\n      });\n\n      _this.on(player, 'playbackrateschange', function (e) {\n        return _this.handlePlaybackRateschange(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n\n\n    var _proto = PlaybackRateMenuButton.prototype;\n\n    _proto.createEl = function createEl$1() {\n      var el = _MenuButton.prototype.createEl.call(this);\n\n      this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        id: this.labelElId_,\n        textContent: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    };\n\n    _proto.dispose = function dispose() {\n      this.labelEl_ = null;\n\n      _MenuButton.prototype.dispose.call(this);\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    ;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n    };\n\n    _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n      return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n    }\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     */\n    ;\n\n    _proto.createItems = function createItems() {\n      var rates = this.playbackRates();\n      var items = [];\n\n      for (var i = rates.length - 1; i >= 0; i--) {\n        items.push(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n\n      return items;\n    }\n    /**\n     * Updates ARIA accessibility attributes\n     */\n    ;\n\n    _proto.updateARIAAttributes = function updateARIAAttributes() {\n      // Current playback rate\n      this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n    }\n    /**\n     * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    ;\n\n    _proto.handleClick = function handleClick(event) {\n      // select next rate option\n      var currentRate = this.player().playbackRate();\n      var rates = this.playbackRates();\n      var currentIndex = rates.indexOf(currentRate); // this get the next rate and it will select first one if the last one currently selected\n\n      var newIndex = (currentIndex + 1) % rates.length;\n      this.player().playbackRate(rates[newIndex]);\n    }\n    /**\n     * On playbackrateschange, update the menu to account for the new items.\n     *\n     * @listens Player#playbackrateschange\n     */\n    ;\n\n    _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n      this.update();\n    }\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates() {\n      var player = this.player();\n      return player.playbackRates && player.playbackRates() || [];\n    }\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    ;\n\n    _proto.playbackRateSupported = function playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    ;\n\n    _proto.updateVisibility = function updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n    /**\n     * Update button label when rate changed\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    ;\n\n    _proto.updateLabel = function updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.textContent = this.player().playbackRate() + 'x';\n      }\n    };\n\n    return PlaybackRateMenuButton;\n  }(MenuButton);\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n\n\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n\n  var Spacer = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Spacer, _Component);\n\n    function Spacer() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = Spacer.prototype;\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl(tag, props, attributes) {\n      if (tag === void 0) {\n        tag = 'div';\n      }\n\n      if (props === void 0) {\n        props = {};\n      }\n\n      if (attributes === void 0) {\n        attributes = {};\n      }\n\n      if (!props.className) {\n        props.className = this.buildCSSClass();\n      }\n\n      return _Component.prototype.createEl.call(this, tag, props, attributes);\n    };\n\n    return Spacer;\n  }(Component$1);\n\n  Component$1.registerComponent('Spacer', Spacer);\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n\n  var CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n    inheritsLoose(CustomControlSpacer, _Spacer);\n\n    function CustomControlSpacer() {\n      return _Spacer.apply(this, arguments) || this;\n    }\n\n    var _proto = CustomControlSpacer.prototype;\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      return _Spacer.prototype.createEl.call(this, 'div', {\n        className: this.buildCSSClass(),\n        // No-flex/table-cell mode requires there be some content\n        // in the cell to fill the remaining space of the table.\n        textContent: \"\\xA0\"\n      });\n    };\n\n    return CustomControlSpacer;\n  }(Spacer);\n\n  Component$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n\n  var ControlBar = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ControlBar, _Component);\n\n    function ControlBar() {\n      return _Component.apply(this, arguments) || this;\n    }\n\n    var _proto = ControlBar.prototype;\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    };\n\n    return ControlBar;\n  }(Component$1);\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n\n\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n  };\n\n  if ('exitPictureInPicture' in document) {\n    ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n  }\n\n  Component$1.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n\n  var ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(ErrorDisplay, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    function ErrorDisplay(player, options) {\n      var _this;\n\n      _this = _ModalDialog.call(this, player, options) || this;\n\n      _this.on(player, 'error', function (e) {\n        return _this.open(e);\n      });\n\n      return _this;\n    }\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n\n\n    var _proto = ErrorDisplay.prototype;\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n    }\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    ;\n\n    _proto.content = function content() {\n      var error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    };\n\n    return ErrorDisplay;\n  }(ModalDialog);\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n\n\n  ErrorDisplay.prototype.options_ = _extends_1({}, ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  var LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\n  var COLOR_BLACK = ['#000', 'Black'];\n  var COLOR_BLUE = ['#00F', 'Blue'];\n  var COLOR_CYAN = ['#0FF', 'Cyan'];\n  var COLOR_GREEN = ['#0F0', 'Green'];\n  var COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  var COLOR_RED = ['#F00', 'Red'];\n  var COLOR_WHITE = ['#FFF', 'White'];\n  var COLOR_YELLOW = ['#FF0', 'Yellow'];\n  var OPACITY_OPAQUE = ['1', 'Opaque'];\n  var OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  var OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n\n  var selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n    },\n    color: {\n      selector: '.vjs-fg-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '%s',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: 'captions-font-family-%s',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: 'captions-font-size-%s',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      \"default\": 2,\n      parser: function parser(v) {\n        return v === '1.00' ? null : Number(v);\n      }\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI]\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n\n\n  function getSelectedOptionValue(el, parser) {\n    var value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n\n\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n\n    for (var i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n\n\n  var TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n    inheritsLoose(TextTrackSettings, _ModalDialog);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    function TextTrackSettings(player, options) {\n      var _this;\n\n      options.temporary = false;\n      _this = _ModalDialog.call(this, player, options) || this;\n      _this.updateDisplay = _this.updateDisplay.bind(assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n      _this.fill();\n\n      _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n      _this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: _this.localize('End of dialog window.')\n      });\n\n      _this.el().appendChild(_this.endDialog);\n\n      _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n      if (options.persistTextTrackSettings === undefined) {\n        _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n      }\n\n      _this.on(_this.$('.vjs-done-button'), 'click', function () {\n        _this.saveSettings();\n\n        _this.close();\n      });\n\n      _this.on(_this.$('.vjs-default-button'), 'click', function () {\n        _this.setDefaults();\n\n        _this.updateDisplay();\n      });\n\n      each(selectConfigs, function (config) {\n        _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n      });\n\n      if (_this.options_.persistTextTrackSettings) {\n        _this.restoreSettings();\n      }\n\n      return _this;\n    }\n\n    var _proto = TextTrackSettings.prototype;\n\n    _proto.dispose = function dispose() {\n      this.endDialog = null;\n\n      _ModalDialog.prototype.dispose.call(this);\n    }\n    /**\n     * Create a <select> element with configured options.\n     *\n     * @param {string} key\n     *        Configuration key to use during creation.\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n      var _this2 = this;\n\n      if (legendId === void 0) {\n        legendId = '';\n      }\n\n      if (type === void 0) {\n        type = 'label';\n      }\n\n      var config = selectConfigs[key];\n      var id = config.id.replace('%s', this.id_);\n      var selectLabelledbyIds = [legendId, id].join(' ').trim();\n      return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n        var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n        return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n      })).concat('</select>').join('');\n    }\n    /**\n     * Create foreground color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFgColor_ = function createElFgColor_() {\n      var legendId = \"captions-text-legend-\" + this.id_;\n      return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create background color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElBgColor_ = function createElBgColor_() {\n      var legendId = \"captions-background-\" + this.id_;\n      return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create window color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElWinColor_ = function createElWinColor_() {\n      var legendId = \"captions-window-\" + this.id_;\n      return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n    /**\n     * Create color elements for the component\n     *\n     * @return {Element}\n     *         The element that was created\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElColors_ = function createElColors_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-colors',\n        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n      });\n    }\n    /**\n     * Create font elements for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElFont_ = function createElFont_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-font',\n        innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n      });\n    }\n    /**\n     * Create controls for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    ;\n\n    _proto.createElControls_ = function createElControls_() {\n      var defaultsDescription = this.localize('restore all settings to the default values');\n      return createEl('div', {\n        className: 'vjs-track-settings-controls',\n        innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n      });\n    };\n\n    _proto.content = function content() {\n      return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n    };\n\n    _proto.label = function label() {\n      return this.localize('Caption Settings Dialog');\n    };\n\n    _proto.description = function description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    };\n\n    _proto.buildCSSClass = function buildCSSClass() {\n      return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n    }\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.getValues = function getValues() {\n      var _this3 = this;\n\n      return reduce(selectConfigs, function (accum, config, key) {\n        var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n\n        return accum;\n      }, {});\n    }\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    ;\n\n    _proto.setValues = function setValues(values) {\n      var _this4 = this;\n\n      each(selectConfigs, function (config, key) {\n        setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n      });\n    }\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    ;\n\n    _proto.setDefaults = function setDefaults() {\n      var _this5 = this;\n\n      each(selectConfigs, function (config) {\n        var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n        _this5.$(config.selector).selectedIndex = index;\n      });\n    }\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    ;\n\n    _proto.restoreSettings = function restoreSettings() {\n      var values;\n\n      try {\n        values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n      } catch (err) {\n        log$1.warn(err);\n      }\n\n      if (values) {\n        this.setValues(values);\n      }\n    }\n    /**\n     * Save text track settings to localStorage\n     */\n    ;\n\n    _proto.saveSettings = function saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n\n      var values = this.getValues();\n\n      try {\n        if (Object.keys(values).length) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n        } else {\n          window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n        }\n      } catch (err) {\n        log$1.warn(err);\n      }\n    }\n    /**\n     * Update display of text track settings\n     */\n    ;\n\n    _proto.updateDisplay = function updateDisplay() {\n      var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n    /**\n     * conditionally blur the element and refocus the captions button\n     *\n     * @private\n     */\n    ;\n\n    _proto.conditionalBlur_ = function conditionalBlur_() {\n      this.previouslyActiveEl_ = null;\n      var cb = this.player_.controlBar;\n      var subsCapsBtn = cb && cb.subsCapsButton;\n      var ccBtn = cb && cb.captionsButton;\n\n      if (subsCapsBtn) {\n        subsCapsBtn.focus();\n      } else if (ccBtn) {\n        ccBtn.focus();\n      }\n    };\n\n    return TextTrackSettings;\n  }(ModalDialog);\n\n  Component$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n\n  var ResizeManager = /*#__PURE__*/function (_Component) {\n    inheritsLoose(ResizeManager, _Component);\n\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    function ResizeManager(player, options) {\n      var _this;\n\n      var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      } // Only create an element when ResizeObserver isn't available\n\n\n      var options_ = mergeOptions$3({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      _this = _Component.call(this, player, options_) || this;\n      _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n      _this.loadListener_ = null;\n      _this.resizeObserver_ = null;\n      _this.debouncedHandler_ = debounce(function () {\n        _this.resizeHandler();\n      }, 100, false, assertThisInitialized(_this));\n\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n        _this.resizeObserver_.observe(player.el());\n      } else {\n        _this.loadListener_ = function () {\n          if (!_this.el_ || !_this.el_.contentWindow) {\n            return;\n          }\n\n          var debouncedHandler_ = _this.debouncedHandler_;\n\n          var unloadListener_ = _this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          }; // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n\n\n          on(_this.el_.contentWindow, 'unload', unloadListener_);\n          on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n\n        _this.one('load', _this.loadListener_);\n      }\n\n      return _this;\n    }\n\n    var _proto = ResizeManager.prototype;\n\n    _proto.createEl = function createEl() {\n      return _Component.prototype.createEl.call(this, 'iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1,\n        title: this.localize('No content')\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    ;\n\n    _proto.resizeHandler = function resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {EventTarget~Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n\n      this.player_.trigger('playerresize');\n    };\n\n    _proto.dispose = function dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n\n        this.resizeObserver_.disconnect();\n      }\n\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return ResizeManager;\n  }(Component$1);\n\n  Component$1.registerComponent('ResizeManager', ResizeManager);\n\n  var defaults = {\n    trackingThreshold: 20,\n    liveTolerance: 15\n  };\n  /*\n    track when we are at the live edge, and other helpers for live playback */\n\n  /**\n   * A class for checking live current time and determining when the player\n   * is at or behind the live edge.\n   */\n\n  var LiveTracker = /*#__PURE__*/function (_Component) {\n    inheritsLoose(LiveTracker, _Component);\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {number} [options.trackingThreshold=20]\n     *        Number of seconds of live window (seekableEnd - seekableStart) that\n     *        media needs to have before the liveui will be shown.\n     *\n     * @param {number} [options.liveTolerance=15]\n     *        Number of seconds behind live that we have to be\n     *        before we will be considered non-live. Note that this will only\n     *        be used when playing at the live edge. This allows large seekable end\n     *        changes to not effect wether we are live or not.\n     */\n    function LiveTracker(player, options) {\n      var _this;\n\n      // LiveTracker does not need an element\n      var options_ = mergeOptions$3(defaults, options, {\n        createEl: false\n      });\n      _this = _Component.call(this, player, options_) || this;\n\n      _this.handleVisibilityChange_ = function (e) {\n        return _this.handleVisibilityChange(e);\n      };\n\n      _this.trackLiveHandler_ = function () {\n        return _this.trackLive_();\n      };\n\n      _this.handlePlay_ = function (e) {\n        return _this.handlePlay(e);\n      };\n\n      _this.handleFirstTimeupdate_ = function (e) {\n        return _this.handleFirstTimeupdate(e);\n      };\n\n      _this.handleSeeked_ = function (e) {\n        return _this.handleSeeked(e);\n      };\n\n      _this.seekToLiveEdge_ = function (e) {\n        return _this.seekToLiveEdge(e);\n      };\n\n      _this.reset_();\n\n      _this.on(_this.player_, 'durationchange', function (e) {\n        return _this.handleDurationchange(e);\n      }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n      // may not have the proper values for things like seekableEnd until then\n\n\n      _this.on(_this.player_, 'canplay', function () {\n        return _this.toggleTracking();\n      }); // we don't need to track live playback if the document is hidden,\n      // also, tracking when the document is hidden can\n      // cause the CPU to spike and eventually crash the page on IE11.\n\n\n      if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n        _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n      }\n\n      return _this;\n    }\n    /**\n     * toggle tracking based on document visiblility\n     */\n\n\n    var _proto = LiveTracker.prototype;\n\n    _proto.handleVisibilityChange = function handleVisibilityChange() {\n      if (this.player_.duration() !== Infinity) {\n        return;\n      }\n\n      if (document.hidden) {\n        this.stopTracking();\n      } else {\n        this.startTracking();\n      }\n    }\n    /**\n     * all the functionality for tracking when seek end changes\n     * and for tracking how far past seek end we should be\n     */\n    ;\n\n    _proto.trackLive_ = function trackLive_() {\n      var seekable = this.player_.seekable(); // skip undefined seekable\n\n      if (!seekable || !seekable.length) {\n        return;\n      }\n\n      var newTime = Number(window.performance.now().toFixed(4));\n      var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n      this.lastTime_ = newTime;\n      this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n      var liveCurrentTime = this.liveCurrentTime();\n      var currentTime = this.player_.currentTime(); // we are behind live if any are true\n      // 1. the player is paused\n      // 2. the user seeked to a location 2 seconds away from live\n      // 3. the difference between live and current time is greater\n      //    liveTolerance which defaults to 15s\n\n      var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n      // 1. until we have not seen a timeupdate yet\n      // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n      if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n        isBehind = false;\n      }\n\n      if (isBehind !== this.behindLiveEdge_) {\n        this.behindLiveEdge_ = isBehind;\n        this.trigger('liveedgechange');\n      }\n    }\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    ;\n\n    _proto.handleDurationchange = function handleDurationchange() {\n      this.toggleTracking();\n    }\n    /**\n     * start/stop tracking\n     */\n    ;\n\n    _proto.toggleTracking = function toggleTracking() {\n      if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n        if (this.player_.options_.liveui) {\n          this.player_.addClass('vjs-liveui');\n        }\n\n        this.startTracking();\n      } else {\n        this.player_.removeClass('vjs-liveui');\n        this.stopTracking();\n      }\n    }\n    /**\n     * start tracking live playback\n     */\n    ;\n\n    _proto.startTracking = function startTracking() {\n      if (this.isTracking()) {\n        return;\n      } // If we haven't seen a timeupdate, we need to check whether playback\n      // began before this component started tracking. This can happen commonly\n      // when using autoplay.\n\n\n      if (!this.timeupdateSeen_) {\n        this.timeupdateSeen_ = this.player_.hasStarted();\n      }\n\n      this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n      this.trackLive_();\n      this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n      if (!this.timeupdateSeen_) {\n        this.one(this.player_, 'play', this.handlePlay_);\n        this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      } else {\n        this.on(this.player_, 'seeked', this.handleSeeked_);\n      }\n    }\n    /**\n     * handle the first timeupdate on the player if it wasn't already playing\n     * when live tracker started tracking.\n     */\n    ;\n\n    _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n      this.timeupdateSeen_ = true;\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n    /**\n     * Keep track of what time a seek starts, and listen for seeked\n     * to find where a seek ends.\n     */\n    ;\n\n    _proto.handleSeeked = function handleSeeked() {\n      var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n      this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n      this.nextSeekedFromUser_ = false;\n      this.trackLive_();\n    }\n    /**\n     * handle the first play on the player, and make sure that we seek\n     * right to the live edge.\n     */\n    ;\n\n    _proto.handlePlay = function handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    ;\n\n    _proto.reset_ = function reset_() {\n      this.lastTime_ = -1;\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = -1;\n      this.behindLiveEdge_ = true;\n      this.timeupdateSeen_ = false;\n      this.seekedBehindLive_ = false;\n      this.nextSeekedFromUser_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      this.off(this.player_, 'seeked', this.handleSeeked_);\n      this.off(this.player_, 'play', this.handlePlay_);\n      this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n    /**\n     * The next seeked event is from the user. Meaning that any seek\n     * > 2s behind live will be considered behind live for real and\n     * liveTolerance will be ignored.\n     */\n    ;\n\n    _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n      this.nextSeekedFromUser_ = true;\n    }\n    /**\n     * stop tracking live playback\n     */\n    ;\n\n    _proto.stopTracking = function stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n\n      this.reset_();\n      this.trigger('liveedgechange');\n    }\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The furthest seekable end or Infinity.\n     */\n    ;\n\n    _proto.seekableEnd = function seekableEnd() {\n      var seekable = this.player_.seekable();\n      var seekableEnds = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      } // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n\n\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The earliest seekable start or 0.\n     */\n    ;\n\n    _proto.seekableStart = function seekableStart() {\n      var seekable = this.player_.seekable();\n      var seekableStarts = [];\n      var i = seekable ? seekable.length : 0;\n\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      } // grab the first seekable start after sorting, or if there are none\n      // default to 0\n\n\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n    /**\n     * Get the live time window aka\n     * the amount of time between seekable start and\n     * live current time.\n     *\n     * @return {number}\n     *         The amount of seconds that are seekable in\n     *         the live video.\n     */\n    ;\n\n    _proto.liveWindow = function liveWindow() {\n      var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n      if (liveCurrentTime === Infinity) {\n        return 0;\n      }\n\n      return liveCurrentTime - this.seekableStart();\n    }\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     *\n     * @return {boolean}\n     *         Wether liveTracker is tracking\n     */\n    ;\n\n    _proto.isLive = function isLive() {\n      return this.isTracking();\n    }\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     *\n     * @return {boolean}\n     *         Wether playback is at the live edge\n     */\n    ;\n\n    _proto.atLiveEdge = function atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n    /**\n     * get what we expect the live current time to be\n     *\n     * @return {number}\n     *         The expected live current time\n     */\n    ;\n\n    _proto.liveCurrentTime = function liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n    /**\n     * The number of seconds that have occured after seekable end\n     * changed. This will be reset to 0 once seekable end changes.\n     *\n     * @return {number}\n     *         Seconds past the current seekable end\n     */\n    ;\n\n    _proto.pastSeekEnd = function pastSeekEnd() {\n      var seekableEnd = this.seekableEnd();\n\n      if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n        this.pastSeekEnd_ = 0;\n      }\n\n      this.lastSeekEnd_ = seekableEnd;\n      return this.pastSeekEnd_;\n    }\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     *\n     * @return {boolean}\n     *         If we are behind the live edge\n     */\n    ;\n\n    _proto.behindLiveEdge = function behindLiveEdge() {\n      return this.behindLiveEdge_;\n    }\n    /**\n     * Wether live tracker is currently tracking or not.\n     */\n    ;\n\n    _proto.isTracking = function isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    ;\n\n    _proto.seekToLiveEdge = function seekToLiveEdge() {\n      this.seekedBehindLive_ = false;\n\n      if (this.atLiveEdge()) {\n        return;\n      }\n\n      this.nextSeekedFromUser_ = false;\n      this.player_.currentTime(this.liveCurrentTime());\n    }\n    /**\n     * Dispose of liveTracker\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n      this.stopTracking();\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    return LiveTracker;\n  }(Component$1);\n\n  Component$1.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n\n  var sourcesetLoad = function sourcesetLoad(tech) {\n    var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n\n\n    var sources = tech.$$('source');\n    var srcUrls = [];\n    var src = ''; // if there are no sources, do not fire sourceset\n\n    if (!sources.length) {\n      return false;\n    } // only count valid/non-duplicate source elements\n\n\n    for (var i = 0; i < sources.length; i++) {\n      var url = sources[i].src;\n\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    } // there were no valid sources\n\n\n    if (!srcUrls.length) {\n      return false;\n    } // there is only one valid source element url\n    // use that\n\n\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n\n    tech.triggerSourceset(src);\n    return true;\n  };\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n      dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n      var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      } // remove content\n\n\n      this.innerText = ''; // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n\n      window.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n      return this.innerHTML;\n    }\n  });\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n\n  var getDescriptor = function getDescriptor(priority, prop) {\n    var descriptor = {};\n\n    for (var i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n\n  var getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n  };\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n\n\n  var firstSourceWatch = function firstSourceWatch(tech) {\n    var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n    if (el.resetSourceWatch_) {\n      return;\n    }\n\n    var old = {};\n    var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n    var appendWrapper = function appendWrapper(appendFn) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var retval = appendFn.apply(el, args);\n        sourcesetLoad(tech);\n        return retval;\n      };\n    };\n\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n      if (!el[k]) {\n        return;\n      } // store the old function\n\n\n      old[k] = el[k]; // call the old function with a sourceset if a source\n      // was loaded\n\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n\n    el.resetSourceWatch_ = function () {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(function (k) {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    }; // on the first sourceset, we need to revert our changes\n\n\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one.\n   */\n\n\n  var srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n\n  var getSrcDescriptor = function getSrcDescriptor(tech) {\n    return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n  };\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n\n\n  var setupSourceset = function setupSourceset(tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n\n    var el = tech.el(); // make sure sourceset isn't setup twice.\n\n    if (el.resetSourceset_) {\n      return;\n    }\n\n    var srcDescriptor = getSrcDescriptor(tech);\n    var oldSetAttribute = el.setAttribute;\n    var oldLoad = el.load;\n    Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n      set: function set(v) {\n        var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n\n    el.setAttribute = function (n, v) {\n      var retval = oldSetAttribute.call(el, n, v);\n\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n\n      return retval;\n    };\n\n    el.load = function () {\n      var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n\n      return retval;\n    };\n\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n\n    el.resetSourceset_ = function () {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  /**\n   * Object.defineProperty but \"lazy\", which means that the value is only set after\n   * it retrieved the first time, rather than being set right away.\n   *\n   * @param {Object} obj the object to set the property on\n   * @param {string} key the key for the property to set\n   * @param {Function} getValue the function used to get the value when it is needed.\n   * @param {boolean} setter wether a setter shoould be allowed or not\n   */\n  var defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n    if (setter === void 0) {\n      setter = true;\n    }\n\n    var set = function set(value) {\n      return Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        writable: true\n      });\n    };\n\n    var options = {\n      configurable: true,\n      enumerable: true,\n      get: function get() {\n        var value = getValue();\n        set(value);\n        return value;\n      }\n    };\n\n    if (setter) {\n      options.set = set;\n    }\n\n    return Object.defineProperty(obj, key, options);\n  };\n\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n\n  var Html5 = /*#__PURE__*/function (_Tech) {\n    inheritsLoose(Html5, _Tech);\n\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} ready\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    function Html5(options, ready) {\n      var _this;\n\n      _this = _Tech.call(this, options, ready) || this;\n      var source = options.source;\n      var crossoriginTracks = false;\n      _this.featuresVideoFrameCallback = _this.featuresVideoFrameCallback && _this.el_.tagName === 'VIDEO'; // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n\n      if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        _this.setSource(source);\n      } else {\n        _this.handleLateInit_(_this.el_);\n      } // setup sourceset after late sourceset/init\n\n\n      if (options.enableSourceset) {\n        _this.setupSourcesetHandling_();\n      }\n\n      _this.isScrubbing_ = false;\n\n      if (_this.el_.hasChildNodes()) {\n        var nodes = _this.el_.childNodes;\n        var nodesLength = nodes.length;\n        var removeNodes = [];\n\n        while (nodesLength--) {\n          var node = nodes[nodesLength];\n          var nodeName = node.nodeName.toLowerCase();\n\n          if (nodeName === 'track') {\n            if (!_this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              _this.remoteTextTrackEls().addTrackElement_(node);\n\n              _this.remoteTextTracks().addTrack(node.track);\n\n              _this.textTracks().addTrack(node.track);\n\n              if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < removeNodes.length; i++) {\n          _this.el_.removeChild(removeNodes[i]);\n        }\n      }\n\n      _this.proxyNativeTracks_();\n\n      if (_this.featuresNativeTextTracks && crossoriginTracks) {\n        log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n      } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n      _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n\n\n      if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n        _this.setControls(true);\n      } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n\n\n      _this.proxyWebkitFullscreen_();\n\n      _this.triggerReady();\n\n      return _this;\n    }\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n\n\n    var _proto = Html5.prototype;\n\n    _proto.dispose = function dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null; // tech will handle clearing of the emulated track list\n\n      _Tech.prototype.dispose.call(this);\n    }\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    ;\n\n    _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    ;\n\n    _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n      var textTracks = this.textTracks();\n      var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n      var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n        metadataTracksPreFullscreenState = [];\n\n        for (var i = 0; i < textTracks.length; i++) {\n          var track = textTracks[i];\n\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track: track,\n              storedMode: track.mode\n            });\n          }\n        }\n      }; // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n\n\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', function () {\n        return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      });\n\n      var restoreTrackMode = function restoreTrackMode() {\n        for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          var storedTrack = metadataTracksPreFullscreenState[i];\n\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        } // we only want this handler to be executed on the first 'change' event\n\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      }; // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n\n\n      this.on('webkitbeginfullscreen', function () {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      }); // start updating the snapshot again after leaving fullscreen\n\n      this.on('webkitendfullscreen', function () {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    ;\n\n    _proto.overrideNative_ = function overrideNative_(type, override) {\n      var _this2 = this;\n\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n        return;\n      }\n\n      var lowerCaseType = type.toLowerCase();\n\n      if (this[lowerCaseType + \"TracksListeners_\"]) {\n        Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n          var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n          elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n        });\n      }\n\n      this[\"featuresNative\" + type + \"Tracks\"] = !override;\n      this[lowerCaseType + \"TracksListeners_\"] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    ;\n\n    _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n      var _this3 = this;\n\n      var props = NORMAL[name];\n      var elTracks = this.el()[props.getterName];\n      var techTracks = this[props.getterName]();\n\n      if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n\n      var listeners = {\n        change: function change(e) {\n          var event = {\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          };\n          techTracks.trigger(event); // if we are a text track change event, we should also notify the\n          // remote text track list. This can potentially cause a false positive\n          // if we were to get a change event on a non-remote track and\n          // we triggered the event on the remote text track list which doesn't\n          // contain that track. However, best practices mean looping through the\n          // list of tracks and searching for the appropriate mode value, so,\n          // this shouldn't pose an issue\n\n          if (name === 'text') {\n            _this3[REMOTE.remoteText.getterName]().trigger(event);\n          }\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n\n        _this3.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      }); // Remove (native) tracks that are not used anymore\n\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', function (e) {\n        return _this3.off('loadstart', removeOldTracks);\n      });\n    }\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    ;\n\n    _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n      var _this4 = this;\n\n      NORMAL.names.forEach(function (name) {\n        _this4.proxyNativeTracksForType_(name);\n      });\n    }\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          var clone = el.cloneNode(true);\n\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video'); // determine if native controls should be used\n\n          var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          var attributes = mergeOptions$3({}, tagAttributes);\n\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n\n          setAttributes(el, assign(attributes, {\n            id: this.options_.techId,\n            \"class\": 'vjs-tech'\n          }));\n        }\n\n        el.playerId = this.options_.playerId;\n      }\n\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      }\n\n      if (this.options_.disablePictureInPicture !== undefined) {\n        el.disablePictureInPicture = this.options_.disablePictureInPicture;\n      } // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n\n\n      var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n      for (var i = 0; i < settingsAttrs.length; i++) {\n        var attr = settingsAttrs[i];\n        var value = this.options_[attr];\n\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n\n          el[attr] = value;\n        }\n      }\n\n      return el;\n    }\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    ;\n\n    _proto.handleLateInit_ = function handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        var loadstartFired = false;\n\n        var setLoadstartFired = function setLoadstartFired() {\n          loadstartFired = true;\n        };\n\n        this.on('loadstart', setLoadstartFired);\n\n        var triggerLoadstart = function triggerLoadstart() {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      } // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n\n\n      var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n      eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      } // We still need to give the player time to add event listeners\n\n\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n    /**\n     * Set whether we are scrubbing or not.\n     * This is used to decide whether we should use `fastSeek` or not.\n     * `fastSeek` is used to provide trick play on Safari browsers.\n     *\n     * @param {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.setScrubbing = function setScrubbing(isScrubbing) {\n      this.isScrubbing_ = isScrubbing;\n    }\n    /**\n     * Get whether we are scrubbing or not.\n     *\n     * @return {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing() {\n      return this.isScrubbing_;\n    }\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(seconds) {\n      try {\n        if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n          this.el_.fastSeek(seconds);\n        } else {\n          this.el_.currentTime = seconds;\n        }\n      } catch (e) {\n        log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    ;\n\n    _proto.duration = function duration() {\n      var _this5 = this;\n\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        var checkProgress = function checkProgress() {\n          if (_this5.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (_this5.el_.duration === Infinity) {\n              _this5.trigger('durationchange');\n            }\n\n            _this5.off('timeupdate', checkProgress);\n          }\n        };\n\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n\n      return this.el_.duration || NaN;\n    }\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    ;\n\n    _proto.width = function width() {\n      return this.el_.offsetWidth;\n    }\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    ;\n\n    _proto.height = function height() {\n      return this.el_.offsetHeight;\n    }\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    ;\n\n    _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n      var _this6 = this;\n\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n\n      var endFn = function endFn() {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        }); // Safari will sometimes set contols on the videoelement when existing fullscreen.\n\n        if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n          this.el_.controls = false;\n        }\n      };\n\n      var beginFn = function beginFn() {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true,\n            // set a flag in case another tech triggers fullscreenchange\n            nativeIOSFullscreen: true\n          });\n        }\n      };\n\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', function () {\n        _this6.off('webkitbeginfullscreen', beginFn);\n\n        _this6.off('webkitendfullscreen', endFn);\n      });\n    }\n    /**\n     * Check if fullscreen is supported on the current playback device.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      if (typeof this.el_.webkitEnterFullScreen === 'function') {\n        var userAgent = window.navigator && window.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n        if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    ;\n\n    _proto.enterFullScreen = function enterFullScreen() {\n      var video = this.el_;\n\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n\n        this.setTimeout(function () {\n          video.pause();\n\n          try {\n            video.webkitEnterFullScreen();\n          } catch (e) {\n            this.trigger('fullscreenerror', e);\n          }\n        }, 0);\n      } else {\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }\n    }\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    ;\n\n    _proto.exitFullScreen = function exitFullScreen() {\n      if (!this.el_.webkitDisplayingFullscreen) {\n        this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n        return;\n      }\n\n      this.el_.webkitExitFullScreen();\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      return this.el_.requestPictureInPicture();\n    }\n    /**\n     * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n     * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n     * Needs to be checked later than the constructor\n     * This will be a false positive for clear sources loaded after a Fairplay source\n     *\n     * @param {function} cb function to call\n     * @return {number} id of request\n     */\n    ;\n\n    _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        return this.el_.requestVideoFrameCallback(cb);\n      }\n\n      return _Tech.prototype.requestVideoFrameCallback.call(this, cb);\n    }\n    /**\n     * Native or fallback requestVideoFrameCallback\n     *\n     * @param {number} id request id to cancel\n     */\n    ;\n\n    _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        this.el_.cancelVideoFrameCallback(id);\n      } else {\n        _Tech.prototype.cancelVideoFrameCallback.call(this, id);\n      }\n    }\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    ;\n\n    _proto.src = function src(_src) {\n      if (_src === undefined) {\n        return this.el_.src;\n      } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n      this.setSrc(_src);\n    }\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n\n      return this.el_.currentSrc;\n    }\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    ;\n\n    _proto.setControls = function setControls(val) {\n      this.el_.controls = !!val;\n    }\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n      }\n\n      return this.el_.addTextTrack(kind, label, language);\n    }\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    ;\n\n    _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return _Tech.prototype.createRemoteTextTrack.call(this, options);\n      }\n\n      var htmlTrackElement = document.createElement('track');\n\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n\n      if (options[\"default\"]) {\n        htmlTrackElement[\"default\"] = options[\"default\"];\n      }\n\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     * automatically removed from the video element whenever the source changes\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     * to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n\n      return htmlTrackElement;\n    }\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n      _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n      if (this.featuresNativeTextTracks) {\n        var tracks = this.$$('track');\n        var i = tracks.length;\n\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n\n      var videoPlaybackQuality = {};\n\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n\n      if (window.performance && typeof window.performance.now === 'function') {\n        videoPlaybackQuality.creationTime = window.performance.now();\n      } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n        videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n      }\n\n      return videoPlaybackQuality;\n    };\n\n    return Html5;\n  }(Tech);\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n\n\n  defineLazyProperty(Html5, 'TEST_VID', function () {\n    if (!isReal()) {\n      return;\n    }\n\n    var video = document.createElement('video');\n    var track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    video.appendChild(track);\n    return video;\n  });\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      var volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      var canControl = volume !== Html5.TEST_VID.volume; // With the introduction of iOS 15, there are cases where the volume is read as\n      // changed but reverts back to its original state at the start of the next tick.\n      // To determine whether volume can be controlled on iOS,\n      // a timeout is set and the volume is checked asynchronously.\n      // Since `features` doesn't currently work asynchronously, the value is manually set.\n\n      if (canControl && IS_IOS) {\n        window.setTimeout(function () {\n          if (Html5 && Html5.prototype) {\n            Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n          }\n        }); // default iOS to false, which will be updated in the timeout above.\n\n        return false;\n      }\n\n      return canControl;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {bolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n\n\n  Html5.canMuteVolume = function () {\n    try {\n      var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n\n      Html5.TEST_VID.muted = !muted;\n\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n\n\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    } // IE will error if Windows Media Player not installed #3315\n\n\n    try {\n      var playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n\n\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      var noop = function noop() {};\n\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n\n\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n\n\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n\n\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n\n  [['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n    var key = _ref[0],\n        fn = _ref[1];\n    defineLazyProperty(Html5.prototype, key, function () {\n      return Html5[fn]();\n    }, true);\n  });\n  Html5.prototype.featuresVolumeControl = Html5.canControlVolume();\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresFullscreenResize = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n\n  Html5.prototype.featuresProgressEvents = true;\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n\n  Html5.prototype.featuresTimeupdateEvents = true;\n  /**\n   * Whether the HTML5 el supports `requestVideoFrameCallback`\n   *\n   * @type {boolean}\n   */\n\n  Html5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\n  var canPlayType;\n\n  Html5.patchCanPlayType = function () {\n    // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n    // Firefox and Chrome report correctly\n    if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n      canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n      Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n        var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n        if (type && mpegurlRE.test(type)) {\n          return 'maybe';\n        }\n\n        return canPlayType.call(this, type);\n      };\n    }\n  };\n\n  Html5.unpatchCanPlayType = function () {\n    var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    if (canPlayType) {\n      Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n    }\n\n    return r;\n  }; // by default, patch the media element\n\n\n  Html5.patchCanPlayType();\n\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    } // remove any child track or source nodes to prevent their loading\n\n\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    } // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n\n\n    el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// not supported\n        }\n      })();\n    }\n  };\n\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n\n    var sources = el.querySelectorAll('source');\n    var i = sources.length;\n\n    while (i--) {\n      el.removeChild(sources[i]);\n    } // remove any src reference.\n    // not setting `src=''` because that throws an error\n\n\n    el.removeAttribute('src');\n\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {// satisfy linter\n        }\n      })();\n    }\n  };\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  }); // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on initial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  }); // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n  // played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of 'disablePictureInPicture' from the video element.\n   *\n   * @method Html5#disablePictureInPicture\n   * @return {boolean} value\n   *         - The value of `disablePictureInPicture` from the video element.\n   *         - True indicates that the video can't be played in Picture-In-Picture mode\n   *         - False indicates that the video can be played in Picture-In-Picture mode\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight',\n  /**\n   * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#crossOrigin\n   * @return {string}\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  }); // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n  // setDisablePictureInPicture, setCrossOrigin\n\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Prevents the browser from suggesting a Picture-in-Picture context menu\n   * or to request Picture-in-Picture automatically in some cases.\n   *\n   * @method Html5#setDisablePictureInPicture\n   * @param {boolean} value\n   *         The true value will disable Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#setCrossOrigin\n   * @param {string} crossOrigin\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  }); // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n\n  Html5.nativeSourceHandler = {};\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n\n\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      var ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n    }\n\n    return '';\n  };\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n\n\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n\n\n  Html5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  // on the player when they happen\n\n  var TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange']; // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n\n  var TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  var BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  var BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n\n  BREAKPOINT_ORDER.forEach(function (k) {\n    var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n    BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n  });\n  var DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in two ways:\n   * 1. By calling `videojs('example_video_1');`\n   * 2. By using it directly via  `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   */\n\n  var Player = /*#__PURE__*/function (_Component) {\n    inheritsLoose(Player, _Component);\n\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    function Player(tag, options, ready) {\n      var _this;\n\n      // Make sure tag ID exists\n      tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n\n      options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n\n      options.initChildren = false; // Same with creating the element\n\n      options.createEl = false; // don't auto mixin the evented mixin\n\n      options.evented = false; // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n\n      options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n      if (!options.language) {\n        if (typeof tag.closest === 'function') {\n          var closest = tag.closest('[lang]');\n\n          if (closest && closest.getAttribute) {\n            options.language = closest.getAttribute('lang');\n          }\n        } else {\n          var element = tag;\n\n          while (element && element.nodeType === 1) {\n            if (getAttributes(element).hasOwnProperty('lang')) {\n              options.language = element.getAttribute('lang');\n              break;\n            }\n\n            element = element.parentNode;\n          }\n        }\n      } // Run base component initializing with new options\n\n\n      _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n      _this.boundDocumentFullscreenChange_ = function (e) {\n        return _this.documentFullscreenChange_(e);\n      };\n\n      _this.boundFullWindowOnEscKey_ = function (e) {\n        return _this.fullWindowOnEscKey(e);\n      };\n\n      _this.boundUpdateStyleEl_ = function (e) {\n        return _this.updateStyleEl_(e);\n      };\n\n      _this.boundApplyInitTime_ = function (e) {\n        return _this.applyInitTime_(e);\n      };\n\n      _this.boundUpdateCurrentBreakpoint_ = function (e) {\n        return _this.updateCurrentBreakpoint_(e);\n      };\n\n      _this.boundHandleTechClick_ = function (e) {\n        return _this.handleTechClick_(e);\n      };\n\n      _this.boundHandleTechDoubleClick_ = function (e) {\n        return _this.handleTechDoubleClick_(e);\n      };\n\n      _this.boundHandleTechTouchStart_ = function (e) {\n        return _this.handleTechTouchStart_(e);\n      };\n\n      _this.boundHandleTechTouchMove_ = function (e) {\n        return _this.handleTechTouchMove_(e);\n      };\n\n      _this.boundHandleTechTouchEnd_ = function (e) {\n        return _this.handleTechTouchEnd_(e);\n      };\n\n      _this.boundHandleTechTap_ = function (e) {\n        return _this.handleTechTap_(e);\n      }; // default isFullscreen_ to false\n\n\n      _this.isFullscreen_ = false; // create logger\n\n      _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n      _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n      _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n\n      _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      _this.isReady_ = false; // Init state hasStarted_\n\n      _this.hasStarted_ = false; // Init state userActive_\n\n      _this.userActive_ = false; // Init debugEnabled_\n\n      _this.debugEnabled_ = false; // Init state audioOnlyMode_\n\n      _this.audioOnlyMode_ = false; // Init state audioPosterMode_\n\n      _this.audioPosterMode_ = false; // Init state audioOnlyCache_\n\n      _this.audioOnlyCache_ = {\n        playerHeight: null,\n        hiddenChildren: []\n      }; // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n\n      if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      } // Store the original tag used to set options\n\n\n      _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n      _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n      _this.language(_this.options_.language); // Update Supported Languages\n\n\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        var languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        _this.languages_ = languagesToLower;\n      } else {\n        _this.languages_ = Player.prototype.options_.languages;\n      }\n\n      _this.resetCache_(); // Set poster\n\n\n      _this.poster_ = options.poster || ''; // Set controls\n\n      _this.controls_ = !!options.controls; // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      _this.changingSrc_ = false;\n      _this.playCallbacks_ = [];\n      _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n      if (tag.hasAttribute('autoplay')) {\n        _this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        _this.autoplay(_this.options_.autoplay);\n      } // check plugins\n\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          if (typeof _this[name] !== 'function') {\n            throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n          }\n        });\n      }\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n\n\n      _this.scrubbing_ = false;\n      _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n      evented(assertThisInitialized(_this), {\n        eventBusKey: 'el_'\n      }); // listen to document and player fullscreenchange handlers so we receive those events\n      // before a user can receive them so we can update isFullscreen appropriately.\n      // make sure that we listen to fullscreenchange events before everything else to make sure that\n      // our isFullscreen method is updated properly for internal components as well as external.\n\n      if (_this.fsApi_.requestFullscreen) {\n        on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n        _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n      }\n\n      if (_this.fluid_) {\n        _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n      } // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n\n\n      var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(function (name) {\n          _this[name](options.plugins[name]);\n        });\n      } // Enable debug mode to fire debugon event for all plugins.\n\n\n      if (options.debug) {\n        _this.debug(true);\n      }\n\n      _this.options_.playerOptions = playerOptionsCopy;\n      _this.middleware_ = [];\n\n      _this.playbackRates(options.playbackRates);\n\n      _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n      _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n\n\n      if (_this.controls()) {\n        _this.addClass('vjs-controls-enabled');\n      } else {\n        _this.addClass('vjs-controls-disabled');\n      } // Set ARIA label and region role depending on player type\n\n\n      _this.el_.setAttribute('role', 'region');\n\n      if (_this.isAudio()) {\n        _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n      } else {\n        _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n      }\n\n      if (_this.isAudio()) {\n        _this.addClass('vjs-audio');\n      }\n\n      if (_this.flexNotSupported_()) {\n        _this.addClass('vjs-no-flex');\n      } // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n\n\n      if (TOUCH_ENABLED) {\n        _this.addClass('vjs-touch-enabled');\n      } // iOS Safari has broken hover handling\n\n\n      if (!IS_IOS) {\n        _this.addClass('vjs-workinghover');\n      } // Make player easily findable by ID\n\n\n      Player.players[_this.id_] = assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n      var majorVersion = version$5.split('.')[0];\n\n      _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n\n\n      _this.userActive(true);\n\n      _this.reportUserActivity();\n\n      _this.one('play', function (e) {\n        return _this.listenForUserActivity_(e);\n      });\n\n      _this.on('stageclick', function (e) {\n        return _this.handleStageClick_(e);\n      });\n\n      _this.on('keydown', function (e) {\n        return _this.handleKeyDown(e);\n      });\n\n      _this.on('languagechange', function (e) {\n        return _this.handleLanguagechange(e);\n      });\n\n      _this.breakpoints(_this.options_.breakpoints);\n\n      _this.responsive(_this.options_.responsive); // Calling both the audio mode methods after the player is fully\n      // setup to be able to listen to the events triggered by them\n\n\n      _this.on('ready', function () {\n        // Calling the audioPosterMode method first so that\n        // the audioOnlyMode can take precedence when both options are set to true\n        _this.audioPosterMode(_this.options_.audioPosterMode);\n\n        _this.audioOnlyMode(_this.options_.audioOnlyMode);\n      });\n\n      return _this;\n    }\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n\n\n    var _proto = Player.prototype;\n\n    _proto.dispose = function dispose() {\n      var _this2 = this;\n\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('dispose'); // prevent dispose from being called twice\n\n      this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      } // Kill reference to this player\n\n\n      Player.players[this.id_] = null;\n\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n\n      if (this.tag) {\n        this.tag = null;\n      }\n\n      clearCacheForPlayer(this); // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n\n        var list = _this2[props.getterName](); // if it is not a native list\n        // we have to manually remove event listeners\n\n\n        if (list && list.off) {\n          list.off();\n        }\n      }); // the actual .el_ is removed here, or replaced if\n\n      _Component.prototype.dispose.call(this, {\n        restoreEl: this.options_.restoreEl\n      });\n    }\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    ;\n\n    _proto.createEl = function createEl() {\n      var tag = this.tag;\n      var el;\n      var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n      } // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n\n\n      var attrs = getAttributes(tag);\n\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n\n        Object.keys(el).forEach(function (k) {\n          try {\n            tag[k] = el[k];\n          } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n          }\n        });\n      } // set tabindex to -1 to remove the video element from the focus order\n\n\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n      // for the same issue with Chrome (on Windows) with JAWS.\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n      if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }); // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech'; // Make player findable on elements\n\n      tag.player = el.player = this; // Default state of video is paused\n\n      this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overrideable by CSS, just like the\n      // video element\n\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        var defaultsStyleEl = $('.vjs-styles-defaults');\n        var head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n\n      this.fill_ = false;\n      this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n      this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n\n      var links = tag.getElementsByTagName('a');\n\n      for (var i = 0; i < links.length; i++) {\n        var linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n\n\n      tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      } // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n\n\n      prependTo(tag, el);\n      this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n\n      this.el_.setAttribute('lang', this.language_);\n      this.el_.setAttribute('translate', 'no');\n      this.el_ = el;\n      return el;\n    }\n    /**\n     * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n     * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n     * behavior.\n     *\n     * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n     *\n     * @param {string} [value]\n     *        The value to set the `Player`'s crossOrigin to. If an argument is\n     *        given, must be one of `anonymous` or `use-credentials`.\n     *\n     * @return {string|undefined}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.crossOrigin = function crossOrigin(value) {\n      if (!value) {\n        return this.techGet_('crossOrigin');\n      }\n\n      if (value !== 'anonymous' && value !== 'use-credentials') {\n        log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n        return;\n      }\n\n      this.techCall_('setCrossOrigin', value);\n      return;\n    }\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s width to.\n     *\n     * @return {number}\n     *         The current width of the `Player` when getting.\n     */\n    ;\n\n    _proto.width = function width(value) {\n      return this.dimension('width', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s heigth to.\n     *\n     * @return {number}\n     *         The current height of the `Player` when getting.\n     */\n    ;\n\n    _proto.height = function height(value) {\n      return this.dimension('height', value);\n    }\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    ;\n\n    _proto.dimension = function dimension(_dimension, value) {\n      var privDimension = _dimension + '_';\n\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n\n      if (value === '' || value === 'auto') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n\n      var parsedVal = parseFloat(value);\n\n      if (isNaN(parsedVal)) {\n        log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n        return;\n      }\n\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fluid = function fluid(bool) {\n      var _this3 = this;\n\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n\n      this.fluid_ = !!bool;\n\n      if (isEvented(this)) {\n        this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(this, function () {\n          _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n\n      this.updateStyleEl_();\n    }\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    ;\n\n    _proto.fill = function fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n\n      this.fill_ = !!bool;\n\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player`'s aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    ;\n\n    _proto.aspectRatio = function aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      } // Check for width:height format\n\n\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n\n      this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    ;\n\n    _proto.updateStyleEl_ = function updateStyleEl_() {\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n        var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n        var techEl = this.tech_ && this.tech_.el();\n\n        if (techEl) {\n          if (_width >= 0) {\n            techEl.width = _width;\n          }\n\n          if (_height >= 0) {\n            techEl.height = _height;\n          }\n        }\n\n        return;\n      }\n\n      var width;\n      var height;\n      var aspectRatio;\n      var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n      var ratioParts = aspectRatio.split(':');\n      var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      } // Ensure the CSS class is valid by starting with an alpha character\n\n\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      } // Ensure the right class is still on the player for the style element\n\n\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n    }\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadTech_ = function loadTech_(techName, source) {\n      var _this4 = this;\n\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n\n      var titleTechName = toTitleCase$1(techName);\n      var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n\n      this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n      this.isReady_ = false;\n      var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n\n      if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n        autoplay = false;\n      } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n      var techOptions = {\n        source: source,\n        autoplay: autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': this.id() + \"_\" + camelTechName + \"_api\",\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'disablePictureInPicture': this.options_.disablePictureInPicture,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset,\n        'Promise': this.options_.Promise\n      };\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        techOptions[props.getterName] = _this4[props.privateName];\n      });\n      assign(techOptions, this.options_[titleTechName]);\n      assign(techOptions, this.options_[camelTechName]);\n      assign(techOptions, this.options_[techName.toLowerCase()]);\n\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      } // Initialize tech instance\n\n\n      var TechClass = Tech.getTech(techName);\n\n      if (!TechClass) {\n        throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n      }\n\n      this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n      this.tech_.ready(bind(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n      TECH_EVENTS_RETRIGGER.forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (e) {\n          return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n        });\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n        _this4.on(_this4.tech_, event, function (eventObj) {\n          if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n            _this4.queuedCallbacks_.push({\n              callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n              event: eventObj\n            });\n\n            return;\n          }\n\n          _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', function (e) {\n        return _this4.handleTechLoadStart_(e);\n      });\n      this.on(this.tech_, 'sourceset', function (e) {\n        return _this4.handleTechSourceset_(e);\n      });\n      this.on(this.tech_, 'waiting', function (e) {\n        return _this4.handleTechWaiting_(e);\n      });\n      this.on(this.tech_, 'ended', function (e) {\n        return _this4.handleTechEnded_(e);\n      });\n      this.on(this.tech_, 'seeking', function (e) {\n        return _this4.handleTechSeeking_(e);\n      });\n      this.on(this.tech_, 'play', function (e) {\n        return _this4.handleTechPlay_(e);\n      });\n      this.on(this.tech_, 'firstplay', function (e) {\n        return _this4.handleTechFirstPlay_(e);\n      });\n      this.on(this.tech_, 'pause', function (e) {\n        return _this4.handleTechPause_(e);\n      });\n      this.on(this.tech_, 'durationchange', function (e) {\n        return _this4.handleTechDurationChange_(e);\n      });\n      this.on(this.tech_, 'fullscreenchange', function (e, data) {\n        return _this4.handleTechFullscreenChange_(e, data);\n      });\n      this.on(this.tech_, 'fullscreenerror', function (e, err) {\n        return _this4.handleTechFullscreenError_(e, err);\n      });\n      this.on(this.tech_, 'enterpictureinpicture', function (e) {\n        return _this4.handleTechEnterPictureInPicture_(e);\n      });\n      this.on(this.tech_, 'leavepictureinpicture', function (e) {\n        return _this4.handleTechLeavePictureInPicture_(e);\n      });\n      this.on(this.tech_, 'error', function (e) {\n        return _this4.handleTechError_(e);\n      });\n      this.on(this.tech_, 'posterchange', function (e) {\n        return _this4.handleTechPosterChange_(e);\n      });\n      this.on(this.tech_, 'textdata', function (e) {\n        return _this4.handleTechTextData_(e);\n      });\n      this.on(this.tech_, 'ratechange', function (e) {\n        return _this4.handleTechRateChange_(e);\n      });\n      this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n      this.usingNativeControls(this.techGet_('controls'));\n\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      } // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n\n\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      } // Get rid of the original video tag reference after the first tech is loaded\n\n\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    ;\n\n    _proto.unloadTech_ = function unloadTech_() {\n      var _this5 = this;\n\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(function (name) {\n        var props = ALL[name];\n        _this5[props.privateName] = _this5[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n\n      this.isPosterFromTech_ = false;\n    }\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    ;\n\n    _proto.tech = function tech(safety) {\n      if (safety === undefined) {\n        log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n      }\n\n      return this.tech_;\n    }\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    ;\n\n    _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_();\n      this.on(this.tech_, 'click', this.boundHandleTechClick_);\n      this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n\n      this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n\n      this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n    }\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n      this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n      this.off(this.tech_, 'click', this.boundHandleTechClick_);\n      this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n    }\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleTechReady_ = function handleTechReady_() {\n      this.triggerReady(); // Keep the same volume as before\n\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      } // Look if the tech found a higher resolution poster while loading\n\n\n      this.handleTechPosterChange_(); // Update the duration if available\n\n      this.handleTechDurationChange_();\n    }\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n     * function will also trigger {@link Player#firstplay} if it is the first loadstart\n     * for a video.\n     *\n     * @fires Player#loadstart\n     * @fires Player#firstplay\n     * @listens Tech#loadstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-seeking'); // reset the error state\n\n      this.error(null); // Update the duration\n\n      this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n      // The firstplay event relies on both the play and loadstart events\n      // which can happen in any order for a new source\n\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {EventTarget~Event}\n         */\n        this.trigger('loadstart');\n        this.trigger('firstplay');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      } // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n\n\n      this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n    }\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    ;\n\n    _proto.manualAutoplay_ = function manualAutoplay_(type) {\n      var _this6 = this;\n\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      } // Save original muted() value, set muted to true, and attempt to play().\n      // On promise rejection, restore muted from saved value\n\n\n      var resolveMuted = function resolveMuted() {\n        var previouslyMuted = _this6.muted();\n\n        _this6.muted(true);\n\n        var restoreMuted = function restoreMuted() {\n          _this6.muted(previouslyMuted);\n        }; // restore muted on play terminatation\n\n\n        _this6.playTerminatedQueue_.push(restoreMuted);\n\n        var mutedPromise = _this6.play();\n\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n\n        return mutedPromise[\"catch\"](function (err) {\n          restoreMuted();\n          throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n        });\n      };\n\n      var promise; // if muted defaults to true\n      // the only thing we can do is call play\n\n      if (type === 'any' && !this.muted()) {\n        promise = this.play();\n\n        if (isPromise(promise)) {\n          promise = promise[\"catch\"](resolveMuted);\n        }\n      } else if (type === 'muted' && !this.muted()) {\n        promise = resolveMuted();\n      } else {\n        promise = this.play();\n      }\n\n      if (!isPromise(promise)) {\n        return;\n      }\n\n      return promise.then(function () {\n        _this6.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      })[\"catch\"](function () {\n        _this6.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    ;\n\n    _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n      if (srcObj === void 0) {\n        srcObj = '';\n      }\n\n      var src = srcObj;\n      var type = '';\n\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      } // make sure all the caches are set to default values\n      // to prevent null checking\n\n\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n      if (src && !type) {\n        type = findMimetype(this, src);\n      } // update `currentSource` cache always\n\n\n      this.cache_.source = mergeOptions$3({}, srcObj, {\n        src: src,\n        type: type\n      });\n      var matchingSources = this.cache_.sources.filter(function (s) {\n        return s.src && s.src === src;\n      });\n      var sourceElSources = [];\n      var sourceEls = this.$$('source');\n      var matchingSourceEls = [];\n\n      for (var i = 0; i < sourceEls.length; i++) {\n        var sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      } // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n\n\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      } // update the tech `src` cache\n\n\n      this.cache_.src = src;\n    }\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {EventTarget~Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    ;\n\n    _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n      var _this7 = this;\n\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        var updateSourceCaches = function updateSourceCaches(src) {\n          return _this7.updateSourceCaches_(src);\n        };\n\n        var playerSrc = this.currentSource().src;\n        var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = function updateSourceCaches() {};\n          }\n        } // update the source to the initial source right away\n        // in some cases this will be empty string\n\n\n        updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n\n        if (!event.src) {\n          this.tech_.any(['sourceset', 'loadstart'], function (e) {\n            // if a sourceset happens before a `loadstart` there\n            // is nothing to do as this `handleTechSourceset_`\n            // will be called again and this will be handled there.\n            if (e.type === 'sourceset') {\n              return;\n            }\n\n            var techSrc = _this7.techGet('currentSrc');\n\n            _this7.lastSource_.tech = techSrc;\n\n            _this7.updateSourceCaches_(techSrc);\n          });\n        }\n      }\n\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     * @fires Player#firstplay\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    ;\n\n    _proto.hasStarted = function hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n\n      if (request === this.hasStarted_) {\n        return;\n      }\n\n      this.hasStarted_ = request;\n\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n        this.trigger('firstplay');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlay_ = function handleTechPlay_() {\n      this.removeClass('vjs-ended');\n      this.removeClass('vjs-paused');\n      this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('play');\n    }\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    ;\n\n    _proto.handleTechRateChange_ = function handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(function (queued) {\n          return queued.callback(queued.event);\n        });\n        this.queuedCallbacks_ = [];\n      }\n\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n\n      this.trigger('ratechange');\n    }\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    ;\n\n    _proto.handleTechWaiting_ = function handleTechWaiting_() {\n      var _this8 = this;\n\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n\n      var timeWhenWaiting = this.currentTime();\n\n      var timeUpdateListener = function timeUpdateListener() {\n        if (timeWhenWaiting !== _this8.currentTime()) {\n          _this8.removeClass('vjs-waiting');\n\n          _this8.off('timeupdate', timeUpdateListener);\n        }\n      };\n\n      this.on('timeupdate', timeUpdateListener);\n    }\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplay');\n    }\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    ;\n\n    _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('canplaythrough');\n    }\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    ;\n\n    _proto.handleTechPlaying_ = function handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('playing');\n    }\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeking_ = function handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeking');\n    }\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    ;\n\n    _proto.handleTechSeeked_ = function handleTechSeeked_() {\n      this.removeClass('vjs-seeking');\n      this.removeClass('vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('seeked');\n    }\n    /**\n     * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#firstplay\n     * @listens Tech#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n     * @private\n     */\n    ;\n\n    _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n      // If the first starttime attribute is specified\n      // then we will start at the given offset in seconds\n      if (this.options_.starttime) {\n        log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n        this.currentTime(this.options_.starttime);\n      }\n\n      this.addClass('vjs-has-started');\n      /**\n       * Fired the first time a video is played. Not part of the HLS spec, and this is\n       * probably not the best implementation yet, so use sparingly. If you don't have a\n       * reason to prevent playback, use `myPlayer.one('play');` instead.\n       *\n       * @event Player#firstplay\n       * @deprecated As of 6.0 firstplay event is deprecated.\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('firstplay');\n    }\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    ;\n\n    _proto.handleTechPause_ = function handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('pause');\n    }\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    ;\n\n    _proto.handleTechEnded_ = function handleTechEnded_() {\n      this.addClass('vjs-ended');\n      this.removeClass('vjs-waiting');\n\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ended');\n    }\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#click\n     * @private\n     */\n    ;\n\n    _proto.handleTechClick_ = function handleTechClick_(event) {\n      // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n      if (!this.controls_) {\n        return;\n      }\n\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n          this.options_.userActions.click.call(this, event);\n        } else if (this.paused()) {\n          silencePromise(this.play());\n        } else {\n          this.pause();\n        }\n      }\n    }\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    ;\n\n    _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      } // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n\n\n      var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n        return el.contains(event.target);\n      });\n\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    ;\n\n    _proto.handleTechTap_ = function handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n    /**\n     * Handle touch to end\n     *\n     * @param {EventTarget~Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    ;\n\n    _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * native click events on the SWF aren't triggered on IE11, Win8.1RT\n     * use stageclick events triggered from inside the SWF instead\n     *\n     * @private\n     * @listens stageclick\n     */\n    ;\n\n    _proto.handleStageClick_ = function handleStageClick_() {\n      this.reportUserActivity();\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    ;\n\n    _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n      var targetPlayer = e.target.player; // if another player was fullscreen\n      // do a null check for targetPlayer because older firefox's would put document as e.target\n\n      if (targetPlayer && targetPlayer !== this) {\n        return;\n      }\n\n      var el = this.el();\n      var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + this.fsApi_.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n      }\n\n      this.isFullscreen(isFs);\n    }\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {EventTarget~Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n      var _this9 = this;\n\n      if (data) {\n        if (data.nativeIOSFullscreen) {\n          this.addClass('vjs-ios-native-fs');\n          this.tech_.one('webkitendfullscreen', function () {\n            _this9.removeClass('vjs-ios-native-fs');\n          });\n        }\n\n        this.isFullscreen(data.isFullscreen);\n      }\n    };\n\n    _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n      this.trigger('fullscreenerror', err);\n    }\n    /**\n     * @private\n     */\n    ;\n\n    _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n      if (this.isInPictureInPicture()) {\n        this.addClass('vjs-picture-in-picture');\n      } else {\n        this.removeClass('vjs-picture-in-picture');\n      }\n    }\n    /**\n     * Handle Tech Enter Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the enterpictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#enterpictureinpicture\n     */\n    ;\n\n    _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n      this.isInPictureInPicture(true);\n    }\n    /**\n     * Handle Tech Leave Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the leavepictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#leavepictureinpicture\n     */\n    ;\n\n    _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n      this.isInPictureInPicture(false);\n    }\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    ;\n\n    _proto.handleTechError_ = function handleTechError_() {\n      var error = this.tech_.error();\n      this.error(error);\n    }\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    ;\n\n    _proto.handleTechTextData_ = function handleTechTextData_() {\n      var data = null;\n\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('textdata', data);\n    }\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    ;\n\n    _proto.getCache = function getCache() {\n      return this.cache_;\n    }\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetCache_ = function resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        initTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        playbackRates: [],\n        volume: 1\n      };\n    }\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} arg\n     *        the argument to pass\n     *\n     * @private\n     */\n    ;\n\n    _proto.techCall_ = function techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log$1(e);\n          throw e;\n        }\n      }, true);\n    }\n    /**\n     * Get calls can't wait for the tech, and sometimes don't need to.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {Function|undefined}\n     *         the method or undefined\n     *\n     * @private\n     */\n    ;\n\n    _proto.techGet_ = function techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      } // Flash likes to die and reload when you hide or reposition it.\n      // In these cases the object methods go away and we get errors.\n      // TODO: Is this needed for techs other than Flash?\n      // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n          throw e;\n        } // When a method isn't available on the object it throws a TypeError\n\n\n        if (e.name === 'TypeError') {\n          log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n          this.tech_.isReady_ = false;\n          throw e;\n        } // If error unknown, just log and throw\n\n\n        log$1(e);\n        throw e;\n      }\n    }\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    ;\n\n    _proto.play = function play() {\n      var _this10 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        return new PromiseClass(function (resolve) {\n          _this10.play_(resolve);\n        });\n      }\n\n      return this.play_();\n    }\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    ;\n\n    _proto.play_ = function play_(callback) {\n      var _this11 = this;\n\n      if (callback === void 0) {\n        callback = silencePromise;\n      }\n\n      this.playCallbacks_.push(callback);\n      var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      } // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n\n\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = function (e) {\n          _this11.play_();\n        };\n\n        this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n        if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n          this.load();\n        }\n\n        return;\n      } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n      var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differenciate between a terminated play and an actual call to play.\n     */\n    ;\n\n    _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n      var queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    ;\n\n    _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n      var callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n    /**\n     * Pause the video playback\n     *\n     * @return {Player}\n     *         A reference to the player object this function was called on\n     */\n    ;\n\n    _proto.pause = function pause() {\n      this.techCall_('pause');\n    }\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    ;\n\n    _proto.paused = function paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    ;\n\n    _proto.played = function played() {\n      return this.techGet_('played') || createTimeRanges(0, 0);\n    }\n    /**\n     * Returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean}\n     *         The value of scrubbing when getting\n     */\n    ;\n\n    _proto.scrubbing = function scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n\n      this.scrubbing_ = !!isScrubbing;\n      this.techCall_('setScrubbing', this.scrubbing_);\n\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number}\n     *         - the current time in seconds when getting\n     */\n    ;\n\n    _proto.currentTime = function currentTime(seconds) {\n      if (typeof seconds !== 'undefined') {\n        if (seconds < 0) {\n          seconds = 0;\n        }\n\n        if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n          this.cache_.initTime = seconds;\n          this.off('canplay', this.boundApplyInitTime_);\n          this.one('canplay', this.boundApplyInitTime_);\n          return;\n        }\n\n        this.techCall_('setCurrentTime', seconds);\n        this.cache_.initTime = 0;\n        return;\n      } // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit afterall.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n\n\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    /**\n     * Apply the value of initTime stored in cache as currentTime.\n     *\n     * @private\n     */\n    ;\n\n    _proto.applyInitTime_ = function applyInitTime_() {\n      this.currentTime(this.cache_.initTime);\n    }\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and depending on preload behaviour may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number}\n     *         - The duration of the video in seconds when getting\n     */\n    ;\n\n    _proto.duration = function duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n\n      seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing (esp. Flash)\n        // TODO: Required for techs other than Flash?\n        this.cache_.duration = seconds;\n\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n        } else {\n          this.removeClass('vjs-live');\n        }\n\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTime = function remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n    /**\n     * A remaining time function that is intented to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    ;\n\n    _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    } //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock TimeRange object (following HTML spec)\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var buffered = this.techGet_('buffered');\n\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges(0, 0);\n      }\n\n      return buffered;\n    }\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    ;\n\n    _proto.bufferedPercent = function bufferedPercent$1() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    ;\n\n    _proto.bufferedEnd = function bufferedEnd() {\n      var buffered = this.buffered();\n      var duration = this.duration();\n      var end = buffered.end(buffered.length - 1);\n\n      if (end > duration) {\n        end = duration;\n      }\n\n      return end;\n    }\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         The current volume as a percent when getting\n     */\n    ;\n\n    _proto.volume = function volume(percentAsDecimal) {\n      var vol;\n\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n\n        return;\n      } // Default to 1 when returning current volume.\n\n\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     */\n    ;\n\n    _proto.muted = function muted(_muted) {\n      if (_muted !== undefined) {\n        this.techCall_('setMuted', _muted);\n        return;\n      }\n\n      return this.techGet_('muted') || false;\n    }\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|Player}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - A reference to the current player when setting\n     */\n    ;\n\n    _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n      if (_defaultMuted !== undefined) {\n        return this.techCall_('setDefaultMuted', _defaultMuted);\n      }\n\n      return this.techGet_('defaultMuted') || false;\n    }\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         the current value of lastVolume as a percent when getting\n     *\n     * @private\n     */\n    ;\n\n    _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n\n      return this.cache_.lastVolume;\n    }\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    ;\n\n    _proto.supportsFullScreen = function supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     */\n    ;\n\n    _proto.isFullscreen = function isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        var oldValue = this.isFullscreen_;\n        this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n        // this is the only place where we trigger fullscreenchange events for older browsers\n        // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n        if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n          /**\n             * @event Player#fullscreenchange\n             * @type {EventTarget~Event}\n             */\n          this.trigger('fullscreenchange');\n        }\n\n        this.toggleFullscreenClass_();\n        return;\n      }\n\n      return this.isFullscreen_;\n    }\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @param  {Object} [fullscreenOptions]\n     *         Override the player fullscreen options\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n          if (promise) {\n            promise.then(offHandler, offHandler);\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.requestFullscreenHelper_();\n    };\n\n    _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n      var _this12 = this;\n\n      var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n      // Use defaults or player configured option unless passed directly to this method.\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      } // This method works as follows:\n      // 1. if a fullscreen api is available, use it\n      //   1. call requestFullscreen with potential options\n      //   2. if we got a promise from above, use it to update isFullscreen()\n      // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n      //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n      // 3. otherwise, use \"fullWindow\" mode\n\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n        if (promise) {\n          promise.then(function () {\n            return _this12.isFullscreen(true);\n          }, function () {\n            return _this12.isFullscreen(false);\n          });\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n      }\n    }\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    ;\n\n    _proto.exitFullscreen = function exitFullscreen() {\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        var self = this;\n        return new PromiseClass(function (resolve, reject) {\n          function offHandler() {\n            self.off('fullscreenerror', errorHandler);\n            self.off('fullscreenchange', changeHandler);\n          }\n\n          function changeHandler() {\n            offHandler();\n            resolve();\n          }\n\n          function errorHandler(e, err) {\n            offHandler();\n            reject(err);\n          }\n\n          self.one('fullscreenchange', changeHandler);\n          self.one('fullscreenerror', errorHandler);\n          var promise = self.exitFullscreenHelper_();\n\n          if (promise) {\n            promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n            promise.then(resolve, reject);\n          }\n        });\n      }\n\n      return this.exitFullscreenHelper_();\n    };\n\n    _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n      var _this13 = this;\n\n      if (this.fsApi_.requestFullscreen) {\n        var promise = document[this.fsApi_.exitFullscreen]();\n\n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(function () {\n            return _this13.isFullscreen(false);\n          }));\n        }\n\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    }\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    ;\n\n    _proto.enterFullWindow = function enterFullWindow() {\n      this.isFullscreen(true);\n      this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n      this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n      on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n      document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n      addClass(document.body, 'vjs-full-window');\n      /**\n       * @event Player#enterFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('enterFullWindow');\n    }\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    ;\n\n    _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        if (this.isFullscreen() === true) {\n          if (!this.isFullWindow) {\n            this.exitFullscreen();\n          } else {\n            this.exitFullWindow();\n          }\n        }\n      }\n    }\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    ;\n\n    _proto.exitFullWindow = function exitFullWindow() {\n      this.isFullscreen(false);\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n      document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n      removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n\n      /**\n       * @event Player#exitFullWindow\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('exitFullWindow');\n    }\n    /**\n     * Disable Picture-in-Picture mode.\n     *\n     * @param {boolean} value\n     *                  - true will disable Picture-in-Picture mode\n     *                  - false will enable Picture-in-Picture mode\n     */\n    ;\n\n    _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n      if (value === undefined) {\n        return this.techGet_('disablePictureInPicture');\n      }\n\n      this.techCall_('setDisablePictureInPicture', value);\n      this.options_.disablePictureInPicture = value;\n      this.trigger('disablepictureinpicturechanged');\n    }\n    /**\n     * Check if the player is in Picture-in-Picture mode or tell the player that it\n     * is or is not in Picture-in-Picture mode.\n     *\n     * @param  {boolean} [isPiP]\n     *         Set the players current Picture-in-Picture state\n     *\n     * @return {boolean}\n     *         - true if Picture-in-Picture is on and getting\n     *         - false if Picture-in-Picture is off and getting\n     */\n    ;\n\n    _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n      if (isPiP !== undefined) {\n        this.isInPictureInPicture_ = !!isPiP;\n        this.togglePictureInPictureClass_();\n        return;\n      }\n\n      return !!this.isInPictureInPicture_;\n    }\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#enterpictureinpicture\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    ;\n\n    _proto.requestPictureInPicture = function requestPictureInPicture() {\n      if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n        /**\n         * This event fires when the player enters picture in picture mode\n         *\n         * @event Player#enterpictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return this.techGet_('requestPictureInPicture');\n      }\n    }\n    /**\n     * Exit Picture-in-Picture mode.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#leavepictureinpicture\n     *\n     * @return {Promise}\n     *         A promise.\n     */\n    ;\n\n    _proto.exitPictureInPicture = function exitPictureInPicture() {\n      if ('pictureInPictureEnabled' in document) {\n        /**\n         * This event fires when the player leaves picture in picture mode\n         *\n         * @event Player#leavepictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return document.exitPictureInPicture();\n      }\n    }\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    ;\n\n    _proto.handleKeyDown = function handleKeyDown(event) {\n      var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      } // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n\n\n      var excludeElement = function excludeElement(el) {\n        var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n        if (el.isContentEditable) {\n          return true;\n        } // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n\n\n        var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        } // The final test is by tag name. These tags will be excluded entirely.\n\n\n        var excludedTags = ['textarea'];\n        return excludedTags.indexOf(tagName) !== -1;\n      }; // Bail out if the user is focused on an interactive form element.\n\n\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    ;\n\n    _proto.handleHotkeys = function handleHotkeys(event) {\n      var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n      var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n          fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'f');\n      } : _hotkeys$fullscreenKe,\n          _hotkeys$muteKey = hotkeys.muteKey,\n          muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'm');\n      } : _hotkeys$muteKey,\n          _hotkeys$playPauseKey = hotkeys.playPauseKey,\n          playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n        return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n      } : _hotkeys$playPauseKey;\n\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n        if (document[this.fsApi_.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this, event);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var MuteToggle = Component$1.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this, event);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        var PlayToggle = Component$1.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this, event);\n      }\n    }\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    ;\n\n    _proto.canPlayType = function canPlayType(type) {\n      var can; // Loop through each playback technology in the options order\n\n      for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        var techName = j[i];\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!tech) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the current tech is defined before continuing\n\n\n        if (!tech) {\n          log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n          continue;\n        } // Check if the browser supports this technology\n\n\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n\n          if (can) {\n            return can;\n          }\n        }\n      }\n\n      return '';\n    }\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    ;\n\n    _proto.selectSource = function selectSource(sources) {\n      var _this14 = this;\n\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      var techs = this.options_.techOrder.map(function (techName) {\n        return [techName, Tech.getTech(techName)];\n      }).filter(function (_ref) {\n        var techName = _ref[0],\n            tech = _ref[1];\n\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        return false;\n      }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n\n      var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n        var found;\n        outerArray.some(function (outerChoice) {\n          return innerArray.some(function (innerChoice) {\n            found = tester(outerChoice, innerChoice);\n\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n\n      var foundSourceAndTech;\n\n      var flip = function flip(fn) {\n        return function (a, b) {\n          return fn(b, a);\n        };\n      };\n\n      var finder = function finder(_ref2, source) {\n        var techName = _ref2[0],\n            tech = _ref2[1];\n\n        if (tech.canPlaySource(source, _this14.options_[techName.toLowerCase()])) {\n          return {\n            source: source,\n            tech: techName\n          };\n        }\n      }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n\n\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n\n      return foundSourceAndTech || false;\n    }\n    /**\n     * Executes source setting and getting logic\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     * @param {boolean} isRetry\n     *        Indicates whether this is being called internally as a result of a retry\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n      var _this15 = this;\n\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      } // Reset retry behavior for new source\n\n\n      if (this.resetRetryOnError_) {\n        this.resetRetryOnError_();\n      } // filter out invalid sources and turn our source into\n      // an array of source objects\n\n\n      var sources = filterSource(source); // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n        return;\n      } // initial sources\n\n\n      this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n      // since in that case we want to include the failed source(s) in the cache\n\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n\n      this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n      setSource(this, sources[0], function (middlewareSource, mws) {\n        _this15.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n\n        if (!isRetry) {\n          _this15.cache_.sources = sources;\n        }\n\n        _this15.updateSourceCaches_(middlewareSource);\n\n        var err = _this15.src_(middlewareSource);\n\n        if (err) {\n          if (sources.length > 1) {\n            return _this15.handleSrc_(sources.slice(1));\n          }\n\n          _this15.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n          _this15.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.options_.notSupportedMessage\n            });\n          }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n\n\n          _this15.triggerReady();\n\n          return;\n        }\n\n        setTech(mws, _this15.tech_);\n      }); // Try another available source if this one fails before playback.\n\n      if (this.options_.retryOnError && sources.length > 1) {\n        var retry = function retry() {\n          // Remove the error modal\n          _this15.error(null);\n\n          _this15.handleSrc_(sources.slice(1), true);\n        };\n\n        var stopListeningForErrors = function stopListeningForErrors() {\n          _this15.off('error', retry);\n        };\n\n        this.one('error', retry);\n        this.one('playing', stopListeningForErrors);\n\n        this.resetRetryOnError_ = function () {\n          _this15.off('error', retry);\n\n          _this15.off('playing', stopListeningForErrors);\n        };\n      }\n    }\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    ;\n\n    _proto.src = function src(source) {\n      return this.handleSrc_(source, false);\n    }\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    ;\n\n    _proto.src_ = function src_(source) {\n      var _this16 = this;\n\n      var sourceTech = this.selectSource([source]);\n\n      if (!sourceTech) {\n        return true;\n      }\n\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true; // load this technology with the chosen source\n\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(function () {\n          _this16.changingSrc_ = false;\n        });\n        return false;\n      } // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n\n\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n    /**\n     * Begin loading the src data.\n     */\n    ;\n\n    _proto.load = function load() {\n      this.techCall_('load');\n    }\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      var _this17 = this;\n\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (this.paused() || !PromiseClass) {\n        this.doReset_();\n      } else {\n        var playPromise = this.play();\n        silencePromise(playPromise.then(function () {\n          return _this17.doReset_();\n        }));\n      }\n    };\n\n    _proto.doReset_ = function doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    ;\n\n    _proto.resetControlBarUI_ = function resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    ;\n\n    _proto.resetProgressBar_ = function resetProgressBar_() {\n      this.currentTime(0);\n\n      var _ref3 = this.controlBar || {},\n          durationDisplay = _ref3.durationDisplay,\n          remainingTimeDisplay = _ref3.remainingTimeDisplay;\n\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n    }\n    /**\n     * Reset Playback ratio\n     */\n    ;\n\n    _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n    /**\n     * Reset Volume bar\n     */\n    ;\n\n    _proto.resetVolumeBar_ = function resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    ;\n\n    _proto.currentSources = function currentSources() {\n      var source = this.currentSource();\n      var sources = []; // assume `{}` or `{ src }`\n\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n\n      return this.cache_.sources || sources;\n    }\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    ;\n\n    _proto.currentSource = function currentSource() {\n      return this.cache_.source || {};\n    }\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    ;\n\n    _proto.currentSrc = function currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    ;\n\n    _proto.currentType = function currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {boolean} [value]\n     *        - true means that we should preload\n     *        - false means that we should not preload\n     *\n     * @return {string}\n     *         The preload attribute value when getting\n     */\n    ;\n\n    _proto.preload = function preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n\n      return this.techGet_('preload');\n    }\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|string} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string}\n     *         The current value of autoplay when getting\n     */\n    ;\n\n    _proto.autoplay = function autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n\n      var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n      if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n        techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|Player}\n     *         - the current value of playsinline\n     *         - the player when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    ;\n\n    _proto.playsinline = function playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n        return this;\n      }\n\n      return this.techGet_('playsinline');\n    }\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean}\n     *         The current value of loop when getting\n     */\n    ;\n\n    _proto.loop = function loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n\n      return this.techGet_('loop');\n    }\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string}\n     *         The current value of poster when getting\n     */\n    ;\n\n    _proto.poster = function poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      } // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n\n\n      if (!src) {\n        src = '';\n      }\n\n      if (src === this.poster_) {\n        return;\n      } // update the internal poster variable\n\n\n      this.poster_ = src; // update the tech's poster\n\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('posterchange');\n    }\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    ;\n\n    _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        var newPoster = this.tech_.poster() || '';\n\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n          this.trigger('posterchange');\n        }\n      }\n    }\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean}\n     *         The current value of controls when getting\n     */\n    ;\n\n    _proto.controls = function controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.controls_ === bool) {\n        return;\n      }\n\n      this.controls_ = bool;\n\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsenabled');\n\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('controlsdisabled');\n\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls) or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean}\n     *         The current value of native controls when getting\n     */\n    ;\n\n    _proto.usingNativeControls = function usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n\n      bool = !!bool; // Don't trigger a change event unless it actually changed\n\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n\n      this.usingNativeControls_ = bool;\n\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('usingcustomcontrols');\n      }\n    }\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null}\n     *         The current MediaError when getting (or null)\n     */\n    ;\n\n    _proto.error = function error(err) {\n      var _this18 = this;\n\n      if (err === undefined) {\n        return this.error_ || null;\n      } // allow hooks to modify error object\n\n\n      hooks('beforeerror').forEach(function (hookFunction) {\n        var newErr = hookFunction(_this18, err);\n\n        if (!(isObject$1(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n          _this18.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n          return;\n        }\n\n        err = newErr;\n      }); // Suppress the first error message for no compatible source until\n      // user interaction\n\n      if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n        var triggerSuppressedError = function triggerSuppressedError() {\n          this.error(err);\n        };\n\n        this.options_.suppressNotSupportedError = false;\n        this.any(['click', 'touchstart'], triggerSuppressedError);\n        this.one('loadstart', function () {\n          this.off(['click', 'touchstart'], triggerSuppressedError);\n        });\n        return;\n      } // restoring to default\n\n\n      if (err === null) {\n        this.error_ = err;\n        this.removeClass('vjs-error');\n\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n\n        return;\n      }\n\n      this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n      this.addClass('vjs-error'); // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n      log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n      /**\n       * @event Player#error\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('error'); // notify hooks of the per player error\n\n      hooks('error').forEach(function (hookFunction) {\n        return hookFunction(_this18, _this18.error_);\n      });\n      return;\n    }\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    ;\n\n    _proto.reportUserActivity = function reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean}\n     *         The current value of userActive when getting\n     */\n    ;\n\n    _proto.userActive = function userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n\n      bool = !!bool;\n\n      if (bool === this.userActive_) {\n        return;\n      }\n\n      this.userActive_ = bool;\n\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('useractive');\n        return;\n      } // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('userinactive');\n    }\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    ;\n\n    _proto.listenForUserActivity_ = function listenForUserActivity_() {\n      var mouseInProgress;\n      var lastMoveX;\n      var lastMoveY;\n      var handleActivity = bind(this, this.reportUserActivity);\n\n      var handleMouseMove = function handleMouseMove(e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n\n      var handleMouseDown = function handleMouseDown() {\n        handleActivity(); // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n\n        this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n\n      var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n        handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n        this.clearInterval(mouseInProgress);\n      }; // Any mouse movement will be considered user activity\n\n\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUpAndMouseLeave);\n      this.on('mouseleave', handleMouseUpAndMouseLeave);\n      var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          if (this.player().options_.inactivityTimeout !== 0) {\n            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          }\n\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      } // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n\n\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n\n      var inactivityTimeout;\n      this.setInterval(function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        } // Reset the activity tracker\n\n\n        this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n        this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n        this.clearTimeout(inactivityTimeout);\n        var timeout = this.options_.inactivityTimeout;\n\n        if (timeout <= 0) {\n          return;\n        } // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n\n\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      }, 250);\n    }\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number}\n     *         The current playback rate when getting or 1.0\n     */\n    ;\n\n    _proto.playbackRate = function playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|Player}\n     *         - The default playback rate when getting or 1.0\n     *         - the player when setting\n     */\n    ;\n\n    _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n\n      return 1.0;\n    }\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} bool\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean}\n     *         The current value of isAudio when getting\n     */\n    ;\n\n    _proto.isAudio = function isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n\n      return !!this.isAudio_;\n    };\n\n    _proto.enableAudioOnlyUI_ = function enableAudioOnlyUI_() {\n      var _this19 = this;\n\n      // Update styling immediately to show the control bar so we can get its height\n      this.addClass('vjs-audio-only-mode');\n      var playerChildren = this.children();\n      var controlBar = this.getChild('ControlBar');\n      var controlBarHeight = controlBar && controlBar.currentHeight(); // Hide all player components except the control bar. Control bar components\n      // needed only for video are hidden with CSS\n\n      playerChildren.forEach(function (child) {\n        if (child === controlBar) {\n          return;\n        }\n\n        if (child.el_ && !child.hasClass('vjs-hidden')) {\n          child.hide();\n\n          _this19.audioOnlyCache_.hiddenChildren.push(child);\n        }\n      });\n      this.audioOnlyCache_.playerHeight = this.currentHeight(); // Set the player height the same as the control bar\n\n      this.height(controlBarHeight);\n      this.trigger('audioonlymodechange');\n    };\n\n    _proto.disableAudioOnlyUI_ = function disableAudioOnlyUI_() {\n      this.removeClass('vjs-audio-only-mode'); // Show player components that were previously hidden\n\n      this.audioOnlyCache_.hiddenChildren.forEach(function (child) {\n        return child.show();\n      }); // Reset player height\n\n      this.height(this.audioOnlyCache_.playerHeight);\n      this.trigger('audioonlymodechange');\n    }\n    /**\n     * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n     *\n     * Setting this to `true` will hide all player components except the control bar,\n     * as well as control bar components needed only for video.\n     *\n     * @param {boolean} [value]\n     *         The value to set audioOnlyMode to.\n     *\n     * @return {Promise|boolean}\n     *        A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    ;\n\n    _proto.audioOnlyMode = function audioOnlyMode(value) {\n      var _this20 = this;\n\n      if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n        return this.audioOnlyMode_;\n      }\n\n      this.audioOnlyMode_ = value;\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        // Enable Audio Only Mode\n        if (value) {\n          var exitPromises = []; // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n\n          if (this.isInPictureInPicture()) {\n            exitPromises.push(this.exitPictureInPicture());\n          }\n\n          if (this.isFullscreen()) {\n            exitPromises.push(this.exitFullscreen());\n          }\n\n          if (this.audioPosterMode()) {\n            exitPromises.push(this.audioPosterMode(false));\n          }\n\n          return PromiseClass.all(exitPromises).then(function () {\n            return _this20.enableAudioOnlyUI_();\n          });\n        } // Disable Audio Only Mode\n\n\n        return PromiseClass.resolve().then(function () {\n          return _this20.disableAudioOnlyUI_();\n        });\n      }\n\n      if (value) {\n        if (this.isInPictureInPicture()) {\n          this.exitPictureInPicture();\n        }\n\n        if (this.isFullscreen()) {\n          this.exitFullscreen();\n        }\n\n        this.enableAudioOnlyUI_();\n      } else {\n        this.disableAudioOnlyUI_();\n      }\n    };\n\n    _proto.enablePosterModeUI_ = function enablePosterModeUI_() {\n      // Hide the video element and show the poster image to enable posterModeUI\n      var tech = this.tech_ && this.tech_;\n      tech.hide();\n      this.addClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    };\n\n    _proto.disablePosterModeUI_ = function disablePosterModeUI_() {\n      // Show the video element and hide the poster image to disable posterModeUI\n      var tech = this.tech_ && this.tech_;\n      tech.show();\n      this.removeClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    }\n    /**\n     * Get the current audioPosterMode state or set audioPosterMode to true or false\n     *\n     * @param {boolean} [value]\n     *         The value to set audioPosterMode to.\n     *\n     * @return {Promise|boolean}\n     *         A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    ;\n\n    _proto.audioPosterMode = function audioPosterMode(value) {\n      var _this21 = this;\n\n      if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n        return this.audioPosterMode_;\n      }\n\n      this.audioPosterMode_ = value;\n      var PromiseClass = this.options_.Promise || window.Promise;\n\n      if (PromiseClass) {\n        if (value) {\n          if (this.audioOnlyMode()) {\n            var audioOnlyModePromise = this.audioOnlyMode(false);\n            return audioOnlyModePromise.then(function () {\n              // enable audio poster mode after audio only mode is disabled\n              _this21.enablePosterModeUI_();\n            });\n          }\n\n          return PromiseClass.resolve().then(function () {\n            // enable audio poster mode\n            _this21.enablePosterModeUI_();\n          });\n        }\n\n        return PromiseClass.resolve().then(function () {\n          // disable audio poster mode\n          _this21.disablePosterModeUI_();\n        });\n      }\n\n      if (value) {\n        if (this.audioOnlyMode()) {\n          this.audioOnlyMode(false);\n        }\n\n        this.enablePosterModeUI_();\n        return;\n      }\n\n      this.disablePosterModeUI_();\n    }\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    ;\n\n    _proto.addTextTrack = function addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n     * When manualCleanup is set to false, the track will be automatically removed\n     * on source changes.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n     *                                       removed on a source change\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     * @deprecated The default value of the \"manualCleanup\" parameter will default\n     *             to \"false\" in upcoming versions of Video.js\n     */\n    ;\n\n    _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    ;\n\n    _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n      if (obj === void 0) {\n        obj = {};\n      }\n\n      var _obj = obj,\n          track = _obj.track;\n\n      if (!track) {\n        track = obj;\n      } // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    ;\n\n    _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    ;\n\n    _proto.videoWidth = function videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    ;\n\n    _proto.videoHeight = function videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n    /**\n     * The player's language code.\n     *\n     * Changing the language will trigger\n     * [languagechange]{@link Player#event:languagechange}\n     * which Components can use to update control text.\n     * ClickableComponent will update its control text by default on\n     * [languagechange]{@link Player#event:languagechange}.\n     *\n     * @fires Player#languagechange\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string}\n     *         The current language code when getting\n     */\n    ;\n\n    _proto.language = function language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n\n      if (this.language_ !== String(code).toLowerCase()) {\n        this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n        if (isEvented(this)) {\n          /**\n          * fires when the player language change\n          *\n          * @event Player#languagechange\n          * @type {EventTarget~Event}\n          */\n          this.trigger('languagechange');\n        }\n      }\n    }\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    ;\n\n    _proto.languages = function languages() {\n      return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n    }\n    /**\n     * returns a JavaScript object reperesenting the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    ;\n\n    _proto.toJSON = function toJSON() {\n      var options = mergeOptions$3(this.options_);\n      var tracks = options.tracks;\n      options.tracks = [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n        track = mergeOptions$3(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n\n      return options;\n    }\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    ;\n\n    _proto.createModal = function createModal(content, options) {\n      var _this22 = this;\n\n      options = options || {};\n      options.content = content || '';\n      var modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', function () {\n        _this22.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    ;\n\n    _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n\n      var currentBreakpoint = this.currentBreakpoint();\n      var currentWidth = this.currentWidth();\n\n      for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        var candidateBreakpoint = BREAKPOINT_ORDER[i];\n        var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          } // Only remove a class if there is a current breakpoint.\n\n\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    ;\n\n    _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n      var className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    ;\n\n    _proto.breakpoints = function breakpoints(_breakpoints) {\n      // Used as a getter.\n      if (_breakpoints === undefined) {\n        return assign(this.breakpoints_);\n      }\n\n      this.breakpoint_ = '';\n      this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n\n      this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n      return assign(this.breakpoints_);\n    }\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} value\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     */\n    ;\n\n    _proto.responsive = function responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n\n      value = Boolean(value);\n      var current = this.responsive_; // Nothing changed.\n\n      if (value === current) {\n        return;\n      } // The value actually changed, set it.\n\n\n      this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n\n      if (value) {\n        this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n\n      return value;\n    }\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    ;\n\n    _proto.currentBreakpoint = function currentBreakpoint() {\n      return this.breakpoint_;\n    }\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    ;\n\n    _proto.currentBreakpointClass = function currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    ;\n\n    _proto.loadMedia = function loadMedia(media, ready) {\n      var _this23 = this;\n\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n\n      this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n      this.cache_.media = mergeOptions$3(media);\n      var _this$cache_$media = this.cache_.media,\n          artwork = _this$cache_$media.artwork,\n          poster = _this$cache_$media.poster,\n          src = _this$cache_$media.src,\n          textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n\n      if (src) {\n        this.src(src);\n      }\n\n      if (poster) {\n        this.poster(poster);\n      }\n\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(function (tt) {\n          return _this23.addRemoteTextTrack(tt, false);\n        });\n      }\n\n      this.ready(ready);\n    }\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    ;\n\n    _proto.getMedia = function getMedia() {\n      if (!this.cache_.media) {\n        var poster = this.poster();\n        var src = this.currentSources();\n        var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n          return {\n            kind: tt.kind,\n            label: tt.label,\n            language: tt.language,\n            src: tt.src\n          };\n        });\n        var media = {\n          src: src,\n          textTracks: textTracks\n        };\n\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n\n        return media;\n      }\n\n      return mergeOptions$3(this.cache_.media);\n    }\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    ;\n\n    Player.getTagSettings = function getTagSettings(tag) {\n      var baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      var tagOptions = getAttributes(tag);\n      var dataSetup = tagOptions['data-setup'];\n\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      } // Check if data-setup attr exists.\n\n\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        var _safeParseTuple = tuple(dataSetup || '{}'),\n            err = _safeParseTuple[0],\n            data = _safeParseTuple[1];\n\n        if (err) {\n          log$1.error(err);\n        }\n\n        assign(tagOptions, data);\n      }\n\n      assign(baseOptions, tagOptions); // Get tag children settings\n\n      if (tag.hasChildNodes()) {\n        var children = tag.childNodes;\n\n        for (var i = 0, j = children.length; i < j; i++) {\n          var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n          var childName = child.nodeName.toLowerCase();\n\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n\n      return baseOptions;\n    }\n    /**\n     * Determine whether or not flexbox is supported\n     *\n     * @return {boolean}\n     *         - true if flexbox is supported\n     *         - false if flexbox is not supported\n     */\n    ;\n\n    _proto.flexNotSupported_ = function flexNotSupported_() {\n      var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n      // common flex features that we can rely on when checking for flex support.\n\n      return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n      'msFlexOrder' in elem.style);\n    }\n    /**\n     * Set debug mode to enable/disable logs at info level.\n     *\n     * @param {boolean} enabled\n     * @fires Player#debugon\n     * @fires Player#debugoff\n     */\n    ;\n\n    _proto.debug = function debug(enabled) {\n      if (enabled === undefined) {\n        return this.debugEnabled_;\n      }\n\n      if (enabled) {\n        this.trigger('debugon');\n        this.previousLogLevel_ = this.log.level;\n        this.log.level('debug');\n        this.debugEnabled_ = true;\n      } else {\n        this.trigger('debugoff');\n        this.log.level(this.previousLogLevel_);\n        this.previousLogLevel_ = undefined;\n        this.debugEnabled_ = false;\n      }\n    }\n    /**\n     * Set or get current playback rates.\n     * Takes an array and updates the playback rates menu with the new items.\n     * Pass in an empty array to hide the menu.\n     * Values other than arrays are ignored.\n     *\n     * @fires Player#playbackrateschange\n     * @param {number[]} newRates\n     *                   The new rates that the playback rates menu should update to.\n     *                   An empty array will hide the menu\n     * @return {number[]} When used as a getter will return the current playback rates\n     */\n    ;\n\n    _proto.playbackRates = function playbackRates(newRates) {\n      if (newRates === undefined) {\n        return this.cache_.playbackRates;\n      } // ignore any value that isn't an array\n\n\n      if (!Array.isArray(newRates)) {\n        return;\n      } // ignore any arrays that don't only contain numbers\n\n\n      if (!newRates.every(function (rate) {\n        return typeof rate === 'number';\n      })) {\n        return;\n      }\n\n      this.cache_.playbackRates = newRates;\n      /**\n      * fires when the playback rates in a player are changed\n      *\n      * @event Player#playbackrateschange\n      * @type {EventTarget~Event}\n      */\n\n      this.trigger('playbackrateschange');\n    };\n\n    return Player;\n  }(Component$1);\n  /**\n   * Get the {@link VideoTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n\n  ALL.names.forEach(function (name) {\n    var props = ALL[name];\n\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n\n\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n  /**\n   * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n  Player.prototype.crossorigin = Player.prototype.crossOrigin;\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n\n  Player.players = {};\n  var navigator = window.navigator;\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    normalizeAutoplay: false,\n    fullscreen: {\n      options: {\n        navigationUI: 'hide'\n      }\n    },\n    breakpoints: {},\n    responsive: false,\n    audioOnlyMode: false,\n    audioPosterMode: false\n  };\n  [\n  /**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player#ended\n   */\n  'ended',\n  /**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player#seeking\n   */\n  'seeking',\n  /**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player#seekable\n   */\n  'seekable',\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player#networkState\n   */\n  'networkState',\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player#readyState\n   */\n  'readyState'].forEach(function (fn) {\n    Player.prototype[fn] = function () {\n      return this.techGet_(fn);\n    };\n  });\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n      return this.trigger(event);\n    };\n  });\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component$1.registerComponent('Player', Player);\n\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n  });\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  var isNativeReflectConstruct = _isNativeReflectConstruct;\n\n  var construct = createCommonjsModule(function (module) {\n    function _construct(Parent, args, Class) {\n      if (isNativeReflectConstruct()) {\n        module.exports = _construct = Reflect.construct;\n      } else {\n        module.exports = _construct = function _construct(Parent, args, Class) {\n          var a = [null];\n          a.push.apply(a, args);\n          var Constructor = Function.bind.apply(Parent, a);\n          var instance = new Constructor();\n          if (Class) setPrototypeOf(instance, Class.prototype);\n          return instance;\n        };\n      }\n\n      return _construct.apply(null, arguments);\n    }\n\n    module.exports = _construct;\n  });\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n\n  var BASE_PLUGIN_NAME = 'plugin';\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n\n  var PLUGIN_CACHE_KEY = 'activePlugins_';\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n\n  var pluginStorage = {};\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n\n  var pluginExists = function pluginExists(name) {\n    return pluginStorage.hasOwnProperty(name);\n  };\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {Function|undefined}\n   *          The plugin (or undefined).\n   */\n\n\n  var getPlugin = function getPlugin(name) {\n    return pluginExists(name) ? pluginStorage[name] : undefined;\n  };\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n\n\n  var markPluginAsActive = function markPluginAsActive(player, name) {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {Plugin~PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n\n\n  var triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n    var eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n\n\n  var createBasicPlugin = function createBasicPlugin(name, plugin) {\n    var basicPluginWrapper = function basicPluginWrapper() {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: null\n      }, true);\n      var instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: plugin,\n        instance: instance\n      });\n      return instance;\n    };\n\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n\n\n  var createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function () {\n      triggerSetupEvent(this, {\n        name: name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var instance = construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n      this[name] = function () {\n        return instance;\n      };\n\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n\n\n  var Plugin = /*#__PURE__*/function () {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    function Plugin(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n\n      this.player = player;\n\n      if (!this.log) {\n        this.log = this.player.log.createLogger(this.name);\n      } // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n\n\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n\n      this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n      player.on('dispose', this.dispose);\n    }\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n\n\n    var _proto = Plugin.prototype;\n\n    _proto.version = function version() {\n      return this.constructor.VERSION;\n    }\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {Plugin~PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    ;\n\n    _proto.getEventHash = function getEventHash(hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link Plugin~PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    ;\n\n    _proto.trigger = function trigger$1(event, hash) {\n      if (hash === void 0) {\n        hash = {};\n      }\n\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    ;\n\n    _proto.handleStateChanged = function handleStateChanged(e) {}\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var name = this.name,\n          player = this.player;\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {EventTarget~Event}\n       */\n\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    ;\n\n    Plugin.isBasic = function isBasic(plugin) {\n      var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    ;\n\n    Plugin.registerPlugin = function registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n      }\n\n      if (pluginExists(name)) {\n        log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n      }\n\n      if (typeof plugin !== 'function') {\n        throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n      }\n\n      pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n\n      return plugin;\n    }\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    ;\n\n    Plugin.deregisterPlugin = function deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    ;\n\n    Plugin.getPlugins = function getPlugins(names) {\n      if (names === void 0) {\n        names = Object.keys(pluginStorage);\n      }\n\n      var result;\n      names.forEach(function (name) {\n        var plugin = getPlugin(name);\n\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    ;\n\n    Plugin.getPluginVersion = function getPluginVersion(name) {\n      var plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    };\n\n    return Plugin;\n  }();\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n\n\n  Plugin.getPlugin = getPlugin;\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n\n\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} Plugin~PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n  }\n\n  var inherits = _inherits;\n\n  /**\n   * @file extend.js\n   * @module extend\n   */\n  /**\n   * Used to subclass an existing class by emulating ES subclassing using the\n   * `extends` keyword.\n   *\n   * @function\n   * @example\n   * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n   *   myCustomMethod: function() {\n   *     // Do things in my method.\n   *   }\n   * });\n   *\n   * @param    {Function} superClass\n   *           The class to inherit from\n   *\n   * @param    {Object}   [subClassMethods={}]\n   *           Methods of the new class\n   *\n   * @return   {Function}\n   *           The new class with subClassMethods that inherited superClass.\n   */\n\n  var extend = function extend(superClass, subClassMethods) {\n    if (subClassMethods === void 0) {\n      subClassMethods = {};\n    }\n\n    var subClass = function subClass() {\n      superClass.apply(this, arguments);\n    };\n\n    var methods = {};\n\n    if (typeof subClassMethods === 'object') {\n      if (subClassMethods.constructor !== Object.prototype.constructor) {\n        subClass = subClassMethods.constructor;\n      }\n\n      methods = subClassMethods;\n    } else if (typeof subClassMethods === 'function') {\n      subClass = subClassMethods;\n    }\n\n    inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n    if (superClass) {\n      subClass.super_ = superClass;\n    } // Extend subObj's prototype with functions and other properties from props\n\n\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        subClass.prototype[name] = methods[name];\n      }\n    }\n\n    return subClass;\n  };\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n\n  var normalizeId = function normalizeId(id) {\n    return id.indexOf('#') === 0 ? id.slice(1) : id;\n  };\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:computed-style~computedStyle as computedStyle\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:extend~extend as extend\n   * @borrows module:fn.bind as bind\n   * @borrows module:format-time.formatTime as formatTime\n   * @borrows module:format-time.resetFormatTime as resetFormatTime\n   * @borrows module:format-time.setFormatTime as setFormatTime\n   * @borrows module:merge-options.mergeOptions as mergeOptions\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows module:time-ranges.createTimeRanges as createTimeRange\n   * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n   * @borrows module:url.isCrossOrigin as isCrossOrigin\n   * @borrows module:url.parseUrl as parseUrl\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {Component~ReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n\n\n  function videojs(id, options, ready) {\n    var player = videojs.getPlayer(id);\n\n    if (player) {\n      if (options) {\n        log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n      }\n\n      if (ready) {\n        player.ready(ready);\n      }\n\n      return player;\n    }\n\n    var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    } // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n    if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n      log$1.warn('The element supplied is not included in the DOM');\n    }\n\n    options = options || {}; // Store a copy of the el before modification, if it is to be restored in destroy()\n    // If div ingest, store the parent div\n\n    if (options.restoreEl === true) {\n      options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n    }\n\n    hooks('beforesetup').forEach(function (hookFunction) {\n      var opts = hookFunction(el, mergeOptions$3(options));\n\n      if (!isObject$1(opts) || Array.isArray(opts)) {\n        log$1.error('please return an object in beforesetup hooks');\n        return;\n      }\n\n      options = mergeOptions$3(options, opts);\n    }); // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n\n    var PlayerComponent = Component$1.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    hooks('setup').forEach(function (hookFunction) {\n      return hookFunction(player);\n    });\n    return player;\n  }\n\n  videojs.hooks_ = hooks_;\n  videojs.hooks = hooks;\n  videojs.hook = hook;\n  videojs.hookOnce = hookOnce;\n  videojs.removeHook = removeHook; // Add default styles\n\n  if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    var style = $('.vjs-styles-defaults');\n\n    if (!style) {\n      style = createStyleElement('vjs-styles-defaults');\n      var head = $('head');\n\n      if (head) {\n        head.insertBefore(style, head.firstChild);\n      }\n\n      setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: 56.25%\\n      }\\n    \");\n    }\n  } // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n\n\n  autoSetupTimeout(1, videojs);\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n\n  videojs.VERSION = version$5;\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n\n  videojs.options = Player.prototype.options_;\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n\n  videojs.getPlayers = function () {\n    return Player.players;\n  };\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n\n\n  videojs.getPlayer = function (id) {\n    var players = Player.players;\n    var tag;\n\n    if (typeof id === 'string') {\n      var nId = normalizeId(id);\n      var player = players[nId];\n\n      if (player) {\n        return player;\n      }\n\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n\n    if (isEl(tag)) {\n      var _tag = tag,\n          _player = _tag.player,\n          playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n\n      if (_player || players[playerId]) {\n        return _player || players[playerId];\n      }\n    }\n  };\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n\n\n  videojs.getAllPlayers = function () {\n    return (// Disposed players leave a key with a `null` value, so we need to make sure\n      // we filter those out.\n      Object.keys(Player.players).map(function (k) {\n        return Player.players[k];\n      }).filter(Boolean)\n    );\n  };\n\n  videojs.players = Player.players;\n  videojs.getComponent = Component$1.getComponent;\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {Component} comp\n   *        The component class\n   *\n   * @return {Component}\n   *         The newly registered component\n   */\n\n  videojs.registerComponent = function (name, comp) {\n    if (Tech.isTech(comp)) {\n      log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n    }\n\n    Component$1.registerComponent.call(Component$1, name, comp);\n  };\n\n  videojs.getTech = Tech.getTech;\n  videojs.registerTech = Tech.registerTech;\n  videojs.use = use;\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n\n  videojs.browser = browser;\n  /**\n   * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n   * included for backward-compatibility with 4.x.\n   *\n   * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n   * @type {boolean}\n   */\n\n  videojs.TOUCH_ENABLED = TOUCH_ENABLED;\n  videojs.extend = extend;\n  videojs.mergeOptions = mergeOptions$3;\n  videojs.bind = bind;\n  videojs.registerPlugin = Plugin.registerPlugin;\n  videojs.deregisterPlugin = Plugin.deregisterPlugin;\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n   *\n   * @param {string} name\n   *        The plugin name\n   *\n   * @param {Plugin|Function} plugin\n   *         The plugin sub-class or function\n   */\n\n  videojs.plugin = function (name, plugin) {\n    log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name, plugin);\n  };\n\n  videojs.getPlugins = Plugin.getPlugins;\n  videojs.getPlugin = Plugin.getPlugin;\n  videojs.getPluginVersion = Plugin.getPluginVersion;\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n\n  videojs.addLanguage = function (code, data) {\n    var _mergeOptions;\n\n    code = ('' + code).toLowerCase();\n    videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n    return videojs.options.languages[code];\n  };\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n\n\n  videojs.log = log$1;\n  videojs.createLogger = createLogger;\n  videojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n  videojs.formatTime = formatTime;\n  videojs.setFormatTime = setFormatTime;\n  videojs.resetFormatTime = resetFormatTime;\n  videojs.parseUrl = parseUrl;\n  videojs.isCrossOrigin = isCrossOrigin;\n  videojs.EventTarget = EventTarget$2;\n  videojs.on = on;\n  videojs.one = one;\n  videojs.off = off;\n  videojs.trigger = trigger;\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n\n  videojs.xhr = lib;\n  videojs.TextTrack = TextTrack;\n  videojs.AudioTrack = AudioTrack;\n  videojs.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n    videojs[k] = function () {\n      log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs.computedStyle = computedStyle;\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:dom|dom}\n   */\n\n  videojs.dom = Dom;\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:url|url}\n   */\n\n  videojs.url = Url;\n  videojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n  // In a major update this could become the default text and key.\n\n  videojs.addLanguage('en', {\n    'Non-Fullscreen': 'Exit Fullscreen'\n  });\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n    (function (root) {\n      var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/?#]*\\/)*[^;?#]*)?(;[^?#]*)?(\\?[^#]*)?(#[^]*)?$/;\n      var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)([^]*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n      var URLToolkit = {\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n          opts = opts || {}; // remove any remaining space and CRLF\n\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n\n          var baseParts = URLToolkit.parseURL(baseURL);\n\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function parseURL(url) {\n          var parts = URL_REGEX.exec(url);\n\n          if (!parts) {\n            return null;\n          }\n\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function normalizePath(path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {}\n\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function buildURLFromParts(parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      module.exports = URLToolkit;\n    })();\n  });\n\n  var DEFAULT_LOCATION$1 = 'http://example.com';\n\n  var resolveUrl$2 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION$1);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION$1.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n\n  var atob$1 = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n\n  function decodeB64ToUint8Array$1(b64Text) {\n    var decodedString = atob$1(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  /*! @name m3u8-parser @version 4.7.1 @license Apache-2.0 */\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n  var LineStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(LineStream, _Stream);\n\n    function LineStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.buffer = '';\n      return _this;\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n\n    var _proto = LineStream.prototype;\n\n    _proto.push = function push(data) {\n      var nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    };\n\n    return LineStream;\n  }(Stream);\n\n  var TAB = String.fromCharCode(0x09);\n\n  var parseByterange = function parseByterange(byterangeString) {\n    // optionally match and capture 0+ digits before `@`\n    // optionally match and capture 0+ digits after `@`\n    var match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n    var result = {};\n\n    if (match[1]) {\n      result.length = parseInt(match[1], 10);\n    }\n\n    if (match[2]) {\n      result.offset = parseInt(match[2], 10);\n    }\n\n    return result;\n  };\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n\n  var attributeSeparator = function attributeSeparator() {\n    var key = '[^=]*';\n    var value = '\"[^\"]*\"|[^,]*';\n    var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n\n  var parseAttributes$1 = function parseAttributes(attributes) {\n    // split the string using attributes as the separator\n    var attrs = attributes.split(attributeSeparator());\n    var result = {};\n    var i = attrs.length;\n    var attr;\n\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n\n  var ParseStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(ParseStream, _Stream);\n\n    function ParseStream() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.customParsers = [];\n      _this.tagMappers = [];\n      return _this;\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n\n    var _proto = ParseStream.prototype;\n\n    _proto.push = function push(line) {\n      var _this2 = this;\n\n      var match;\n      var event; // strip whitespace\n\n      line = line.trim();\n\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n\n      var newLines = this.tagMappers.reduce(function (acc, mapper) {\n        var mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(function (newLine) {\n        for (var i = 0; i < _this2.customParsers.length; i++) {\n          if (_this2.customParsers[i].call(_this2, newLine)) {\n            return;\n          }\n        } // Comments\n\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          _this2.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n\n          return;\n        }\n\n        match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n\n          if (match[2]) {\n            event.title = match[2];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = _extends_1(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n\n          if (match[1]) {\n            var attributes = parseAttributes$1(match[1]);\n\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n\n            if (event.attributes.RESOLUTION) {\n              var split = event.attributes.RESOLUTION.split('x');\n              var resolution = {};\n\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n\n              event.attributes.RESOLUTION = resolution;\n            }\n\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n        if (match) {\n          _this2.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n\n          return;\n        }\n\n        match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              var subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        }\n\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n\n          _this2.trigger('data', event);\n\n          return;\n        } // unknown tag type\n\n\n        _this2.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(_ref) {\n      var _this3 = this;\n\n      var expression = _ref.expression,\n          customType = _ref.customType,\n          dataParser = _ref.dataParser,\n          segment = _ref.segment;\n\n      if (typeof dataParser !== 'function') {\n        dataParser = function dataParser(line) {\n          return line;\n        };\n      }\n\n      this.customParsers.push(function (line) {\n        var match = expression.exec(line);\n\n        if (match) {\n          _this3.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType: customType,\n            segment: segment\n          });\n\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(_ref2) {\n      var expression = _ref2.expression,\n          map = _ref2.map;\n\n      var mapFn = function mapFn(line) {\n        if (expression.test(line)) {\n          return map(line);\n        }\n\n        return line;\n      };\n\n      this.tagMappers.push(mapFn);\n    };\n\n    return ParseStream;\n  }(Stream);\n\n  var camelCase = function camelCase(str) {\n    return str.toLowerCase().replace(/-(\\w)/g, function (a) {\n      return a[1].toUpperCase();\n    });\n  };\n\n  var camelCaseKeys = function camelCaseKeys(attributes) {\n    var result = {};\n    Object.keys(attributes).forEach(function (key) {\n      result[camelCase(key)] = attributes[key];\n    });\n    return result;\n  }; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n  // we need this helper because defaults are based upon targetDuration and\n  // partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n  // target durations are set.\n\n\n  var setHoldBack = function setHoldBack(manifest) {\n    var serverControl = manifest.serverControl,\n        targetDuration = manifest.targetDuration,\n        partTargetDuration = manifest.partTargetDuration;\n\n    if (!serverControl) {\n      return;\n    }\n\n    var tag = '#EXT-X-SERVER-CONTROL';\n    var hb = 'holdBack';\n    var phb = 'partHoldBack';\n    var minTargetDuration = targetDuration && targetDuration * 3;\n    var minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n    if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n      serverControl[hb] = minTargetDuration;\n      this.trigger('info', {\n        message: tag + \" defaulting HOLD-BACK to targetDuration * 3 (\" + minTargetDuration + \").\"\n      });\n    }\n\n    if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping HOLD-BACK (\" + serverControl[hb] + \") to targetDuration * 3 (\" + minTargetDuration + \")\"\n      });\n      serverControl[hb] = minTargetDuration;\n    } // default no part hold back to part target duration * 3\n\n\n    if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n      serverControl[phb] = partTargetDuration * 3;\n      this.trigger('info', {\n        message: tag + \" defaulting PART-HOLD-BACK to partTargetDuration * 3 (\" + serverControl[phb] + \").\"\n      });\n    } // if part hold back is too small default it to part target duration * 2\n\n\n    if (partTargetDuration && serverControl[phb] < minPartDuration) {\n      this.trigger('warn', {\n        message: tag + \" clamping PART-HOLD-BACK (\" + serverControl[phb] + \") to partTargetDuration * 2 (\" + minPartDuration + \").\"\n      });\n      serverControl[phb] = minPartDuration;\n    }\n  };\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n\n  var Parser = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(Parser, _Stream);\n\n    function Parser() {\n      var _this;\n\n      _this = _Stream.call(this) || this;\n      _this.lineStream = new LineStream();\n      _this.parseStream = new ParseStream();\n\n      _this.lineStream.pipe(_this.parseStream);\n      /* eslint-disable consistent-this */\n\n\n      var self = assertThisInitialized(_this);\n      /* eslint-enable consistent-this */\n\n\n      var uris = [];\n      var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      var currentMap; // if specified, the active decryption key\n\n      var _key;\n\n      var hasParts = false;\n\n      var noop = function noop() {};\n\n      var defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n      // used in MPDs with Widevine encrypted streams.\n\n      var widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n      var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      _this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        segments: []\n      }; // keep track of the last seen segment's byte range end, as segments are not required\n      // to provide the offset, in which case it defaults to the next byte after the\n      // previous segment\n\n      var lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n      var lastPartByterangeEnd = 0;\n\n      _this.on('end', function () {\n        // only add preloadSegment if we don't yet have a uri for it.\n        // and we actually have parts/preloadHints\n        if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n          return;\n        }\n\n        if (!currentUri.map && currentMap) {\n          currentUri.map = currentMap;\n        }\n\n        if (!currentUri.key && _key) {\n          currentUri.key = _key;\n        }\n\n        if (!currentUri.timeline && typeof currentTimeline === 'number') {\n          currentUri.timeline = currentTimeline;\n        }\n\n        _this.manifest.preloadSegment = currentUri;\n      }); // update the manifest with the m3u8 entry from the parse stream\n\n\n      _this.parseStream.on('data', function (entry) {\n        var mediaGroup;\n        var rendition;\n        ({\n          tag: function tag() {\n            // switch based on the tag type\n            (({\n              version: function version() {\n                if (entry.version) {\n                  this.manifest.version = entry.version;\n                }\n              },\n              'allow-cache': function allowCache() {\n                this.manifest.allowCache = entry.allowed;\n\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange: function byterange() {\n                var byterange = {};\n\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n\n                  if (!('offset' in entry)) {\n                    /*\n                     * From the latest spec (as of this writing):\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                     *\n                     * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                     *\n                     * \"If o [offset] is not present, the sub-range begins at the next byte\n                     * following the sub-range of the previous media segment.\"\n                     */\n                    entry.offset = lastByterangeEnd;\n                  }\n                }\n\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n\n                lastByterangeEnd = byterange.offset + byterange.length;\n              },\n              endlist: function endlist() {\n                this.manifest.endList = true;\n              },\n              inf: function inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n\n                this.manifest.segments = uris;\n              },\n              key: function key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  _key = null;\n                  return;\n                }\n\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                    attributes: entry.attributes\n                  };\n                  return;\n                }\n\n                if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.microsoft.playready'] = {\n                    uri: entry.attributes.URI\n                  };\n                  return;\n                } // check if the content is encrypted for Widevine\n                // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n                if (entry.attributes.KEYFORMAT === widevineUuid) {\n                  var VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                  if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                    this.trigger('warn', {\n                      message: 'invalid key method provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                    this.trigger('warn', {\n                      message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                    });\n                  }\n\n                  if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                    this.trigger('warn', {\n                      message: 'invalid key URI provided for Widevine'\n                    });\n                    return;\n                  }\n\n                  if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                    this.trigger('warn', {\n                      message: 'invalid key ID provided for Widevine'\n                    });\n                    return;\n                  } // if Widevine key attributes are valid, store them as `contentProtection`\n                  // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                  this.manifest.contentProtection = this.manifest.contentProtection || {};\n                  this.manifest.contentProtection['com.widevine.alpha'] = {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array$1(entry.attributes.URI.split(',')[1])\n                  };\n                  return;\n                }\n\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n\n                _key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  _key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence': function mediaSequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence': function discontinuitySequence() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type': function playlistType() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map: function map() {\n                currentMap = {};\n\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n\n                if (_key) {\n                  currentMap.key = _key;\n                }\n              },\n              'stream-inf': function streamInf() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n\n                _extends_1(currentUri.attributes, entry.attributes);\n              },\n              media: function media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n\n                var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  \"default\": /yes/i.test(entry.attributes.DEFAULT)\n                };\n\n                if (rendition[\"default\"]) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity: function discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time': function programDateTime() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n              },\n              targetduration: function targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n\n                this.manifest.targetDuration = entry.duration;\n                setHoldBack.call(this, this.manifest);\n              },\n              start: function start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out': function cueOut() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont': function cueOutCont() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in': function cueIn() {\n                currentUri.cueIn = entry.data;\n              },\n              'skip': function skip() {\n                this.manifest.skip = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n              },\n              'part': function part() {\n                var _this2 = this;\n\n                hasParts = true; // parts are always specifed before a segment\n\n                var segmentIndex = this.manifest.segments.length;\n                var part = camelCaseKeys(entry.attributes);\n                currentUri.parts = currentUri.parts || [];\n                currentUri.parts.push(part);\n\n                if (part.byterange) {\n                  if (!part.byterange.hasOwnProperty('offset')) {\n                    part.byterange.offset = lastPartByterangeEnd;\n                  }\n\n                  lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n                }\n\n                var partIndex = currentUri.parts.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PART #\" + partIndex + \" for segment #\" + segmentIndex, entry.attributes, ['URI', 'DURATION']);\n\n                if (this.manifest.renditionReports) {\n                  this.manifest.renditionReports.forEach(function (r, i) {\n                    if (!r.hasOwnProperty('lastPart')) {\n                      _this2.trigger('warn', {\n                        message: \"#EXT-X-RENDITION-REPORT #\" + i + \" lacks required attribute(s): LAST-PART\"\n                      });\n                    }\n                  });\n                }\n              },\n              'server-control': function serverControl() {\n                var attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n                if (!attrs.hasOwnProperty('canBlockReload')) {\n                  attrs.canBlockReload = false;\n                  this.trigger('info', {\n                    message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                  });\n                }\n\n                setHoldBack.call(this, this.manifest);\n\n                if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                  this.trigger('warn', {\n                    message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                  });\n                }\n              },\n              'preload-hint': function preloadHint() {\n                // parts are always specifed before a segment\n                var segmentIndex = this.manifest.segments.length;\n                var hint = camelCaseKeys(entry.attributes);\n                var isPart = hint.type && hint.type === 'PART';\n                currentUri.preloadHints = currentUri.preloadHints || [];\n                currentUri.preloadHints.push(hint);\n\n                if (hint.byterange) {\n                  if (!hint.byterange.hasOwnProperty('offset')) {\n                    // use last part byterange end or zero if not a part.\n                    hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                    if (isPart) {\n                      lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                    }\n                  }\n                }\n\n                var index = currentUri.preloadHints.length - 1;\n                this.warnOnMissingAttributes_(\"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex, entry.attributes, ['TYPE', 'URI']);\n\n                if (!hint.type) {\n                  return;\n                } // search through all preload hints except for the current one for\n                // a duplicate type.\n\n\n                for (var i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                  var otherHint = currentUri.preloadHints[i];\n\n                  if (!otherHint.type) {\n                    continue;\n                  }\n\n                  if (otherHint.type === hint.type) {\n                    this.trigger('warn', {\n                      message: \"#EXT-X-PRELOAD-HINT #\" + index + \" for segment #\" + segmentIndex + \" has the same TYPE \" + hint.type + \" as preload hint #\" + i\n                    });\n                  }\n                }\n              },\n              'rendition-report': function renditionReport() {\n                var report = camelCaseKeys(entry.attributes);\n                this.manifest.renditionReports = this.manifest.renditionReports || [];\n                this.manifest.renditionReports.push(report);\n                var index = this.manifest.renditionReports.length - 1;\n                var required = ['LAST-MSN', 'URI'];\n\n                if (hasParts) {\n                  required.push('LAST-PART');\n                }\n\n                this.warnOnMissingAttributes_(\"#EXT-X-RENDITION-REPORT #\" + index, entry.attributes, required);\n              },\n              'part-inf': function partInf() {\n                this.manifest.partInf = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n                if (this.manifest.partInf.partTarget) {\n                  this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n                }\n\n                setHoldBack.call(this, this.manifest);\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri: function uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n\n            if (_key) {\n              currentUri.key = _key;\n            }\n\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // reset the last byterange end as it needs to be 0 between parts\n\n\n            lastPartByterangeEnd = 0; // prepare for the next URI\n\n            currentUri = {};\n          },\n          comment: function comment() {// comments are not important for playback\n          },\n          custom: function custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n\n      return _this;\n    }\n\n    var _proto = Parser.prototype;\n\n    _proto.warnOnMissingAttributes_ = function warnOnMissingAttributes_(identifier, attributes, required) {\n      var missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n\n      if (missing.length) {\n        this.trigger('warn', {\n          message: identifier + \" lacks required attribute(s): \" + missing.join(', ')\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n    ;\n\n    _proto.push = function push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n    ;\n\n    _proto.end = function end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.type         the type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n    ;\n\n    _proto.addParser = function addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n    ;\n\n    _proto.addTagMapper = function addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    };\n\n    return Parser;\n  }(Stream);\n\n  var regexs = {\n    // to determine mime types\n    mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n    webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n    ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n    // to determine if a codec is audio or video\n    video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n    audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n    text: /^(stpp.ttml.im1t)/,\n    // mux.js support regex\n    muxerVideo: /^(avc0?1)/,\n    muxerAudio: /^(mp4a)/,\n    // match nothing as muxer does not support text right now.\n    // there cannot never be a character before the start of a string\n    // so this matches nothing.\n    muxerText: /a^/\n  };\n  var mediaTypes = ['video', 'audio', 'text'];\n  var upperMediaTypes = ['Video', 'Audio', 'Text'];\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {string} codec\n   *        Codec string to translate\n   * @return {string}\n   *         The translated codec string\n   */\n\n  var translateLegacyCodec = function translateLegacyCodec(codec) {\n    if (!codec) {\n      return codec;\n    }\n\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  };\n  /**\n   * @typedef {Object} ParsedCodecInfo\n   * @property {number} codecCount\n   *           Number of codecs parsed\n   * @property {string} [videoCodec]\n   *           Parsed video codec (if found)\n   * @property {string} [videoObjectTypeIndicator]\n   *           Video object type indicator (if found)\n   * @property {string|null} audioProfile\n   *           Audio profile\n   */\n\n  /**\n   * Parses a codec string to retrieve the number of codecs specified, the video codec and\n   * object type indicator, and the audio profile.\n   *\n   * @param {string} [codecString]\n   *        The codec string to parse\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var parseCodecs = function parseCodecs(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    var codecs = codecString.split(',');\n    var result = [];\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n      var codecType;\n      mediaTypes.forEach(function (name) {\n        var match = regexs[name].exec(codec.toLowerCase());\n\n        if (!match || match.length <= 1) {\n          return;\n        }\n\n        codecType = name; // maintain codec case\n\n        var type = codec.substring(0, match[1].length);\n        var details = codec.replace(type, '');\n        result.push({\n          type: type,\n          details: details,\n          mediaType: name\n        });\n      });\n\n      if (!codecType) {\n        result.push({\n          type: codec,\n          details: '',\n          mediaType: 'unknown'\n        });\n      }\n    });\n    return result;\n  };\n  /**\n   * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n   * a default alternate audio playlist for the provided audio group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   * @param {string} audioGroupId\n   *        ID of the audio group for which to find the default codec info\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n    if (!audioGroup) {\n      return null;\n    }\n\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n\n      if (audioType[\"default\"] && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS);\n      }\n    }\n\n    return null;\n  };\n  var isAudioCodec = function isAudioCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.audio.test(codec.trim().toLowerCase());\n  };\n  var isTextCodec = function isTextCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n\n    return regexs.text.test(codec.trim().toLowerCase());\n  };\n  var getMimeForCodec = function getMimeForCodec(codecString) {\n    if (!codecString || typeof codecString !== 'string') {\n      return;\n    }\n\n    var codecs = codecString.toLowerCase().split(',').map(function (c) {\n      return translateLegacyCodec(c.trim());\n    }); // default to video type\n\n    var type = 'video'; // only change to audio type if the only codec we have is\n    // audio\n\n    if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n      type = 'audio';\n    } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n      // text uses application/<container> for now\n      type = 'application';\n    } // default the container to mp4\n\n\n    var container = 'mp4'; // every codec must be able to go into the container\n    // for that container to be the correct one\n\n    if (codecs.every(function (c) {\n      return regexs.mp4.test(c);\n    })) {\n      container = 'mp4';\n    } else if (codecs.every(function (c) {\n      return regexs.webm.test(c);\n    })) {\n      container = 'webm';\n    } else if (codecs.every(function (c) {\n      return regexs.ogg.test(c);\n    })) {\n      container = 'ogg';\n    }\n\n    return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n  };\n  var browserSupportsCodec = function browserSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n  };\n  var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n\n    return codecString.toLowerCase().split(',').every(function (codec) {\n      codec = codec.trim(); // any match is supported.\n\n      for (var i = 0; i < upperMediaTypes.length; i++) {\n        var type = upperMediaTypes[i];\n\n        if (regexs[\"muxer\" + type].test(codec)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  };\n  var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\n  var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';\n\n  var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n  var DASH_REGEX = /^application\\/dash\\+xml/i;\n  /**\n   * Returns a string that describes the type of source based on a video source object's\n   * media type.\n   *\n   * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n   *\n   * @param {string} type\n   *        Video source object media type\n   * @return {('hls'|'dash'|'vhs-json'|null)}\n   *         VHS source type string\n   */\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    if (MPEGURL_REGEX.test(type)) {\n      return 'hls';\n    }\n\n    if (DASH_REGEX.test(type)) {\n      return 'dash';\n    } // Denotes the special case of a manifest object passed to http-streaming instead of a\n    // source URL.\n    //\n    // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n    //\n    // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n    // project, and the +json suffix identifies the structure of the media type.\n\n\n    if (type === 'application/vnd.videojs.vhs+json') {\n      return 'vhs-json';\n    }\n\n    return null;\n  };\n\n  // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n  // we used to do this with log2 but BigInt does not support builtin math\n  // Math.ceil(log2(x));\n\n\n  var countBits = function countBits(x) {\n    return x.toString(2).length;\n  }; // count the number of whole bytes it would take to represent a number\n\n  var countBytes = function countBytes(x) {\n    return Math.ceil(countBits(x) / 8);\n  };\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var isTypedArray = function isTypedArray(obj) {\n    return isArrayBufferView(obj);\n  };\n  var toUint8 = function toUint8(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return bytes;\n    }\n\n    if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n      // any non-number or NaN leads to empty uint8array\n      // eslint-disable-next-line\n      if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n        bytes = 0;\n      } else {\n        bytes = [bytes];\n      }\n    }\n\n    return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n  };\n  var BigInt = window.BigInt || Number;\n  var BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  var bytesToNumber = function bytesToNumber(bytes, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$signed = _ref.signed,\n        signed = _ref$signed === void 0 ? false : _ref$signed,\n        _ref$le = _ref.le,\n        le = _ref$le === void 0 ? false : _ref$le;\n\n    bytes = toUint8(bytes);\n    var fn = le ? 'reduce' : 'reduceRight';\n    var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n    var number = obj.call(bytes, function (total, _byte, i) {\n      var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n      return total + BigInt(_byte) * BYTE_TABLE[exponent];\n    }, BigInt(0));\n\n    if (signed) {\n      var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n      number = BigInt(number);\n\n      if (number > max) {\n        number -= max;\n        number -= max;\n        number -= BigInt(2);\n      }\n    }\n\n    return Number(number);\n  };\n  var numberToBytes = function numberToBytes(number, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n        _ref2$le = _ref2.le,\n        le = _ref2$le === void 0 ? false : _ref2$le; // eslint-disable-next-line\n\n\n    if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n      number = 0;\n    }\n\n    number = BigInt(number);\n    var byteCount = countBytes(number);\n    var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n    for (var i = 0; i < byteCount; i++) {\n      var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n      bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n      if (number < 0) {\n        bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n        bytes[byteIndex] -= i === 0 ? 1 : 2;\n      }\n    }\n\n    return bytes;\n  };\n  var stringToBytes = function stringToBytes(string, stringIsBytes) {\n    if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n      string = string.toString();\n    }\n\n    if (typeof string !== 'string') {\n      return new Uint8Array();\n    } // If the string already is bytes, we don't have to do this\n    // otherwise we do this so that we split multi length characters\n    // into individual bytes\n\n\n    if (!stringIsBytes) {\n      string = unescape(encodeURIComponent(string));\n    }\n\n    var view = new Uint8Array(string.length);\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view;\n  };\n  var concatTypedArrays = function concatTypedArrays() {\n    for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n      buffers[_key] = arguments[_key];\n    }\n\n    buffers = buffers.filter(function (b) {\n      return b && (b.byteLength || b.length) && typeof b !== 'string';\n    });\n\n    if (buffers.length <= 1) {\n      // for 0 length we will return empty uint8\n      // for 1 length we return the first uint8\n      return toUint8(buffers[0]);\n    }\n\n    var totalLen = buffers.reduce(function (total, buf, i) {\n      return total + (buf.byteLength || buf.length);\n    }, 0);\n    var tempBuffer = new Uint8Array(totalLen);\n    var offset = 0;\n    buffers.forEach(function (buf) {\n      buf = toUint8(buf);\n      tempBuffer.set(buf, offset);\n      offset += buf.byteLength;\n    });\n    return tempBuffer;\n  };\n  /**\n   * Check if the bytes \"b\" are contained within bytes \"a\".\n   *\n   * @param {Uint8Array|Array} a\n   *        Bytes to check in\n   *\n   * @param {Uint8Array|Array} b\n   *        Bytes to check for\n   *\n   * @param {Object} options\n   *        options\n   *\n   * @param {Array|Uint8Array} [offset=0]\n   *        offset to use when looking at bytes in a\n   *\n   * @param {Array|Uint8Array} [mask=[]]\n   *        mask to use on bytes before comparison.\n   *\n   * @return {boolean}\n   *         If all bytes in b are inside of a, taking into account\n   *         bit masks.\n   */\n\n  var bytesMatch = function bytesMatch(a, b, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n        _ref3$offset = _ref3.offset,\n        offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n        _ref3$mask = _ref3.mask,\n        mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n    a = toUint8(a);\n    b = toUint8(b); // ie 11 does not support uint8 every\n\n    var fn = b.every ? b.every : Array.prototype.every;\n    return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n    fn.call(b, function (bByte, i) {\n      var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n      return bByte === aByte;\n    });\n  };\n\n  var DEFAULT_LOCATION = 'http://example.com';\n\n  var resolveUrl$1 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n\n      return newUrl.href;\n    }\n\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {string[]} groups\n   *        The media groups to call the callback for\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n  var forEachMediaGroup$1 = function forEachMediaGroup(master, groups, callback) {\n    groups.forEach(function (mediaType) {\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n\n  var atob = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n\n    return array;\n  }\n\n  /**\n   * \"Shallow freezes\" an object to render it immutable.\n   * Uses `Object.freeze` if available,\n   * otherwise the immutability is only in the type.\n   *\n   * Is used to create \"enum like\" objects.\n   *\n   * @template T\n   * @param {T} object the object to freeze\n   * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n   * \t\t\t\tallows to inject custom object constructor for tests\n   * @returns {Readonly<T>}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n\n  function freeze(object, oc) {\n    if (oc === undefined) {\n      oc = Object;\n    }\n\n    return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n  }\n  /**\n   * All mime types that are allowed as input to `DOMParser.parseFromString`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n   * @see DOMParser.prototype.parseFromString\n   */\n\n\n  var MIME_TYPE = freeze({\n    /**\n     * `text/html`, the only mime type that triggers treating an XML document as HTML.\n     *\n     * @see DOMParser.SupportedType.isHTML\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n     */\n    HTML: 'text/html',\n\n    /**\n     * Helper method to check a mime type if it indicates an HTML document\n     *\n     * @param {string} [value]\n     * @returns {boolean}\n     *\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n    isHTML: function isHTML(value) {\n      return value === MIME_TYPE.HTML;\n    },\n\n    /**\n     * `application/xml`, the standard mime type for XML documents.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_APPLICATION: 'application/xml',\n\n    /**\n     * `text/html`, an alias for `application/xml`.\n     *\n     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_TEXT: 'text/xml',\n\n    /**\n     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n     * but is parsed as an XML document.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n     */\n    XML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n    /**\n     * `image/svg+xml`,\n     *\n     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n     */\n    XML_SVG_IMAGE: 'image/svg+xml'\n  });\n  /**\n   * Namespaces that are used in this code base.\n   *\n   * @see http://www.w3.org/TR/REC-xml-names\n   */\n\n  var NAMESPACE$3 = freeze({\n    /**\n     * The XHTML namespace.\n     *\n     * @see http://www.w3.org/1999/xhtml\n     */\n    HTML: 'http://www.w3.org/1999/xhtml',\n\n    /**\n     * Checks if `uri` equals `NAMESPACE.HTML`.\n     *\n     * @param {string} [uri]\n     *\n     * @see NAMESPACE.HTML\n     */\n    isHTML: function isHTML(uri) {\n      return uri === NAMESPACE$3.HTML;\n    },\n\n    /**\n     * The SVG namespace.\n     *\n     * @see http://www.w3.org/2000/svg\n     */\n    SVG: 'http://www.w3.org/2000/svg',\n\n    /**\n     * The `xml:` namespace.\n     *\n     * @see http://www.w3.org/XML/1998/namespace\n     */\n    XML: 'http://www.w3.org/XML/1998/namespace',\n\n    /**\n     * The `xmlns:` namespace\n     *\n     * @see https://www.w3.org/2000/xmlns/\n     */\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n  });\n  var freeze_1 = freeze;\n  var MIME_TYPE_1 = MIME_TYPE;\n  var NAMESPACE_1 = NAMESPACE$3;\n  var conventions = {\n    freeze: freeze_1,\n    MIME_TYPE: MIME_TYPE_1,\n    NAMESPACE: NAMESPACE_1\n  };\n\n  var NAMESPACE$2 = conventions.NAMESPACE;\n  /**\n   * A prerequisite for `[].filter`, to drop elements that are empty\n   * @param {string} input\n   * @returns {boolean}\n   */\n\n  function notEmptyString(input) {\n    return input !== '';\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n   * @see https://infra.spec.whatwg.org/#ascii-whitespace\n   *\n   * @param {string} input\n   * @returns {string[]} (can be empty)\n   */\n\n\n  function splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n  }\n  /**\n   * Adds element as a key to current if it is not already present.\n   *\n   * @param {Record<string, boolean | undefined>} current\n   * @param {string} element\n   * @returns {Record<string, boolean | undefined>}\n   */\n\n\n  function orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) {\n      current[element] = true;\n    }\n\n    return current;\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#ordered-set\n   * @param {string} input\n   * @returns {string[]}\n   */\n\n\n  function toOrderedSet(input) {\n    if (!input) return [];\n    var list = splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce(orderedSetReducer, {}));\n  }\n  /**\n   * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n   * which we can not rely on being available.\n   *\n   * @param {any[]} list\n   * @returns {function(any): boolean}\n   */\n\n\n  function arrayIncludes(list) {\n    return function (element) {\n      return list && list.indexOf(element) !== -1;\n    };\n  }\n\n  function copy(src, dest) {\n    for (var p in src) {\n      dest[p] = src[p];\n    }\n  }\n  /**\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n   */\n\n\n  function _extends(Class, Super) {\n    var pt = Class.prototype;\n\n    if (!(pt instanceof Super)) {\n      var t = function t() {};\n      t.prototype = Super.prototype;\n      t = new t();\n      copy(pt, t);\n      Class.prototype = pt = t;\n    }\n\n    if (pt.constructor != Class) {\n      if (typeof Class != 'function') {\n        console.error(\"unknown Class:\" + Class);\n      }\n\n      pt.constructor = Class;\n    }\n  } // Node Types\n\n\n  var NodeType = {};\n  var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = NodeType.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = NodeType.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = NodeType.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = NodeType.NOTATION_NODE = 12; // ExceptionCode\n\n  var ExceptionCode = {};\n  var ExceptionMessage = {};\n  ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\n  ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\n  var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\n  ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\n  ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\n  ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\n  ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\n  var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\n  ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\n  var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10); //level2\n\n  ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\n  ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\n  ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\n  ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\n  ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n  /**\n   * DOM Level 2\n   * Object DOMException\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n   * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n   */\n\n  function DOMException(code, message) {\n    if (message instanceof Error) {\n      var error = message;\n    } else {\n      error = this;\n      Error.call(this, ExceptionMessage[code]);\n      this.message = ExceptionMessage[code];\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n    }\n\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n  }\n  DOMException.prototype = Error.prototype;\n  copy(ExceptionCode, DOMException);\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n   * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n   * The items in the NodeList are accessible via an integral index, starting from 0.\n   */\n\n  function NodeList() {}\n  NodeList.prototype = {\n    /**\n     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n     * @standard level1\n     */\n    length: 0,\n\n    /**\n     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n     * @standard level1\n     * @param index  unsigned long \n     *   Index into the collection.\n     * @return Node\n     * \tThe node at the indexth position in the NodeList, or null if that is not a valid index. \n     */\n    item: function item(index) {\n      return this[index] || null;\n    },\n    toString: function toString(isHTML, nodeFilter) {\n      for (var buf = [], i = 0; i < this.length; i++) {\n        serializeToString(this[i], buf, isHTML, nodeFilter);\n      }\n\n      return buf.join('');\n    }\n  };\n\n  function LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n\n    _updateLiveList(this);\n  }\n\n  function _updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n\n    if (list._inc != inc) {\n      var ls = list._refresh(list._node); //console.log(ls.length)\n\n\n      __set__(list, 'length', ls.length);\n\n      copy(ls, list);\n      list._inc = inc;\n    }\n  }\n\n  LiveNodeList.prototype.item = function (i) {\n    _updateLiveList(this);\n\n    return this[i];\n  };\n\n  _extends(LiveNodeList, NodeList);\n  /**\n   * Objects implementing the NamedNodeMap interface are used\n   * to represent collections of nodes that can be accessed by name.\n   * Note that NamedNodeMap does not inherit from NodeList;\n   * NamedNodeMaps are not maintained in any particular order.\n   * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n   * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n   * and does not imply that the DOM specifies an order to these Nodes.\n   * NamedNodeMap objects in the DOM are live.\n   * used for attributes or DocumentType entities \n   */\n\n\n  function NamedNodeMap() {}\n\n  function _findNodeIndex(list, node) {\n    var i = list.length;\n\n    while (i--) {\n      if (list[i] === node) {\n        return i;\n      }\n    }\n  }\n\n  function _addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) {\n      list[_findNodeIndex(list, oldAttr)] = newAttr;\n    } else {\n      list[list.length++] = newAttr;\n    }\n\n    if (el) {\n      newAttr.ownerElement = el;\n      var doc = el.ownerDocument;\n\n      if (doc) {\n        oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n\n        _onAddAttribute(doc, el, newAttr);\n      }\n    }\n  }\n\n  function _removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = _findNodeIndex(list, attr);\n\n    if (i >= 0) {\n      var lastIndex = list.length - 1;\n\n      while (i < lastIndex) {\n        list[i] = list[++i];\n      }\n\n      list.length = lastIndex;\n\n      if (el) {\n        var doc = el.ownerDocument;\n\n        if (doc) {\n          _onRemoveAttribute(doc, el, attr);\n\n          attr.ownerElement = null;\n        }\n      }\n    } else {\n      throw DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n    }\n  }\n\n  NamedNodeMap.prototype = {\n    length: 0,\n    item: NodeList.prototype.item,\n    getNamedItem: function getNamedItem(key) {\n      //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n      //\t\t\treturn null;\n      //\t\t}\n      //console.log()\n      var i = this.length;\n\n      while (i--) {\n        var attr = this[i]; //console.log(attr.nodeName,key)\n\n        if (attr.nodeName == key) {\n          return attr;\n        }\n      }\n    },\n    setNamedItem: function setNamedItem(attr) {\n      var el = attr.ownerElement;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      var oldAttr = this.getNamedItem(attr.nodeName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    setNamedItemNS: function setNamedItemNS(attr) {\n      // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n      var el = attr.ownerElement,\n          oldAttr;\n\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n\n      oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n\n      return oldAttr;\n    },\n\n    /* returns Node */\n    removeNamedItem: function removeNamedItem(key) {\n      var attr = this.getNamedItem(key);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n    //for level2\n    removeNamedItemNS: function removeNamedItemNS(namespaceURI, localName) {\n      var attr = this.getNamedItemNS(namespaceURI, localName);\n\n      _removeNamedNode(this._ownerElement, this, attr);\n\n      return attr;\n    },\n    getNamedItemNS: function getNamedItemNS(namespaceURI, localName) {\n      var i = this.length;\n\n      while (i--) {\n        var node = this[i];\n\n        if (node.localName == localName && node.namespaceURI == namespaceURI) {\n          return node;\n        }\n      }\n\n      return null;\n    }\n  };\n  /**\n   * The DOMImplementation interface represents an object providing methods\n   * which are not dependent on any particular document.\n   * Such an object is returned by the `Document.implementation` property.\n   *\n   * __The individual methods describe the differences compared to the specs.__\n   *\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n   * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n   */\n\n  function DOMImplementation$1() {}\n\n  DOMImplementation$1.prototype = {\n    /**\n     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n     * The different implementations fairly diverged in what kind of features were reported.\n     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n     *\n     * @deprecated It is deprecated and modern browsers return true in all cases.\n     *\n     * @param {string} feature\n     * @param {string} [version]\n     * @returns {boolean} always true\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n     */\n    hasFeature: function hasFeature(feature, version) {\n      return true;\n    },\n\n    /**\n     * Creates an XML Document object of the specified type with its document element.\n     *\n     * __It behaves slightly different from the description in the living standard__:\n     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string|null} namespaceURI\n     * @param {string} qualifiedName\n     * @param {DocumentType=null} doctype\n     * @returns {Document}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocument: function createDocument(namespaceURI, qualifiedName, doctype) {\n      var doc = new Document();\n      doc.implementation = this;\n      doc.childNodes = new NodeList();\n      doc.doctype = doctype || null;\n\n      if (doctype) {\n        doc.appendChild(doctype);\n      }\n\n      if (qualifiedName) {\n        var root = doc.createElementNS(namespaceURI, qualifiedName);\n        doc.appendChild(root);\n      }\n\n      return doc;\n    },\n\n    /**\n     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n     *\n     * __This behavior is slightly different from the in the specs__:\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string} qualifiedName\n     * @param {string} [publicId]\n     * @param {string} [systemId]\n     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n     * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocumentType: function createDocumentType(qualifiedName, publicId, systemId) {\n      var node = new DocumentType();\n      node.name = qualifiedName;\n      node.nodeName = qualifiedName;\n      node.publicId = publicId || '';\n      node.systemId = systemId || '';\n      return node;\n    }\n  };\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n   */\n\n  function Node() {}\n  Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises \n      return _insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function replaceChild(newChild, oldChild) {\n      //raises \n      this.insertBefore(newChild, oldChild);\n\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n    },\n    removeChild: function removeChild(oldChild) {\n      return _removeChild(this, oldChild);\n    },\n    appendChild: function appendChild(newChild) {\n      return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function hasChildNodes() {\n      return this.firstChild != null;\n    },\n    cloneNode: function cloneNode(deep) {\n      return _cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function normalize() {\n      var child = this.firstChild;\n\n      while (child) {\n        var next = child.nextSibling;\n\n        if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n          this.removeChild(next);\n          child.appendData(next.data);\n        } else {\n          child.normalize();\n          child = next;\n        }\n      }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function isSupported(feature, version) {\n      return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function hasAttributes() {\n      return this.attributes.length > 0;\n    },\n\n    /**\n     * Look up the prefix associated to the given namespace URI, starting from this node.\n     * **The default namespace declarations are ignored by this method.**\n     * See Namespace Prefix Lookup for details on the algorithm used by this method.\n     *\n     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n     *\n     * @param {string | null} namespaceURI\n     * @returns {string | null}\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n     * @see https://github.com/xmldom/xmldom/issues/322\n     */\n    lookupPrefix: function lookupPrefix(namespaceURI) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          for (var n in map) {\n            if (map[n] == namespaceURI) {\n              return n;\n            }\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function lookupNamespaceURI(prefix) {\n      var el = this;\n\n      while (el) {\n        var map = el._nsMap; //console.dir(map)\n\n        if (map) {\n          if (prefix in map) {\n            return map[prefix];\n          }\n        }\n\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function isDefaultNamespace(namespaceURI) {\n      var prefix = this.lookupPrefix(namespaceURI);\n      return prefix == null;\n    }\n  };\n\n  function _xmlEncoder(c) {\n    return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n  }\n\n  copy(NodeType, Node);\n  copy(NodeType, Node.prototype);\n  /**\n   * @param callback return true for continue,false for break\n   * @return boolean true: break visit;\n   */\n\n  function _visitNode(node, callback) {\n    if (callback(node)) {\n      return true;\n    }\n\n    if (node = node.firstChild) {\n      do {\n        if (_visitNode(node, callback)) {\n          return true;\n        }\n      } while (node = node.nextSibling);\n    }\n  }\n\n  function Document() {}\n\n  function _onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n    }\n  }\n\n  function _onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n    }\n  }\n\n  function _onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n      doc._inc++; //update childNodes\n\n      var cs = el.childNodes;\n\n      if (newChild) {\n        cs[cs.length++] = newChild;\n      } else {\n        //console.log(1)\n        var child = el.firstChild;\n        var i = 0;\n\n        while (child) {\n          cs[i++] = child;\n          child = child.nextSibling;\n        }\n\n        cs.length = i;\n      }\n    }\n  }\n  /**\n   * attributes;\n   * children;\n   * \n   * writeable properties:\n   * nodeValue,Attr:value,CharacterData:data\n   * prefix\n   */\n\n\n  function _removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n\n    if (previous) {\n      previous.nextSibling = next;\n    } else {\n      parentNode.firstChild = next;\n    }\n\n    if (next) {\n      next.previousSibling = previous;\n    } else {\n      parentNode.lastChild = previous;\n    }\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode);\n\n    return child;\n  }\n  /**\n   * preformance key(refChild == null)\n   */\n\n\n  function _insertBefore(parentNode, newChild, nextChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      cp.removeChild(newChild); //remove and update\n    }\n\n    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      var newFirst = newChild.firstChild;\n\n      if (newFirst == null) {\n        return newChild;\n      }\n\n      var newLast = newChild.lastChild;\n    } else {\n      newFirst = newLast = newChild;\n    }\n\n    var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = nextChild;\n\n    if (pre) {\n      pre.nextSibling = newFirst;\n    } else {\n      parentNode.firstChild = newFirst;\n    }\n\n    if (nextChild == null) {\n      parentNode.lastChild = newLast;\n    } else {\n      nextChild.previousSibling = newLast;\n    }\n\n    do {\n      newFirst.parentNode = parentNode;\n    } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n\n    _onUpdateChild(parentNode.ownerDocument || parentNode, parentNode); //console.log(parentNode.lastChild.nextSibling == null)\n\n\n    if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      newChild.firstChild = newChild.lastChild = null;\n    }\n\n    return newChild;\n  }\n\n  function _appendSingleChild(parentNode, newChild) {\n    var cp = newChild.parentNode;\n\n    if (cp) {\n      var pre = parentNode.lastChild;\n      cp.removeChild(newChild); //remove and update\n\n      var pre = parentNode.lastChild;\n    }\n\n    var pre = parentNode.lastChild;\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = pre;\n    newChild.nextSibling = null;\n\n    if (pre) {\n      pre.nextSibling = newChild;\n    } else {\n      parentNode.firstChild = newChild;\n    }\n\n    parentNode.lastChild = newChild;\n\n    _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\n    return newChild; //console.log(\"__aa\",parentNode.lastChild.nextSibling == null)\n  }\n\n  Document.prototype = {\n    //implementation : null,\n    nodeName: '#document',\n    nodeType: DOCUMENT_NODE,\n\n    /**\n     * The DocumentType node of the document.\n     *\n     * @readonly\n     * @type DocumentType\n     */\n    doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function insertBefore(newChild, refChild) {\n      //raises\n      if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n        var child = newChild.firstChild;\n\n        while (child) {\n          var next = child.nextSibling;\n          this.insertBefore(child, refChild);\n          child = next;\n        }\n\n        return newChild;\n      }\n\n      if (this.documentElement == null && newChild.nodeType == ELEMENT_NODE) {\n        this.documentElement = newChild;\n      }\n\n      return _insertBefore(this, newChild, refChild), newChild.ownerDocument = this, newChild;\n    },\n    removeChild: function removeChild(oldChild) {\n      if (this.documentElement == oldChild) {\n        this.documentElement = null;\n      }\n\n      return _removeChild(this, oldChild);\n    },\n    // Introduced in DOM Level 2:\n    importNode: function importNode(importedNode, deep) {\n      return _importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function getElementById(id) {\n      var rtv = null;\n\n      _visitNode(this.documentElement, function (node) {\n        if (node.nodeType == ELEMENT_NODE) {\n          if (node.getAttribute('id') == id) {\n            rtv = node;\n            return true;\n          }\n        }\n      });\n\n      return rtv;\n    },\n\n    /**\n     * The `getElementsByClassName` method of `Document` interface returns an array-like object\n     * of all child elements which have **all** of the given class name(s).\n     *\n     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n     *\n     *\n     * Warning: This is a live LiveNodeList.\n     * Changes in the DOM will reflect in the array as the changes occur.\n     * If an element selected by this array no longer qualifies for the selector,\n     * it will automatically be removed. Be aware of this for iteration purposes.\n     *\n     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n     */\n    getElementsByClassName: function getElementsByClassName(classNames) {\n      var classNamesSet = toOrderedSet(classNames);\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        if (classNamesSet.length > 0) {\n          _visitNode(base.documentElement, function (node) {\n            if (node !== base && node.nodeType === ELEMENT_NODE) {\n              var nodeClassNames = node.getAttribute('class'); // can be null if the attribute does not exist\n\n              if (nodeClassNames) {\n                // before splitting and iterating just compare them for the most common case\n                var matches = classNames === nodeClassNames;\n\n                if (!matches) {\n                  var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                  matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n                }\n\n                if (matches) {\n                  ls.push(node);\n                }\n              }\n            }\n          });\n        }\n\n        return ls;\n      });\n    },\n    //document factory method:\n    createElement: function createElement(tagName) {\n      var node = new Element();\n      node.ownerDocument = this;\n      node.nodeName = tagName;\n      node.tagName = tagName;\n      node.localName = tagName;\n      node.childNodes = new NodeList();\n      var attrs = node.attributes = new NamedNodeMap();\n      attrs._ownerElement = node;\n      return node;\n    },\n    createDocumentFragment: function createDocumentFragment() {\n      var node = new DocumentFragment();\n      node.ownerDocument = this;\n      node.childNodes = new NodeList();\n      return node;\n    },\n    createTextNode: function createTextNode(data) {\n      var node = new Text();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createComment: function createComment(data) {\n      var node = new Comment();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createCDATASection: function createCDATASection(data) {\n      var node = new CDATASection();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createProcessingInstruction: function createProcessingInstruction(target, data) {\n      var node = new ProcessingInstruction();\n      node.ownerDocument = this;\n      node.tagName = node.target = target;\n      node.nodeValue = node.data = data;\n      return node;\n    },\n    createAttribute: function createAttribute(name) {\n      var node = new Attr();\n      node.ownerDocument = this;\n      node.name = name;\n      node.nodeName = name;\n      node.localName = name;\n      node.specified = true;\n      return node;\n    },\n    createEntityReference: function createEntityReference(name) {\n      var node = new EntityReference();\n      node.ownerDocument = this;\n      node.nodeName = name;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function createElementNS(namespaceURI, qualifiedName) {\n      var node = new Element();\n      var pl = qualifiedName.split(':');\n      var attrs = node.attributes = new NamedNodeMap();\n      node.childNodes = new NodeList();\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.tagName = qualifiedName;\n      node.namespaceURI = namespaceURI;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      attrs._ownerElement = node;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function createAttributeNS(namespaceURI, qualifiedName) {\n      var node = new Attr();\n      var pl = qualifiedName.split(':');\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.name = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      node.specified = true;\n\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n\n      return node;\n    }\n  };\n\n  _extends(Document, Node);\n\n  function Element() {\n    this._nsMap = {};\n  }\n  Element.prototype = {\n    nodeType: ELEMENT_NODE,\n    hasAttribute: function hasAttribute(name) {\n      return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function getAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      return attr && attr.value || '';\n    },\n    getAttributeNode: function getAttributeNode(name) {\n      return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function setAttribute(name, value) {\n      var attr = this.ownerDocument.createAttribute(name);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    removeAttribute: function removeAttribute(name) {\n      var attr = this.getAttributeNode(name);\n      attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function appendChild(newChild) {\n      if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n        return this.insertBefore(newChild, null);\n      } else {\n        return _appendSingleChild(this, newChild);\n      }\n    },\n    setAttributeNode: function setAttributeNode(newAttr) {\n      return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function setAttributeNodeNS(newAttr) {\n      return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function removeAttributeNode(oldAttr) {\n      //console.log(this == oldAttr.ownerElement)\n      return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function removeAttributeNS(namespaceURI, localName) {\n      var old = this.getAttributeNodeNS(namespaceURI, localName);\n      old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function hasAttributeNS(namespaceURI, localName) {\n      return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function getAttributeNS(namespaceURI, localName) {\n      var attr = this.getAttributeNodeNS(namespaceURI, localName);\n      return attr && attr.value || '';\n    },\n    setAttributeNS: function setAttributeNS(namespaceURI, qualifiedName, value) {\n      var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function getAttributeNodeNS(namespaceURI, localName) {\n      return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function getElementsByTagName(tagName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    },\n    getElementsByTagNameNS: function getElementsByTagNameNS(namespaceURI, localName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n            ls.push(node);\n          }\n        });\n\n        return ls;\n      });\n    }\n  };\n  Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n  Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n  _extends(Element, Node);\n\n  function Attr() {}\n  Attr.prototype.nodeType = ATTRIBUTE_NODE;\n\n  _extends(Attr, Node);\n\n  function CharacterData() {}\n  CharacterData.prototype = {\n    data: '',\n    substringData: function substringData(offset, count) {\n      return this.data.substring(offset, offset + count);\n    },\n    appendData: function appendData(text) {\n      text = this.data + text;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    },\n    insertData: function insertData(offset, text) {\n      this.replaceData(offset, 0, text);\n    },\n    appendChild: function appendChild(newChild) {\n      throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function deleteData(offset, count) {\n      this.replaceData(offset, count, \"\");\n    },\n    replaceData: function replaceData(offset, count, text) {\n      var start = this.data.substring(0, offset);\n      var end = this.data.substring(offset + count);\n      text = start + text + end;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    }\n  };\n\n  _extends(CharacterData, Node);\n\n  function Text() {}\n  Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: TEXT_NODE,\n    splitText: function splitText(offset) {\n      var text = this.data;\n      var newText = text.substring(offset);\n      text = text.substring(0, offset);\n      this.data = this.nodeValue = text;\n      this.length = text.length;\n      var newNode = this.ownerDocument.createTextNode(newText);\n\n      if (this.parentNode) {\n        this.parentNode.insertBefore(newNode, this.nextSibling);\n      }\n\n      return newNode;\n    }\n  };\n\n  _extends(Text, CharacterData);\n\n  function Comment() {}\n  Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: COMMENT_NODE\n  };\n\n  _extends(Comment, CharacterData);\n\n  function CDATASection() {}\n  CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: CDATA_SECTION_NODE\n  };\n\n  _extends(CDATASection, CharacterData);\n\n  function DocumentType() {}\n  DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n\n  _extends(DocumentType, Node);\n\n  function Notation() {}\n  Notation.prototype.nodeType = NOTATION_NODE;\n\n  _extends(Notation, Node);\n\n  function Entity() {}\n  Entity.prototype.nodeType = ENTITY_NODE;\n\n  _extends(Entity, Node);\n\n  function EntityReference() {}\n  EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n\n  _extends(EntityReference, Node);\n\n  function DocumentFragment() {}\n  DocumentFragment.prototype.nodeName = \"#document-fragment\";\n  DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n\n  _extends(DocumentFragment, Node);\n\n  function ProcessingInstruction() {}\n\n  ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n\n  _extends(ProcessingInstruction, Node);\n\n  function XMLSerializer$1() {}\n\n  XMLSerializer$1.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n    return nodeSerializeToString.call(node, isHtml, nodeFilter);\n  };\n\n  Node.prototype.toString = nodeSerializeToString;\n\n  function nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n\n    if (uri && prefix == null) {\n      //console.log(prefix)\n      var prefix = refNode.lookupPrefix(uri);\n\n      if (prefix == null) {\n        //isHTML = true;\n        var visibleNamespaces = [{\n          namespace: uri,\n          prefix: null\n        } //{namespace:uri,prefix:''}\n        ];\n      }\n    }\n\n    serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces); //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\n    return buf.join('');\n  }\n\n  function needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || '';\n    var uri = node.namespaceURI; // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\n    if (!uri) {\n      return false;\n    }\n\n    if (prefix === \"xml\" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) {\n      return false;\n    }\n\n    var i = visibleNamespaces.length;\n\n    while (i--) {\n      var ns = visibleNamespaces[i]; // get namespace prefix\n\n      if (ns.prefix === prefix) {\n        return ns.namespace !== uri;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Well-formed constraint: No < in Attribute Values\n   * The replacement text of any entity referred to directly or indirectly in an attribute value must not contain a <.\n   * @see https://www.w3.org/TR/xml/#CleanAttrVals\n   * @see https://www.w3.org/TR/xml/#NT-AttValue\n   */\n\n\n  function addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(' ', qualifiedName, '=\"', value.replace(/[<&\"]/g, _xmlEncoder), '\"');\n  }\n\n  function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) {\n      visibleNamespaces = [];\n    }\n\n    if (nodeFilter) {\n      node = nodeFilter(node);\n\n      if (node) {\n        if (typeof node == 'string') {\n          buf.push(node);\n          return;\n        }\n      } else {\n        return;\n      } //buf.sort.apply(attrs, attributeSorter);\n\n    }\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var len = attrs.length;\n        var child = node.firstChild;\n        var nodeName = node.tagName;\n        isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;\n        var prefixedNodeName = nodeName;\n\n        if (!isHTML && !node.prefix && node.namespaceURI) {\n          var defaultNS; // lookup current default ns from `xmlns` attribute\n\n          for (var ai = 0; ai < attrs.length; ai++) {\n            if (attrs.item(ai).name === 'xmlns') {\n              defaultNS = attrs.item(ai).value;\n              break;\n            }\n          }\n\n          if (!defaultNS) {\n            // lookup current default ns in visibleNamespaces\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n                defaultNS = namespace.namespace;\n                break;\n              }\n            }\n          }\n\n          if (defaultNS !== node.namespaceURI) {\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n\n              if (namespace.namespace === node.namespaceURI) {\n                if (namespace.prefix) {\n                  prefixedNodeName = namespace.prefix + ':' + nodeName;\n                }\n\n                break;\n              }\n            }\n          }\n        }\n\n        buf.push('<', prefixedNodeName);\n\n        for (var i = 0; i < len; i++) {\n          // add namespaces for attributes\n          var attr = attrs.item(i);\n\n          if (attr.prefix == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: attr.localName,\n              namespace: attr.value\n            });\n          } else if (attr.nodeName == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: '',\n              namespace: attr.value\n            });\n          }\n        }\n\n        for (var i = 0; i < len; i++) {\n          var attr = attrs.item(i);\n\n          if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n            var prefix = attr.prefix || '';\n            var uri = attr.namespaceURI;\n            addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n            visibleNamespaces.push({\n              prefix: prefix,\n              namespace: uri\n            });\n          }\n\n          serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n        } // add namespace for current node\t\t\n\n\n        if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n          var prefix = node.prefix || '';\n          var uri = node.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n\n        if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n          buf.push('>'); //if is cdata child node\n\n          if (isHTML && /^script$/i.test(nodeName)) {\n            while (child) {\n              if (child.data) {\n                buf.push(child.data);\n              } else {\n                serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              }\n\n              child = child.nextSibling;\n            }\n          } else {\n            while (child) {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              child = child.nextSibling;\n            }\n          }\n\n          buf.push('</', prefixedNodeName, '>');\n        } else {\n          buf.push('/>');\n        } // remove added visible namespaces\n        //visibleNamespaces.length = startVisibleNamespaces;\n\n\n        return;\n\n      case DOCUMENT_NODE:\n      case DOCUMENT_FRAGMENT_NODE:\n        var child = node.firstChild;\n\n        while (child) {\n          serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n          child = child.nextSibling;\n        }\n\n        return;\n\n      case ATTRIBUTE_NODE:\n        return addSerializedAttribute(buf, node.name, node.value);\n\n      case TEXT_NODE:\n        /**\n         * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n         * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n         * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n         * `&amp;` and `&lt;` respectively.\n         * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n         * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n         * when that string is not marking the end of a CDATA section.\n         *\n         * In the content of elements, character data is any string of characters\n         * which does not contain the start-delimiter of any markup\n         * and does not include the CDATA-section-close delimiter, `]]>`.\n         *\n         * @see https://www.w3.org/TR/xml/#NT-CharData\n         */\n        return buf.push(node.data.replace(/[<&]/g, _xmlEncoder).replace(/]]>/g, ']]&gt;'));\n\n      case CDATA_SECTION_NODE:\n        return buf.push('<![CDATA[', node.data, ']]>');\n\n      case COMMENT_NODE:\n        return buf.push(\"<!--\", node.data, \"-->\");\n\n      case DOCUMENT_TYPE_NODE:\n        var pubid = node.publicId;\n        var sysid = node.systemId;\n        buf.push('<!DOCTYPE ', node.name);\n\n        if (pubid) {\n          buf.push(' PUBLIC ', pubid);\n\n          if (sysid && sysid != '.') {\n            buf.push(' ', sysid);\n          }\n\n          buf.push('>');\n        } else if (sysid && sysid != '.') {\n          buf.push(' SYSTEM ', sysid, '>');\n        } else {\n          var sub = node.internalSubset;\n\n          if (sub) {\n            buf.push(\" [\", sub, \"]\");\n          }\n\n          buf.push(\">\");\n        }\n\n        return;\n\n      case PROCESSING_INSTRUCTION_NODE:\n        return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n\n      case ENTITY_REFERENCE_NODE:\n        return buf.push('&', node.nodeName, ';');\n      //case ENTITY_NODE:\n      //case NOTATION_NODE:\n\n      default:\n        buf.push('??', node.nodeName);\n    }\n  }\n\n  function _importNode(doc, node, deep) {\n    var node2;\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        node2 = node.cloneNode(false);\n        node2.ownerDocument = doc;\n      //var attrs = node2.attributes;\n      //var len = attrs.length;\n      //for(var i=0;i<len;i++){\n      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n      //}\n\n      case DOCUMENT_FRAGMENT_NODE:\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n        break;\n      //case ENTITY_REFERENCE_NODE:\n      //case PROCESSING_INSTRUCTION_NODE:\n      ////case TEXT_NODE:\n      //case CDATA_SECTION_NODE:\n      //case COMMENT_NODE:\n      //\tdeep = false;\n      //\tbreak;\n      //case DOCUMENT_NODE:\n      //case DOCUMENT_TYPE_NODE:\n      //cannot be imported.\n      //case ENTITY_NODE:\n      //case NOTATION_NODE：\n      //can not hit in level3\n      //default:throw e;\n    }\n\n    if (!node2) {\n      node2 = node.cloneNode(false); //false\n    }\n\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_importNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  } //\n  //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n  //\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n\n\n  function _cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n\n    for (var n in node) {\n      var v = node[n];\n\n      if (typeof v != 'object') {\n        if (v != node2[n]) {\n          node2[n] = v;\n        }\n      }\n    }\n\n    if (node.childNodes) {\n      node2.childNodes = new NodeList();\n    }\n\n    node2.ownerDocument = doc;\n\n    switch (node2.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var attrs2 = node2.attributes = new NamedNodeMap();\n        var len = attrs.length;\n        attrs2._ownerElement = node2;\n\n        for (var i = 0; i < len; i++) {\n          node2.setAttributeNode(_cloneNode(doc, attrs.item(i), true));\n        }\n\n        break;\n\n      case ATTRIBUTE_NODE:\n        deep = true;\n    }\n\n    if (deep) {\n      var child = node.firstChild;\n\n      while (child) {\n        node2.appendChild(_cloneNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n\n    return node2;\n  }\n\n  function __set__(object, key, value) {\n    object[key] = value;\n  } //do dynamic\n\n\n  try {\n    if (Object.defineProperty) {\n      var getTextContent = function getTextContent(node) {\n        switch (node.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            var buf = [];\n            node = node.firstChild;\n\n            while (node) {\n              if (node.nodeType !== 7 && node.nodeType !== 8) {\n                buf.push(getTextContent(node));\n              }\n\n              node = node.nextSibling;\n            }\n\n            return buf.join('');\n\n          default:\n            return node.nodeValue;\n        }\n      };\n\n      Object.defineProperty(LiveNodeList.prototype, 'length', {\n        get: function get() {\n          _updateLiveList(this);\n\n          return this.$$length;\n        }\n      });\n      Object.defineProperty(Node.prototype, 'textContent', {\n        get: function get() {\n          return getTextContent(this);\n        },\n        set: function set(data) {\n          switch (this.nodeType) {\n            case ELEMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              while (this.firstChild) {\n                this.removeChild(this.firstChild);\n              }\n\n              if (data || String(data)) {\n                this.appendChild(this.ownerDocument.createTextNode(data));\n              }\n\n              break;\n\n            default:\n              this.data = data;\n              this.value = data;\n              this.nodeValue = data;\n          }\n        }\n      });\n\n      __set__ = function __set__(object, key, value) {\n        //console.log(value)\n        object['$$' + key] = value;\n      };\n    }\n  } catch (e) {//ie8\n  } //if(typeof require == 'function'){\n\n\n  var DocumentType_1 = DocumentType;\n  var DOMException_1 = DOMException;\n  var DOMImplementation_1$1 = DOMImplementation$1;\n  var Element_1 = Element;\n  var Node_1 = Node;\n  var NodeList_1 = NodeList;\n  var XMLSerializer_1 = XMLSerializer$1; //}\n\n  var dom = {\n    DocumentType: DocumentType_1,\n    DOMException: DOMException_1,\n    DOMImplementation: DOMImplementation_1$1,\n    Element: Element_1,\n    Node: Node_1,\n    NodeList: NodeList_1,\n    XMLSerializer: XMLSerializer_1\n  };\n\n  var entities = createCommonjsModule(function (module, exports) {\n    var freeze = conventions.freeze;\n    /**\n     * The entities that are predefined in every XML document.\n     *\n     * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n     * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n     */\n\n    exports.XML_ENTITIES = freeze({\n      amp: '&',\n      apos: \"'\",\n      gt: '>',\n      lt: '<',\n      quot: '\"'\n    });\n    /**\n     * A map of currently 241 entities that are detected in an HTML document.\n     * They contain all entries from `XML_ENTITIES`.\n     *\n     * @see XML_ENTITIES\n     * @see DOMParser.parseFromString\n     * @see DOMImplementation.prototype.createHTMLDocument\n     * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n     * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n     * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n     */\n\n    exports.HTML_ENTITIES = freeze({\n      lt: '<',\n      gt: '>',\n      amp: '&',\n      quot: '\"',\n      apos: \"'\",\n      Agrave: \"À\",\n      Aacute: \"Á\",\n      Acirc: \"Â\",\n      Atilde: \"Ã\",\n      Auml: \"Ä\",\n      Aring: \"Å\",\n      AElig: \"Æ\",\n      Ccedil: \"Ç\",\n      Egrave: \"È\",\n      Eacute: \"É\",\n      Ecirc: \"Ê\",\n      Euml: \"Ë\",\n      Igrave: \"Ì\",\n      Iacute: \"Í\",\n      Icirc: \"Î\",\n      Iuml: \"Ï\",\n      ETH: \"Ð\",\n      Ntilde: \"Ñ\",\n      Ograve: \"Ò\",\n      Oacute: \"Ó\",\n      Ocirc: \"Ô\",\n      Otilde: \"Õ\",\n      Ouml: \"Ö\",\n      Oslash: \"Ø\",\n      Ugrave: \"Ù\",\n      Uacute: \"Ú\",\n      Ucirc: \"Û\",\n      Uuml: \"Ü\",\n      Yacute: \"Ý\",\n      THORN: \"Þ\",\n      szlig: \"ß\",\n      agrave: \"à\",\n      aacute: \"á\",\n      acirc: \"â\",\n      atilde: \"ã\",\n      auml: \"ä\",\n      aring: \"å\",\n      aelig: \"æ\",\n      ccedil: \"ç\",\n      egrave: \"è\",\n      eacute: \"é\",\n      ecirc: \"ê\",\n      euml: \"ë\",\n      igrave: \"ì\",\n      iacute: \"í\",\n      icirc: \"î\",\n      iuml: \"ï\",\n      eth: \"ð\",\n      ntilde: \"ñ\",\n      ograve: \"ò\",\n      oacute: \"ó\",\n      ocirc: \"ô\",\n      otilde: \"õ\",\n      ouml: \"ö\",\n      oslash: \"ø\",\n      ugrave: \"ù\",\n      uacute: \"ú\",\n      ucirc: \"û\",\n      uuml: \"ü\",\n      yacute: \"ý\",\n      thorn: \"þ\",\n      yuml: \"ÿ\",\n      nbsp: \"\\xA0\",\n      iexcl: \"¡\",\n      cent: \"¢\",\n      pound: \"£\",\n      curren: \"¤\",\n      yen: \"¥\",\n      brvbar: \"¦\",\n      sect: \"§\",\n      uml: \"¨\",\n      copy: \"©\",\n      ordf: \"ª\",\n      laquo: \"«\",\n      not: \"¬\",\n      shy: \"­­\",\n      reg: \"®\",\n      macr: \"¯\",\n      deg: \"°\",\n      plusmn: \"±\",\n      sup2: \"²\",\n      sup3: \"³\",\n      acute: \"´\",\n      micro: \"µ\",\n      para: \"¶\",\n      middot: \"·\",\n      cedil: \"¸\",\n      sup1: \"¹\",\n      ordm: \"º\",\n      raquo: \"»\",\n      frac14: \"¼\",\n      frac12: \"½\",\n      frac34: \"¾\",\n      iquest: \"¿\",\n      times: \"×\",\n      divide: \"÷\",\n      forall: \"∀\",\n      part: \"∂\",\n      exist: \"∃\",\n      empty: \"∅\",\n      nabla: \"∇\",\n      isin: \"∈\",\n      notin: \"∉\",\n      ni: \"∋\",\n      prod: \"∏\",\n      sum: \"∑\",\n      minus: \"−\",\n      lowast: \"∗\",\n      radic: \"√\",\n      prop: \"∝\",\n      infin: \"∞\",\n      ang: \"∠\",\n      and: \"∧\",\n      or: \"∨\",\n      cap: \"∩\",\n      cup: \"∪\",\n      'int': \"∫\",\n      there4: \"∴\",\n      sim: \"∼\",\n      cong: \"≅\",\n      asymp: \"≈\",\n      ne: \"≠\",\n      equiv: \"≡\",\n      le: \"≤\",\n      ge: \"≥\",\n      sub: \"⊂\",\n      sup: \"⊃\",\n      nsub: \"⊄\",\n      sube: \"⊆\",\n      supe: \"⊇\",\n      oplus: \"⊕\",\n      otimes: \"⊗\",\n      perp: \"⊥\",\n      sdot: \"⋅\",\n      Alpha: \"Α\",\n      Beta: \"Β\",\n      Gamma: \"Γ\",\n      Delta: \"Δ\",\n      Epsilon: \"Ε\",\n      Zeta: \"Ζ\",\n      Eta: \"Η\",\n      Theta: \"Θ\",\n      Iota: \"Ι\",\n      Kappa: \"Κ\",\n      Lambda: \"Λ\",\n      Mu: \"Μ\",\n      Nu: \"Ν\",\n      Xi: \"Ξ\",\n      Omicron: \"Ο\",\n      Pi: \"Π\",\n      Rho: \"Ρ\",\n      Sigma: \"Σ\",\n      Tau: \"Τ\",\n      Upsilon: \"Υ\",\n      Phi: \"Φ\",\n      Chi: \"Χ\",\n      Psi: \"Ψ\",\n      Omega: \"Ω\",\n      alpha: \"α\",\n      beta: \"β\",\n      gamma: \"γ\",\n      delta: \"δ\",\n      epsilon: \"ε\",\n      zeta: \"ζ\",\n      eta: \"η\",\n      theta: \"θ\",\n      iota: \"ι\",\n      kappa: \"κ\",\n      lambda: \"λ\",\n      mu: \"μ\",\n      nu: \"ν\",\n      xi: \"ξ\",\n      omicron: \"ο\",\n      pi: \"π\",\n      rho: \"ρ\",\n      sigmaf: \"ς\",\n      sigma: \"σ\",\n      tau: \"τ\",\n      upsilon: \"υ\",\n      phi: \"φ\",\n      chi: \"χ\",\n      psi: \"ψ\",\n      omega: \"ω\",\n      thetasym: \"ϑ\",\n      upsih: \"ϒ\",\n      piv: \"ϖ\",\n      OElig: \"Œ\",\n      oelig: \"œ\",\n      Scaron: \"Š\",\n      scaron: \"š\",\n      Yuml: \"Ÿ\",\n      fnof: \"ƒ\",\n      circ: \"ˆ\",\n      tilde: \"˜\",\n      ensp: \" \",\n      emsp: \" \",\n      thinsp: \" \",\n      zwnj: \"‌\",\n      zwj: \"‍\",\n      lrm: \"‎\",\n      rlm: \"‏\",\n      ndash: \"–\",\n      mdash: \"—\",\n      lsquo: \"‘\",\n      rsquo: \"’\",\n      sbquo: \"‚\",\n      ldquo: \"“\",\n      rdquo: \"”\",\n      bdquo: \"„\",\n      dagger: \"†\",\n      Dagger: \"‡\",\n      bull: \"•\",\n      hellip: \"…\",\n      permil: \"‰\",\n      prime: \"′\",\n      Prime: \"″\",\n      lsaquo: \"‹\",\n      rsaquo: \"›\",\n      oline: \"‾\",\n      euro: \"€\",\n      trade: \"™\",\n      larr: \"←\",\n      uarr: \"↑\",\n      rarr: \"→\",\n      darr: \"↓\",\n      harr: \"↔\",\n      crarr: \"↵\",\n      lceil: \"⌈\",\n      rceil: \"⌉\",\n      lfloor: \"⌊\",\n      rfloor: \"⌋\",\n      loz: \"◊\",\n      spades: \"♠\",\n      clubs: \"♣\",\n      hearts: \"♥\",\n      diams: \"♦\"\n    });\n    /**\n     * @deprecated use `HTML_ENTITIES` instead\n     * @see HTML_ENTITIES\n     */\n\n    exports.entityMap = exports.HTML_ENTITIES;\n  });\n  entities.XML_ENTITIES;\n  entities.HTML_ENTITIES;\n  entities.entityMap;\n\n  var NAMESPACE$1 = conventions.NAMESPACE; //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n  //[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n\n  var nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n\n  var nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\n  var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$'); //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n  //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n  //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n  //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\n  var S_TAG = 0; //tag name offerring\n\n  var S_ATTR = 1; //attr name offerring \n\n  var S_ATTR_SPACE = 2; //attr name end and space offer\n\n  var S_EQ = 3; //=space?\n\n  var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n\n  var S_ATTR_END = 5; //attr value end and no space(quot end)\n\n  var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n\n  var S_TAG_CLOSE = 7; //closed el<el />\n\n  /**\n   * Creates an error that will not be caught by XMLReader aka the SAX parser.\n   *\n   * @param {string} message\n   * @param {any?} locator Optional, can provide details about the location in the source\n   * @constructor\n   */\n\n  function ParseError$1(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);\n  }\n\n  ParseError$1.prototype = new Error();\n  ParseError$1.prototype.name = ParseError$1.name;\n\n  function XMLReader$1() {}\n\n  XMLReader$1.prototype = {\n    parse: function parse(source, defaultNSMap, entityMap) {\n      var domBuilder = this.domBuilder;\n      domBuilder.startDocument();\n\n      _copy(defaultNSMap, defaultNSMap = {});\n\n      _parse(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n\n      domBuilder.endDocument();\n    }\n  };\n\n  function _parse(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n      // String.prototype.fromCharCode does not supports\n      // > 2 bytes unicode chars directly\n      if (code > 0xffff) {\n        code -= 0x10000;\n        var surrogate1 = 0xd800 + (code >> 10),\n            surrogate2 = 0xdc00 + (code & 0x3ff);\n        return String.fromCharCode(surrogate1, surrogate2);\n      } else {\n        return String.fromCharCode(code);\n      }\n    }\n\n    function entityReplacer(a) {\n      var k = a.slice(1, -1);\n\n      if (k in entityMap) {\n        return entityMap[k];\n      } else if (k.charAt(0) === '#') {\n        return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n      } else {\n        errorHandler.error('entity not found:' + a);\n        return a;\n      }\n    }\n\n    function appendText(end) {\n      //has some bugs\n      if (end > start) {\n        var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n        locator && position(start);\n        domBuilder.characters(xt, 0, end - start);\n        start = end;\n      }\n    }\n\n    function position(p, m) {\n      while (p >= lineEnd && (m = linePattern.exec(source))) {\n        lineStart = m.index;\n        lineEnd = lineStart + m[0].length;\n        locator.lineNumber++; //console.log('line++:',locator,startPos,endPos)\n      }\n\n      locator.columnNumber = p - lineStart + 1;\n    }\n\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [{\n      currentNSMap: defaultNSMapCopy\n    }];\n    var closeMap = {};\n    var start = 0;\n\n    while (true) {\n      try {\n        var tagStart = source.indexOf('<', start);\n\n        if (tagStart < 0) {\n          if (!source.substr(start).match(/^\\s*$/)) {\n            var doc = domBuilder.doc;\n            var text = doc.createTextNode(source.substr(start));\n            doc.appendChild(text);\n            domBuilder.currentElement = text;\n          }\n\n          return;\n        }\n\n        if (tagStart > start) {\n          appendText(tagStart);\n        }\n\n        switch (source.charAt(tagStart + 1)) {\n          case '/':\n            var end = source.indexOf('>', tagStart + 3);\n            var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n            var config = parseStack.pop();\n\n            if (end < 0) {\n              tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n              end = tagStart + 1 + tagName.length;\n            } else if (tagName.match(/\\s</)) {\n              tagName = tagName.replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n              end = tagStart + 1 + tagName.length;\n            }\n\n            var localNSMap = config.localNSMap;\n            var endMatch = config.tagName == tagName;\n            var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n\n            if (endIgnoreCaseMach) {\n              domBuilder.endElement(config.uri, config.localName, tagName);\n\n              if (localNSMap) {\n                for (var prefix in localNSMap) {\n                  domBuilder.endPrefixMapping(prefix);\n                }\n              }\n\n              if (!endMatch) {\n                errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n              }\n            } else {\n              parseStack.push(config);\n            }\n\n            end++;\n            break;\n          // end elment\n\n          case '?':\n            // <?...?>\n            locator && position(tagStart);\n            end = parseInstruction(source, tagStart, domBuilder);\n            break;\n\n          case '!':\n            // <!doctype,<![CDATA,<!--\n            locator && position(tagStart);\n            end = parseDCC(source, tagStart, domBuilder, errorHandler);\n            break;\n\n          default:\n            locator && position(tagStart);\n            var el = new ElementAttributes();\n            var currentNSMap = parseStack[parseStack.length - 1].currentNSMap; //elStartEnd\n\n            var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n            var len = el.length;\n\n            if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n              el.closed = true;\n\n              if (!entityMap.nbsp) {\n                errorHandler.warning('unclosed xml attribute');\n              }\n            }\n\n            if (locator && len) {\n              var locator2 = copyLocator(locator, {}); //try{//attribute position fixed\n\n              for (var i = 0; i < len; i++) {\n                var a = el[i];\n                position(a.offset);\n                a.locator = copyLocator(locator, {});\n              }\n\n              domBuilder.locator = locator2;\n\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n\n              domBuilder.locator = locator;\n            } else {\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n            }\n\n            if (NAMESPACE$1.isHTML(el.uri) && !el.closed) {\n              end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n            } else {\n              end++;\n            }\n\n        }\n      } catch (e) {\n        if (e instanceof ParseError$1) {\n          throw e;\n        }\n\n        errorHandler.error('element parse error: ' + e);\n        end = -1;\n      }\n\n      if (end > start) {\n        start = end;\n      } else {\n        //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n      }\n    }\n  }\n\n  function copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n  }\n  /**\n   * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n   * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n   */\n\n\n  function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n     * @param {string} qname\n     * @param {string} value\n     * @param {number} startIndex\n     */\n    function addAttribute(qname, value, startIndex) {\n      if (el.attributeNames.hasOwnProperty(qname)) {\n        errorHandler.fatalError('Attribute ' + qname + ' redefined');\n      }\n\n      el.addValue(qname, value, startIndex);\n    }\n\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = S_TAG; //status\n\n    while (true) {\n      var c = source.charAt(p);\n\n      switch (c) {\n        case '=':\n          if (s === S_ATTR) {\n            //attrName\n            attrName = source.slice(start, p);\n            s = S_EQ;\n          } else if (s === S_ATTR_SPACE) {\n            s = S_EQ;\n          } else {\n            //fatalError: equal must after attrName or space after attrName\n            throw new Error('attribute equal must after attrName'); // No known test case\n          }\n\n          break;\n\n        case '\\'':\n        case '\"':\n          if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n          ) {\n              //equal\n              if (s === S_ATTR) {\n                errorHandler.warning('attribute value must after \"=\"');\n                attrName = source.slice(start, p);\n              }\n\n              start = p + 1;\n              p = source.indexOf(c, start);\n\n              if (p > 0) {\n                value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                addAttribute(attrName, value, start - 1);\n                s = S_ATTR_END;\n              } else {\n                //fatalError: no end quot match\n                throw new Error('attribute value no end \\'' + c + '\\' match');\n              }\n            } else if (s == S_ATTR_NOQUOT_VALUE) {\n            value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer); //console.log(attrName,value,start,p)\n\n            addAttribute(attrName, value, start); //console.dir(el)\n\n            errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n            start = p + 1;\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no equal before\n            throw new Error('attribute value must after \"=\"'); // No known test case\n          }\n\n          break;\n\n        case '/':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              s = S_TAG_CLOSE;\n              el.closed = true;\n\n            case S_ATTR_NOQUOT_VALUE:\n            case S_ATTR:\n            case S_ATTR_SPACE:\n              break;\n            //case S_EQ:\n\n            default:\n              throw new Error(\"attribute invalid close char('/')\");\n            // No known test case\n          }\n\n          break;\n\n        case '':\n          //end document\n          errorHandler.error('unexpected end of input');\n\n          if (s == S_TAG) {\n            el.setTagName(source.slice(start, p));\n          }\n\n          return p;\n\n        case '>':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              break;\n            //normal\n\n            case S_ATTR_NOQUOT_VALUE: //Compatible state\n\n            case S_ATTR:\n              value = source.slice(start, p);\n\n              if (value.slice(-1) === '/') {\n                el.closed = true;\n                value = value.slice(0, -1);\n              }\n\n            case S_ATTR_SPACE:\n              if (s === S_ATTR_SPACE) {\n                value = attrName;\n              }\n\n              if (s == S_ATTR_NOQUOT_VALUE) {\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                addAttribute(attrName, value.replace(/&#?\\w+;/g, entityReplacer), start);\n              } else {\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                }\n\n                addAttribute(value, value, start);\n              }\n\n              break;\n\n            case S_EQ:\n              throw new Error('attribute value missed!!');\n          } //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\n\n          return p;\n\n        /*xml space '\\x20' | #x9 | #xD | #xA; */\n\n        case \"\\x80\":\n          c = ' ';\n\n        default:\n          if (c <= ' ') {\n            //space\n            switch (s) {\n              case S_TAG:\n                el.setTagName(source.slice(start, p)); //tagName\n\n                s = S_TAG_SPACE;\n                break;\n\n              case S_ATTR:\n                attrName = source.slice(start, p);\n                s = S_ATTR_SPACE;\n                break;\n\n              case S_ATTR_NOQUOT_VALUE:\n                var value = source.slice(start, p).replace(/&#?\\w+;/g, entityReplacer);\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                addAttribute(attrName, value, start);\n\n              case S_ATTR_END:\n                s = S_TAG_SPACE;\n                break;\n              //case S_TAG_SPACE:\n              //case S_EQ:\n              //case S_ATTR_SPACE:\n              //\tvoid();break;\n              //case S_TAG_CLOSE:\n              //ignore warning\n            }\n          } else {\n            //not space\n            //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n            //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n            switch (s) {\n              //case S_TAG:void();break;\n              //case S_ATTR:void();break;\n              //case S_ATTR_NOQUOT_VALUE:void();break;\n              case S_ATTR_SPACE:\n                el.tagName;\n\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                }\n\n                addAttribute(attrName, attrName, start);\n                start = p;\n                s = S_ATTR;\n                break;\n\n              case S_ATTR_END:\n                errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n\n              case S_TAG_SPACE:\n                s = S_ATTR;\n                start = p;\n                break;\n\n              case S_EQ:\n                s = S_ATTR_NOQUOT_VALUE;\n                start = p;\n                break;\n\n              case S_TAG_CLOSE:\n                throw new Error(\"elements closed character '/' and '>' must be connected to\");\n            }\n          }\n\n      } //end outer switch\n      //console.log('p++',p)\n\n\n      p++;\n    }\n  }\n  /**\n   * @return true if has new namespace define\n   */\n\n\n  function appendElement$1(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null; //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\n    var i = el.length;\n\n    while (i--) {\n      var a = el[i];\n      var qName = a.qName;\n      var value = a.value;\n      var nsp = qName.indexOf(':');\n\n      if (nsp > 0) {\n        var prefix = a.prefix = qName.slice(0, nsp);\n        var localName = qName.slice(nsp + 1);\n        var nsPrefix = prefix === 'xmlns' && localName;\n      } else {\n        localName = qName;\n        prefix = null;\n        nsPrefix = qName === 'xmlns' && '';\n      } //can not set prefix,because prefix !== ''\n\n\n      a.localName = localName; //prefix == null for no ns prefix attribute \n\n      if (nsPrefix !== false) {\n        //hack!!\n        if (localNSMap == null) {\n          localNSMap = {}; //console.log(currentNSMap,0)\n\n          _copy(currentNSMap, currentNSMap = {}); //console.log(currentNSMap,1)\n\n        }\n\n        currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n        a.uri = NAMESPACE$1.XMLNS;\n        domBuilder.startPrefixMapping(nsPrefix, value);\n      }\n    }\n\n    var i = el.length;\n\n    while (i--) {\n      a = el[i];\n      var prefix = a.prefix;\n\n      if (prefix) {\n        //no prefix attribute has no namespace\n        if (prefix === 'xml') {\n          a.uri = NAMESPACE$1.XML;\n        }\n\n        if (prefix !== 'xmlns') {\n          a.uri = currentNSMap[prefix || '']; //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n        }\n      }\n    }\n\n    var nsp = tagName.indexOf(':');\n\n    if (nsp > 0) {\n      prefix = el.prefix = tagName.slice(0, nsp);\n      localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n      prefix = null; //important!!\n\n      localName = el.localName = tagName;\n    } //no prefix element has default namespace\n\n\n    var ns = el.uri = currentNSMap[prefix || ''];\n    domBuilder.startElement(ns, localName, tagName, el); //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n\n    if (el.closed) {\n      domBuilder.endElement(ns, localName, tagName);\n\n      if (localNSMap) {\n        for (prefix in localNSMap) {\n          domBuilder.endPrefixMapping(prefix);\n        }\n      }\n    } else {\n      el.currentNSMap = currentNSMap;\n      el.localNSMap = localNSMap; //parseStack.push(el);\n\n      return true;\n    }\n  }\n\n  function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n      var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n      var text = source.substring(elStartEnd + 1, elEndStart);\n\n      if (/[&<]/.test(text)) {\n        if (/^script$/i.test(tagName)) {\n          //if(!/\\]\\]>/.test(text)){\n          //lexHandler.startCDATA();\n          domBuilder.characters(text, 0, text.length); //lexHandler.endCDATA();\n\n          return elEndStart; //}\n        } //}else{//text area\n\n\n        text = text.replace(/&#?\\w+;/g, entityReplacer);\n        domBuilder.characters(text, 0, text.length);\n        return elEndStart; //}\n      }\n    }\n\n    return elStartEnd + 1;\n  }\n\n  function fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n\n    if (pos == null) {\n      //console.log(tagName)\n      pos = source.lastIndexOf('</' + tagName + '>');\n\n      if (pos < elStartEnd) {\n        //忘记闭合\n        pos = source.lastIndexOf('</' + tagName);\n      }\n\n      closeMap[tagName] = pos;\n    }\n\n    return pos < elStartEnd; //} \n  }\n\n  function _copy(source, target) {\n    for (var n in source) {\n      target[n] = source[n];\n    }\n  }\n\n  function parseDCC(source, start, domBuilder, errorHandler) {\n    //sure start with '<!'\n    var next = source.charAt(start + 2);\n\n    switch (next) {\n      case '-':\n        if (source.charAt(start + 3) === '-') {\n          var end = source.indexOf('-->', start + 4); //append comment source.substring(4,end)//<!--\n\n          if (end > start) {\n            domBuilder.comment(source, start + 4, end - start - 4);\n            return end + 3;\n          } else {\n            errorHandler.error(\"Unclosed comment\");\n            return -1;\n          }\n        } else {\n          //error\n          return -1;\n        }\n\n      default:\n        if (source.substr(start + 3, 6) == 'CDATA[') {\n          var end = source.indexOf(']]>', start + 9);\n          domBuilder.startCDATA();\n          domBuilder.characters(source, start + 9, end - start - 9);\n          domBuilder.endCDATA();\n          return end + 3;\n        } //<!DOCTYPE\n        //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) \n\n\n        var matchs = split(source, start);\n        var len = matchs.length;\n\n        if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n          var name = matchs[1][0];\n          var pubid = false;\n          var sysid = false;\n\n          if (len > 3) {\n            if (/^public$/i.test(matchs[2][0])) {\n              pubid = matchs[3][0];\n              sysid = len > 4 && matchs[4][0];\n            } else if (/^system$/i.test(matchs[2][0])) {\n              sysid = matchs[3][0];\n            }\n          }\n\n          var lastMatch = matchs[len - 1];\n          domBuilder.startDTD(name, pubid, sysid);\n          domBuilder.endDTD();\n          return lastMatch.index + lastMatch[0].length;\n        }\n\n    }\n\n    return -1;\n  }\n\n  function parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf('?>', start);\n\n    if (end) {\n      var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\n      if (match) {\n        match[0].length;\n        domBuilder.processingInstruction(match[1], match[2]);\n        return end + 2;\n      } else {\n        //error\n        return -1;\n      }\n    }\n\n    return -1;\n  }\n\n  function ElementAttributes() {\n    this.attributeNames = {};\n  }\n\n  ElementAttributes.prototype = {\n    setTagName: function setTagName(tagName) {\n      if (!tagNamePattern.test(tagName)) {\n        throw new Error('invalid tagName:' + tagName);\n      }\n\n      this.tagName = tagName;\n    },\n    addValue: function addValue(qName, value, offset) {\n      if (!tagNamePattern.test(qName)) {\n        throw new Error('invalid attribute:' + qName);\n      }\n\n      this.attributeNames[qName] = this.length;\n      this[this.length++] = {\n        qName: qName,\n        value: value,\n        offset: offset\n      };\n    },\n    length: 0,\n    getLocalName: function getLocalName(i) {\n      return this[i].localName;\n    },\n    getLocator: function getLocator(i) {\n      return this[i].locator;\n    },\n    getQName: function getQName(i) {\n      return this[i].qName;\n    },\n    getURI: function getURI(i) {\n      return this[i].uri;\n    },\n    getValue: function getValue(i) {\n      return this[i].value;\n    } //\t,getIndex:function(uri, localName)){\n    //\t\tif(localName){\n    //\t\t\t\n    //\t\t}else{\n    //\t\t\tvar qName = uri\n    //\t\t}\n    //\t},\n    //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n    //\tgetType:function(uri,localName){}\n    //\tgetType:function(i){},\n\n  };\n\n  function split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n\n    while (match = reg.exec(source)) {\n      buf.push(match);\n      if (match[1]) return buf;\n    }\n  }\n\n  var XMLReader_1 = XMLReader$1;\n  var ParseError_1 = ParseError$1;\n  var sax = {\n    XMLReader: XMLReader_1,\n    ParseError: ParseError_1\n  };\n\n  var DOMImplementation = dom.DOMImplementation;\n  var NAMESPACE = conventions.NAMESPACE;\n  var ParseError = sax.ParseError;\n  var XMLReader = sax.XMLReader;\n\n  function DOMParser$1(options) {\n    this.options = options || {\n      locator: {}\n    };\n  }\n\n  DOMParser$1.prototype.parseFromString = function (source, mimeType) {\n    var options = this.options;\n    var sax = new XMLReader();\n    var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n\n    var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\n    if (locator) {\n      domBuilder.setDocumentLocator(locator);\n    }\n\n    sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n\n    if (isHTML) {\n      defaultNSMap[''] = NAMESPACE.HTML;\n    }\n\n    defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\n    if (source && typeof source === 'string') {\n      sax.parse(source, defaultNSMap, entityMap);\n    } else {\n      sax.errorHandler.error(\"invalid doc source\");\n    }\n\n    return domBuilder.doc;\n  };\n\n  function buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n      if (domBuilder instanceof DOMHandler) {\n        return domBuilder;\n      }\n\n      errorImpl = domBuilder;\n    }\n\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n\n    function build(key) {\n      var fn = errorImpl[key];\n\n      if (!fn && isCallback) {\n        fn = errorImpl.length == 2 ? function (msg) {\n          errorImpl(key, msg);\n        } : errorImpl;\n      }\n\n      errorHandler[key] = fn && function (msg) {\n        fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n      } || function () {};\n    }\n\n    build('warning');\n    build('error');\n    build('fatalError');\n    return errorHandler;\n  } //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n\n  /**\n   * +ContentHandler+ErrorHandler\n   * +LexicalHandler+EntityResolver2\n   * -DeclHandler-DTDHandler\n   *\n   * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n   * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n   */\n\n\n  function DOMHandler() {\n    this.cdata = false;\n  }\n\n  function position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n  }\n  /**\n   * @see org.xml.sax.ContentHandler#startDocument\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n   */\n\n\n  DOMHandler.prototype = {\n    startDocument: function startDocument() {\n      this.doc = new DOMImplementation().createDocument(null, null, null);\n\n      if (this.locator) {\n        this.doc.documentURI = this.locator.systemId;\n      }\n    },\n    startElement: function startElement(namespaceURI, localName, qName, attrs) {\n      var doc = this.doc;\n      var el = doc.createElementNS(namespaceURI, qName || localName);\n      var len = attrs.length;\n      appendElement(this, el);\n      this.currentElement = el;\n      this.locator && position(this.locator, el);\n\n      for (var i = 0; i < len; i++) {\n        var namespaceURI = attrs.getURI(i);\n        var value = attrs.getValue(i);\n        var qName = attrs.getQName(i);\n        var attr = doc.createAttributeNS(namespaceURI, qName);\n        this.locator && position(attrs.getLocator(i), attr);\n        attr.value = attr.nodeValue = value;\n        el.setAttributeNode(attr);\n      }\n    },\n    endElement: function endElement(namespaceURI, localName, qName) {\n      var current = this.currentElement;\n      current.tagName;\n      this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function startPrefixMapping(prefix, uri) {},\n    endPrefixMapping: function endPrefixMapping(prefix) {},\n    processingInstruction: function processingInstruction(target, data) {\n      var ins = this.doc.createProcessingInstruction(target, data);\n      this.locator && position(this.locator, ins);\n      appendElement(this, ins);\n    },\n    ignorableWhitespace: function ignorableWhitespace(ch, start, length) {},\n    characters: function characters(chars, start, length) {\n      chars = _toString.apply(this, arguments); //console.log(chars)\n\n      if (chars) {\n        if (this.cdata) {\n          var charNode = this.doc.createCDATASection(chars);\n        } else {\n          var charNode = this.doc.createTextNode(chars);\n        }\n\n        if (this.currentElement) {\n          this.currentElement.appendChild(charNode);\n        } else if (/^\\s*$/.test(chars)) {\n          this.doc.appendChild(charNode); //process xml\n        }\n\n        this.locator && position(this.locator, charNode);\n      }\n    },\n    skippedEntity: function skippedEntity(name) {},\n    endDocument: function endDocument() {\n      this.doc.normalize();\n    },\n    setDocumentLocator: function setDocumentLocator(locator) {\n      if (this.locator = locator) {\n        // && !('lineNumber' in locator)){\n        locator.lineNumber = 0;\n      }\n    },\n    //LexicalHandler\n    comment: function comment(chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      var comm = this.doc.createComment(chars);\n      this.locator && position(this.locator, comm);\n      appendElement(this, comm);\n    },\n    startCDATA: function startCDATA() {\n      //used in characters() methods\n      this.cdata = true;\n    },\n    endCDATA: function endCDATA() {\n      this.cdata = false;\n    },\n    startDTD: function startDTD(name, publicId, systemId) {\n      var impl = this.doc.implementation;\n\n      if (impl && impl.createDocumentType) {\n        var dt = impl.createDocumentType(name, publicId, systemId);\n        this.locator && position(this.locator, dt);\n        appendElement(this, dt);\n        this.doc.doctype = dt;\n      }\n    },\n\n    /**\n     * @see org.xml.sax.ErrorHandler\n     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n     */\n    warning: function warning(error) {\n      console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n    },\n    error: function error(_error) {\n      console.error('[xmldom error]\\t' + _error, _locator(this.locator));\n    },\n    fatalError: function fatalError(error) {\n      throw new ParseError(error, this.locator);\n    }\n  };\n\n  function _locator(l) {\n    if (l) {\n      return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n    }\n  }\n\n  function _toString(chars, start, length) {\n    if (typeof chars == 'string') {\n      return chars.substr(start, length);\n    } else {\n      //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n      if (chars.length >= start + length || start) {\n        return new java.lang.String(chars, start, length) + '';\n      }\n\n      return chars;\n    }\n  }\n  /*\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n   * used method of org.xml.sax.ext.LexicalHandler:\n   *  #comment(chars, start, length)\n   *  #startCDATA()\n   *  #endCDATA()\n   *  #startDTD(name, publicId, systemId)\n   *\n   *\n   * IGNORED method of org.xml.sax.ext.LexicalHandler:\n   *  #endDTD()\n   *  #startEntity(name)\n   *  #endEntity(name)\n   *\n   *\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n   * IGNORED method of org.xml.sax.ext.DeclHandler\n   * \t#attributeDecl(eName, aName, type, mode, value)\n   *  #elementDecl(name, model)\n   *  #externalEntityDecl(name, publicId, systemId)\n   *  #internalEntityDecl(name, value)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n   * IGNORED method of org.xml.sax.EntityResolver2\n   *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n   *  #resolveEntity(publicId, systemId)\n   *  #getExternalSubset(name, baseURI)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n   * IGNORED method of org.xml.sax.DTDHandler\n   *  #notationDecl(name, publicId, systemId) {};\n   *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n   */\n\n\n  \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n    DOMHandler.prototype[key] = function () {\n      return null;\n    };\n  });\n  /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n\n  function appendElement(hander, node) {\n    if (!hander.currentElement) {\n      hander.doc.appendChild(node);\n    } else {\n      hander.currentElement.appendChild(node);\n    }\n  } //appendChild and setAttributeNS are preformance key\n\n\n  var __DOMHandler = DOMHandler;\n  var DOMParser_1 = DOMParser$1;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var DOMImplementation_1 = dom.DOMImplementation;\n  /**\n   * @deprecated Import/require from main entry point instead\n   */\n\n  var XMLSerializer = dom.XMLSerializer;\n  var domParser = {\n    __DOMHandler: __DOMHandler,\n    DOMParser: DOMParser_1,\n    DOMImplementation: DOMImplementation_1,\n    XMLSerializer: XMLSerializer\n  };\n\n  var DOMParser = domParser.DOMParser;\n\n  /*! @name mpd-parser @version 0.21.1 @license Apache-2.0 */\n\n  var isObject = function isObject(obj) {\n    return !!obj && typeof obj === 'object';\n  };\n\n  var merge = function merge() {\n    for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n      objects[_key] = arguments[_key];\n    }\n\n    return objects.reduce(function (result, source) {\n      if (typeof source !== 'object') {\n        return result;\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject(result[key]) && isObject(source[key])) {\n          result[key] = merge(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n\n  var values = function values(o) {\n    return Object.keys(o).map(function (k) {\n      return o[k];\n    });\n  };\n\n  var range = function range(start, end) {\n    var result = [];\n\n    for (var i = start; i < end; i++) {\n      result.push(i);\n    }\n\n    return result;\n  };\n\n  var flatten = function flatten(lists) {\n    return lists.reduce(function (x, y) {\n      return x.concat(y);\n    }, []);\n  };\n\n  var from = function from(list) {\n    if (!list.length) {\n      return [];\n    }\n\n    var result = [];\n\n    for (var i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n\n    return result;\n  };\n\n  var findIndexes = function findIndexes(l, key) {\n    return l.reduce(function (a, e, i) {\n      if (e[key]) {\n        a.push(i);\n      }\n\n      return a;\n    }, []);\n  };\n  /**\n   * Returns the first index that satisfies the matching function, or -1 if not found.\n   *\n   * Only necessary because of IE11 support.\n   *\n   * @param {Array} list - the list to search through\n   * @param {Function} matchingFunction - the matching function\n   *\n   * @return {number} the matching index or -1 if not found\n   */\n\n\n  var findIndex = function findIndex(list, matchingFunction) {\n    for (var i = 0; i < list.length; i++) {\n      if (matchingFunction(list[i])) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Returns a union of the included lists provided each element can be identified by a key.\n   *\n   * @param {Array} list - list of lists to get the union of\n   * @param {Function} keyFunction - the function to use as a key for each element\n   *\n   * @return {Array} the union of the arrays\n   */\n\n\n  var union = function union(lists, keyFunction) {\n    return values(lists.reduce(function (acc, list) {\n      list.forEach(function (el) {\n        acc[keyFunction(el)] = el;\n      });\n      return acc;\n    }, {}));\n  };\n\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls,\n   *   follows  RFC 2616, Clause 14.35.1\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n  var urlTypeToSegment = function urlTypeToSegment(_ref) {\n    var _ref$baseUrl = _ref.baseUrl,\n        baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n        _ref$source = _ref.source,\n        source = _ref$source === void 0 ? '' : _ref$source,\n        _ref$range = _ref.range,\n        range = _ref$range === void 0 ? '' : _ref$range,\n        _ref$indexRange = _ref.indexRange,\n        indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n    var segment = {\n      uri: source,\n      resolvedUri: resolveUrl$1(baseUrl || '', source)\n    };\n\n    if (range || indexRange) {\n      var rangeStr = range ? range : indexRange;\n      var ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n      var startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n      var endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n      if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n        startRange = Number(startRange);\n      }\n\n      if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n        endRange = Number(endRange);\n      }\n\n      var length;\n\n      if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n        length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n      } else {\n        length = endRange - startRange + 1;\n      }\n\n      if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n        length = Number(length);\n      } // byterange should be inclusive according to\n      // RFC 2616, Clause 14.35.1\n\n\n      segment.byterange = {\n        length: length,\n        offset: startRange\n      };\n    }\n\n    return segment;\n  };\n\n  var byteRangeToString = function byteRangeToString(byterange) {\n    // `endRange` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var endRange;\n\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      endRange = byterange.offset + byterange.length - 1;\n    }\n\n    return byterange.offset + \"-\" + endRange;\n  };\n  /**\n   * parse the end number attribue that can be a string\n   * number, or undefined.\n   *\n   * @param {string|number|undefined} endNumber\n   *        The end number attribute.\n   *\n   * @return {number|null}\n   *          The result of parsing the end number.\n   */\n\n\n  var parseEndNumber = function parseEndNumber(endNumber) {\n    if (endNumber && typeof endNumber !== 'number') {\n      endNumber = parseInt(endNumber, 10);\n    }\n\n    if (isNaN(endNumber)) {\n      return null;\n    }\n\n    return endNumber;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n\n  var segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    \"static\": function _static(attributes) {\n      var duration = attributes.duration,\n          _attributes$timescale = attributes.timescale,\n          timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n          sourceDuration = attributes.sourceDuration,\n          periodDuration = attributes.periodDuration;\n      var endNumber = parseEndNumber(attributes.endNumber);\n      var segmentDuration = duration / timescale;\n\n      if (typeof endNumber === 'number') {\n        return {\n          start: 0,\n          end: endNumber\n        };\n      }\n\n      if (typeof periodDuration === 'number') {\n        return {\n          start: 0,\n          end: periodDuration / segmentDuration\n        };\n      }\n\n      return {\n        start: 0,\n        end: sourceDuration / segmentDuration\n      };\n    },\n\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic: function dynamic(attributes) {\n      var NOW = attributes.NOW,\n          clientOffset = attributes.clientOffset,\n          availabilityStartTime = attributes.availabilityStartTime,\n          _attributes$timescale2 = attributes.timescale,\n          timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n          duration = attributes.duration,\n          _attributes$periodSta = attributes.periodStart,\n          periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n          _attributes$minimumUp = attributes.minimumUpdatePeriod,\n          minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n          _attributes$timeShift = attributes.timeShiftBufferDepth,\n          timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n      var endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n      // after retrieving UTC server time.\n\n      var now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n      // Convert the period start time to EPOCH.\n\n      var periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n      var periodEndWC = now + minimumUpdatePeriod;\n      var periodDuration = periodEndWC - periodStartWC;\n      var segmentCount = Math.ceil(periodDuration * timescale / duration);\n      var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  var toSegments = function toSegments(attributes) {\n    return function (number) {\n      var duration = attributes.duration,\n          _attributes$timescale3 = attributes.timescale,\n          timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n          periodStart = attributes.periodStart,\n          _attributes$startNumb = attributes.startNumber,\n          startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n      return {\n        number: startNumber + number,\n        duration: duration / timescale,\n        timeline: periodStart,\n        time: number * duration\n      };\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByDuration = function parseByDuration(attributes) {\n    var type = attributes.type,\n        duration = attributes.duration,\n        _attributes$timescale4 = attributes.timescale,\n        timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n        periodDuration = attributes.periodDuration,\n        sourceDuration = attributes.sourceDuration;\n\n    var _segmentRange$type = segmentRange[type](attributes),\n        start = _segmentRange$type.start,\n        end = _segmentRange$type.end;\n\n    var segments = range(start, end).map(toSegments(attributes));\n\n    if (type === 'static') {\n      var index = segments.length - 1; // section is either a period or the full source\n\n      var sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n      segments[index].duration = sectionDuration - duration / timescale * index;\n    }\n\n    return segments;\n  };\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromBase = function segmentsFromBase(attributes) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$indexRang = attributes.indexRange,\n        indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n        periodStart = attributes.periodStart,\n        presentationTime = attributes.presentationTime,\n        _attributes$number = attributes.number,\n        number = _attributes$number === void 0 ? 0 : _attributes$number,\n        duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: baseUrl,\n      indexRange: indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      var segmentTimeInfo = parseByDuration(attributes);\n\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration;\n      segment.timeline = periodStart;\n    } // If presentation time is provided, these segments are being generated by SIDX\n    // references, and should use the time provided. For the general case of SegmentBase,\n    // there should only be one segment in the period, so its presentation time is the same\n    // as its period start.\n\n\n    segment.presentationTime = presentationTime || periodStart;\n    segment.number = number;\n    return [segment];\n  };\n  /**\n   * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n   * according to the sidx information given.\n   *\n   * playlist.sidx has metadadata about the sidx where-as the sidx param\n   * is the parsed sidx box itself.\n   *\n   * @param {Object} playlist the playlist to update the sidx information for\n   * @param {Object} sidx the parsed sidx box\n   * @return {Object} the playlist object with the updated sidx information\n   */\n\n\n  var addSidxSegmentsToPlaylist$1 = function addSidxSegmentsToPlaylist(playlist, sidx, baseUrl) {\n    // Retain init segment information\n    var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n    var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n    var timeline = playlist.timeline || 0;\n    var sidxByteRange = playlist.sidx.byterange;\n    var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n    var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n    var mediaReferences = sidx.references.filter(function (r) {\n      return r.referenceType !== 1;\n    });\n    var segments = [];\n    var type = playlist.endList ? 'static' : 'dynamic';\n    var periodStart = playlist.sidx.timeline;\n    var presentationTime = periodStart;\n    var number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n    var startIndex; // eslint-disable-next-line\n\n    if (typeof sidx.firstOffset === 'bigint') {\n      startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n    } else {\n      startIndex = sidxEnd + sidx.firstOffset;\n    }\n\n    for (var i = 0; i < mediaReferences.length; i++) {\n      var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n      var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n      // this will be converted to seconds when generating segments\n\n      var duration = reference.subsegmentDuration; // should be an inclusive range\n\n      var endIndex = void 0; // eslint-disable-next-line\n\n      if (typeof startIndex === 'bigint') {\n        endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n      } else {\n        endIndex = startIndex + size - 1;\n      }\n\n      var indexRange = startIndex + \"-\" + endIndex;\n      var attributes = {\n        baseUrl: baseUrl,\n        timescale: timescale,\n        timeline: timeline,\n        periodStart: periodStart,\n        presentationTime: presentationTime,\n        number: number,\n        duration: duration,\n        sourceDuration: sourceDuration,\n        indexRange: indexRange,\n        type: type\n      };\n      var segment = segmentsFromBase(attributes)[0];\n\n      if (initSegment) {\n        segment.map = initSegment;\n      }\n\n      segments.push(segment);\n\n      if (typeof startIndex === 'bigint') {\n        startIndex += window.BigInt(size);\n      } else {\n        startIndex += size;\n      }\n\n      presentationTime += duration / timescale;\n      number++;\n    }\n\n    playlist.segments = segments;\n    return playlist;\n  };\n\n  var SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\n  var TIME_FUDGE = 1 / 60;\n  /**\n   * Given a list of timelineStarts, combines, dedupes, and sorts them.\n   *\n   * @param {TimelineStart[]} timelineStarts - list of timeline starts\n   *\n   * @return {TimelineStart[]} the combined and deduped timeline starts\n   */\n\n  var getUniqueTimelineStarts = function getUniqueTimelineStarts(timelineStarts) {\n    return union(timelineStarts, function (_ref) {\n      var timeline = _ref.timeline;\n      return timeline;\n    }).sort(function (a, b) {\n      return a.timeline > b.timeline ? 1 : -1;\n    });\n  };\n  /**\n   * Finds the playlist with the matching NAME attribute.\n   *\n   * @param {Array} playlists - playlists to search through\n   * @param {string} name - the NAME attribute to search for\n   *\n   * @return {Object|null} the matching playlist object, or null\n   */\n\n\n  var findPlaylistWithName = function findPlaylistWithName(playlists, name) {\n    for (var i = 0; i < playlists.length; i++) {\n      if (playlists[i].attributes.NAME === name) {\n        return playlists[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Gets a flattened array of media group playlists.\n   *\n   * @param {Object} manifest - the main manifest object\n   *\n   * @return {Array} the media group playlists\n   */\n\n\n  var getMediaGroupPlaylists = function getMediaGroupPlaylists(manifest) {\n    var mediaGroupPlaylists = [];\n    forEachMediaGroup$1(manifest, SUPPORTED_MEDIA_TYPES, function (properties, type, group, label) {\n      mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n    });\n    return mediaGroupPlaylists;\n  };\n  /**\n   * Updates the playlist's media sequence numbers.\n   *\n   * @param {Object} config - options object\n   * @param {Object} config.playlist - the playlist to update\n   * @param {number} config.mediaSequence - the mediaSequence number to start with\n   */\n\n\n  var updateMediaSequenceForPlaylist = function updateMediaSequenceForPlaylist(_ref2) {\n    var playlist = _ref2.playlist,\n        mediaSequence = _ref2.mediaSequence;\n    playlist.mediaSequence = mediaSequence;\n    playlist.segments.forEach(function (segment, index) {\n      segment.number = playlist.mediaSequence + index;\n    });\n  };\n  /**\n   * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n   * and a complete list of timeline starts.\n   *\n   * If no matching playlist is found, only the discontinuity sequence number of the playlist\n   * will be updated.\n   *\n   * Since early available timelines are not supported, at least one segment must be present.\n   *\n   * @param {Object} config - options object\n   * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n   * @param {Object[]} newPlaylists - the new playlists to update\n   * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n   */\n\n\n  var updateSequenceNumbers = function updateSequenceNumbers(_ref3) {\n    var oldPlaylists = _ref3.oldPlaylists,\n        newPlaylists = _ref3.newPlaylists,\n        timelineStarts = _ref3.timelineStarts;\n    newPlaylists.forEach(function (playlist) {\n      playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref4) {\n        var timeline = _ref4.timeline;\n        return timeline === playlist.timeline;\n      }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n      // (see ISO_23009-1-2012 5.3.5.2).\n      //\n      // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n      var oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n      if (!oldPlaylist) {\n        // Since this is a new playlist, the media sequence values can start from 0 without\n        // consequence.\n        return;\n      } // TODO better support for live SIDX\n      //\n      // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n      // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n      // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n      // not supported when the SIDX properties change on refreshes.\n      //\n      // In the future, if support needs to be added, the merging logic here can be called\n      // after SIDX references are resolved. For now, exit early to prevent exceptions being\n      // thrown due to undefined references.\n\n\n      if (playlist.sidx) {\n        return;\n      } // Since we don't yet support early available timelines, we don't need to support\n      // playlists with no segments.\n\n\n      var firstNewSegment = playlist.segments[0];\n      var oldMatchingSegmentIndex = findIndex(oldPlaylist.segments, function (oldSegment) {\n        return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n      }); // No matching segment from the old playlist means the entire playlist was refreshed.\n      // In this case the media sequence should account for this update, and the new segments\n      // should be marked as discontinuous from the prior content, since the last prior\n      // timeline was removed.\n\n      if (oldMatchingSegmentIndex === -1) {\n        updateMediaSequenceForPlaylist({\n          playlist: playlist,\n          mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n        });\n        playlist.segments[0].discontinuity = true;\n        playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n        //\n        // If the new playlist's timeline is the same as the last seen segment's timeline,\n        // then a discontinuity can be added to identify that there's potentially missing\n        // content. If there's no missing content, the discontinuity should still be rather\n        // harmless. It's possible that if segment durations are accurate enough, that the\n        // existence of a gap can be determined using the presentation times and durations,\n        // but if the segment timing info is off, it may introduce more problems than simply\n        // adding the discontinuity.\n        //\n        // If the new playlist's timeline is different from the last seen segment's timeline,\n        // then a discontinuity can be added to identify that this is the first seen segment\n        // of a new timeline. However, the logic at the start of this function that\n        // determined the disconinuity sequence by timeline index is now off by one (the\n        // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n        // we added it), so the disconinuity sequence must be decremented.\n        //\n        // A period may also have a duration of zero, so the case of no segments is handled\n        // here even though we don't yet support early available periods.\n\n        if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n          playlist.discontinuitySequence--;\n        }\n\n        return;\n      } // If the first segment matched with a prior segment on a discontinuity (it's matching\n      // on the first segment of a period), then the discontinuitySequence shouldn't be the\n      // timeline's matching one, but instead should be the one prior, and the first segment\n      // of the new manifest should be marked with a discontinuity.\n      //\n      // The reason for this special case is that discontinuity sequence shows how many\n      // discontinuities have fallen off of the playlist, and discontinuities are marked on\n      // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n      // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n      // sequence, and that first segment is an indicator, but can be removed before that\n      // timeline is gone.\n\n\n      var oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n      if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n        firstNewSegment.discontinuity = true;\n        playlist.discontinuityStarts.unshift(0);\n        playlist.discontinuitySequence--;\n      }\n\n      updateMediaSequenceForPlaylist({\n        playlist: playlist,\n        mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n      });\n    });\n  };\n  /**\n   * Given an old parsed manifest object and a new parsed manifest object, updates the\n   * sequence and timing values within the new manifest to ensure that it lines up with the\n   * old.\n   *\n   * @param {Array} oldManifest - the old main manifest object\n   * @param {Array} newManifest - the new main manifest object\n   *\n   * @return {Object} the updated new manifest object\n   */\n\n\n  var positionManifestOnTimeline = function positionManifestOnTimeline(_ref5) {\n    var oldManifest = _ref5.oldManifest,\n        newManifest = _ref5.newManifest; // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n    //\n    // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n    //\n    // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n    //\n    // Because of this change, and the difficulty of supporting periods with changing start\n    // times, periods with changing start times are not supported. This makes the logic much\n    // simpler, since periods with the same start time can be considerred the same period\n    // across refreshes.\n    //\n    // To give an example as to the difficulty of handling periods where the start time may\n    // change, if a single period manifest is refreshed with another manifest with a single\n    // period, and both the start and end times are increased, then the only way to determine\n    // if it's a new period or an old one that has changed is to look through the segments of\n    // each playlist and determine the presentation time bounds to find a match. In addition,\n    // if the period start changed to exceed the old period end, then there would be no\n    // match, and it would not be possible to determine whether the refreshed period is a new\n    // one or the old one.\n\n    var oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n    var newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n    // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n    // of properties are saved for each seen Period. Even long running live streams won't\n    // generate too many Periods, unless the stream is watched for decades. In the future,\n    // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n    // but it may not become an issue, and the additional info can be useful for debugging.\n\n    newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n    updateSequenceNumbers({\n      oldPlaylists: oldPlaylists,\n      newPlaylists: newPlaylists,\n      timelineStarts: newManifest.timelineStarts\n    });\n    return newManifest;\n  };\n\n  var generateSidxKey = function generateSidxKey(sidx) {\n    return sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n  };\n\n  var mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n    var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      var name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    return mergedPlaylists.map(function (playlist) {\n      playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n      return playlist;\n    });\n  };\n\n  var addSidxSegmentsToPlaylist = function addSidxSegmentsToPlaylist(playlist, sidxMapping) {\n    var sidxKey = generateSidxKey(playlist.sidx);\n    var sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (sidxMatch) {\n      addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n\n    return playlist;\n  };\n\n  var addSidxSegmentsToPlaylists = function addSidxSegmentsToPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (!Object.keys(sidxMapping).length) {\n      return playlists;\n    }\n\n    for (var i in playlists) {\n      playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n    }\n\n    return playlists;\n  };\n\n  var formatAudioPlaylist = function formatAudioPlaylist(_ref, isAudioOnly) {\n    var _attributes;\n\n    var attributes = _ref.attributes,\n        segments = _ref.segments,\n        sidx = _ref.sidx,\n        mediaSequence = _ref.mediaSequence,\n        discontinuitySequence = _ref.discontinuitySequence,\n        discontinuityStarts = _ref.discontinuityStarts;\n    var playlist = {\n      attributes: (_attributes = {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs\n      }, _attributes['PROGRAM-ID'] = 1, _attributes),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      discontinuitySequence: discontinuitySequence,\n      discontinuityStarts: discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      mediaSequence: mediaSequence,\n      segments: segments\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    if (isAudioOnly) {\n      playlist.attributes.AUDIO = 'audio';\n      playlist.attributes.SUBTITLES = 'subs';\n    }\n\n    return playlist;\n  };\n\n  var formatVttPlaylist = function formatVttPlaylist(_ref2) {\n    var _m3u8Attributes;\n\n    var attributes = _ref2.attributes,\n        segments = _ref2.segments,\n        mediaSequence = _ref2.mediaSequence,\n        discontinuityStarts = _ref2.discontinuityStarts,\n        discontinuitySequence = _ref2.discontinuitySequence;\n\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodStart,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n\n    var m3u8Attributes = (_m3u8Attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _m3u8Attributes['PROGRAM-ID'] = 1, _m3u8Attributes);\n\n    if (attributes.codecs) {\n      m3u8Attributes.CODECS = attributes.codecs;\n    }\n\n    return {\n      attributes: m3u8Attributes,\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      timelineStarts: attributes.timelineStarts,\n      discontinuityStarts: discontinuityStarts,\n      discontinuitySequence: discontinuitySequence,\n      mediaSequence: mediaSequence,\n      segments: segments\n    };\n  };\n\n  var organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping, isAudioOnly) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    if (isAudioOnly === void 0) {\n      isAudioOnly = false;\n    }\n\n    var mainPlaylist;\n    var formattedPlaylists = playlists.reduce(function (a, playlist) {\n      var role = playlist.attributes.role && playlist.attributes.role.value || '';\n      var language = playlist.attributes.lang || '';\n      var label = playlist.attributes.label || 'main';\n\n      if (language && !playlist.attributes.label) {\n        var roleLabel = role ? \" (\" + role + \")\" : '';\n        label = \"\" + playlist.attributes.lang + roleLabel;\n      }\n\n      if (!a[label]) {\n        a[label] = {\n          language: language,\n          autoselect: true,\n          \"default\": role === 'main',\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      var formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n      a[label].playlists.push(formatted);\n\n      if (typeof mainPlaylist === 'undefined' && role === 'main') {\n        mainPlaylist = playlist;\n        mainPlaylist[\"default\"] = true;\n      }\n\n      return a;\n    }, {}); // if no playlists have role \"main\", mark the first as main\n\n    if (!mainPlaylist) {\n      var firstLabel = Object.keys(formattedPlaylists)[0];\n      formattedPlaylists[firstLabel][\"default\"] = true;\n    }\n\n    return formattedPlaylists;\n  };\n\n  var organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n    if (sidxMapping === void 0) {\n      sidxMapping = {};\n    }\n\n    return playlists.reduce(function (a, playlist) {\n      var label = playlist.attributes.lang || 'text';\n\n      if (!a[label]) {\n        a[label] = {\n          language: label,\n          \"default\": false,\n          autoselect: false,\n          playlists: [],\n          uri: ''\n        };\n      }\n\n      a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n      return a;\n    }, {});\n  };\n\n  var organizeCaptionServices = function organizeCaptionServices(captionServices) {\n    return captionServices.reduce(function (svcObj, svc) {\n      if (!svc) {\n        return svcObj;\n      }\n\n      svc.forEach(function (service) {\n        var channel = service.channel,\n            language = service.language;\n        svcObj[language] = {\n          autoselect: false,\n          \"default\": false,\n          instreamId: channel,\n          language: language\n        };\n\n        if (service.hasOwnProperty('aspectRatio')) {\n          svcObj[language].aspectRatio = service.aspectRatio;\n        }\n\n        if (service.hasOwnProperty('easyReader')) {\n          svcObj[language].easyReader = service.easyReader;\n        }\n\n        if (service.hasOwnProperty('3D')) {\n          svcObj[language]['3D'] = service['3D'];\n        }\n      });\n      return svcObj;\n    }, {});\n  };\n\n  var formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n    var _attributes2;\n\n    var attributes = _ref3.attributes,\n        segments = _ref3.segments,\n        sidx = _ref3.sidx,\n        discontinuityStarts = _ref3.discontinuityStarts;\n    var playlist = {\n      attributes: (_attributes2 = {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth\n      }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      discontinuityStarts: discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      segments: segments\n    };\n\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n\n    return playlist;\n  };\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n  /**\n   * Contains start and timeline properties denoting a timeline start. For DASH, these will\n   * be the same number.\n   *\n   * @typedef {Object} TimelineStart\n   * @property {number} start - the start time of the timeline\n   * @property {number} timeline - the timeline number\n   */\n\n  /**\n   * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n   *\n   * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n   * DASH specific attribute used in constructing segment URI's from templates. However, from\n   * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n   * value, which should start at the original media sequence value (or 0) and increment by 1\n   * for each segment thereafter. Since DASH's `startNumber` values are independent per\n   * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n   * from a 0 mediaSequence value and increment from there.\n   *\n   * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n   * debugging and making sense of the manifest.\n   *\n   * For live playlists, to account for values increasing in manifests when periods are\n   * removed on refreshes, merging logic should be used to update the numbers to their\n   * appropriate values (to ensure they're sequential and increasing).\n   *\n   * @param {Object[]} playlists - the playlists to update\n   * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n   */\n\n\n  var addMediaSequenceValues = function addMediaSequenceValues(playlists, timelineStarts) {\n    // increment all segments sequentially\n    playlists.forEach(function (playlist) {\n      playlist.mediaSequence = 0;\n      playlist.discontinuitySequence = findIndex(timelineStarts, function (_ref7) {\n        var timeline = _ref7.timeline;\n        return timeline === playlist.timeline;\n      });\n\n      if (!playlist.segments) {\n        return;\n      }\n\n      playlist.segments.forEach(function (segment, index) {\n        segment.number = index;\n      });\n    });\n  };\n  /**\n   * Given a media group object, flattens all playlists within the media group into a single\n   * array.\n   *\n   * @param {Object} mediaGroupObject - the media group object\n   *\n   * @return {Object[]}\n   *         The media group playlists\n   */\n\n\n  var flattenMediaGroupPlaylists = function flattenMediaGroupPlaylists(mediaGroupObject) {\n    if (!mediaGroupObject) {\n      return [];\n    }\n\n    return Object.keys(mediaGroupObject).reduce(function (acc, label) {\n      var labelContents = mediaGroupObject[label];\n      return acc.concat(labelContents.playlists);\n    }, []);\n  };\n\n  var toM3u8 = function toM3u8(_ref8) {\n    var _mediaGroups;\n\n    var dashPlaylists = _ref8.dashPlaylists,\n        locations = _ref8.locations,\n        _ref8$sidxMapping = _ref8.sidxMapping,\n        sidxMapping = _ref8$sidxMapping === void 0 ? {} : _ref8$sidxMapping,\n        previousManifest = _ref8.previousManifest;\n\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all main manifest attributes\n\n\n    var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n        duration = _dashPlaylists$0$attr.sourceDuration,\n        type = _dashPlaylists$0$attr.type,\n        suggestedPresentationDelay = _dashPlaylists$0$attr.suggestedPresentationDelay,\n        minimumUpdatePeriod = _dashPlaylists$0$attr.minimumUpdatePeriod;\n    var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    var vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n    var captions = dashPlaylists.map(function (playlist) {\n      return playlist.attributes.captionServices;\n    }).filter(Boolean);\n    var manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: (_mediaGroups = {\n        AUDIO: {},\n        VIDEO: {}\n      }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n      uri: '',\n      duration: duration,\n      playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n    };\n\n    if (minimumUpdatePeriod >= 0) {\n      manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n    }\n\n    if (locations) {\n      manifest.locations = locations;\n    }\n\n    if (type === 'dynamic') {\n      manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n    }\n\n    var isAudioOnly = manifest.playlists.length === 0;\n    var organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n    var organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n    var formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n    var playlistTimelineStarts = formattedPlaylists.map(function (_ref9) {\n      var timelineStarts = _ref9.timelineStarts;\n      return timelineStarts;\n    });\n    manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n    addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n    if (organizedAudioGroup) {\n      manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n    }\n\n    if (organizedVttGroup) {\n      manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n    }\n\n    if (captions.length) {\n      manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n    }\n\n    if (previousManifest) {\n      return positionManifestOnTimeline({\n        oldManifest: previousManifest,\n        newManifest: manifest\n      });\n    }\n\n    return manifest;\n  };\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n\n\n  var getLiveRValue = function getLiveRValue(attributes, time, duration) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        _attributes$periodSta = attributes.periodStart,\n        periodStart = _attributes$periodSta === void 0 ? 0 : _attributes$periodSta,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + periodStart;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n    var type = attributes.type,\n        _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n        _attributes$media = attributes.media,\n        media = _attributes$media === void 0 ? '' : _attributes$media,\n        sourceDuration = attributes.sourceDuration,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n        timeline = attributes.periodStart;\n    var segments = [];\n    var time = -1;\n\n    for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      var S = segmentTimeline[sIndex];\n      var duration = S.d;\n      var repeat = S.r || 0;\n      var segmentTime = S.t || 0;\n\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n\n      var count = void 0;\n\n      if (repeat < 0) {\n        var nextS = sIndex + 1;\n\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n\n      var end = startNumber + segments.length + count;\n      var number = startNumber + segments.length;\n\n      while (number < end) {\n        segments.push({\n          number: number,\n          duration: duration / timescale,\n          time: time,\n          timeline: timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n\n    return segments;\n  };\n\n  var identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  var identifierReplacement = function identifierReplacement(values) {\n    return function (match, identifier, format, width) {\n      if (match === '$$') {\n        // escape sequence\n        return '$';\n      }\n\n      if (typeof values[identifier] === 'undefined') {\n        return match;\n      }\n\n      var value = '' + values[identifier];\n\n      if (identifier === 'RepresentationID') {\n        // Format tag shall not be present with RepresentationID\n        return value;\n      }\n\n      if (!format) {\n        width = 1;\n      } else {\n        width = parseInt(width, 10);\n      }\n\n      if (value.length >= width) {\n        return value;\n      }\n\n      return \"\" + new Array(width - value.length + 1).join('0') + value;\n    };\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n\n  var constructTemplateUrl = function constructTemplateUrl(url, values) {\n    return url.replace(identifierPattern, identifierReplacement(values));\n  };\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n\n  var parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodStart\n      }];\n    }\n\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n\n  var segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n    var templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    var _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {\n      sourceURL: '',\n      range: ''\n    } : _attributes$initializ;\n    var mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    var segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(function (segment) {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      var uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      var presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n      // calculated in mpd-parser prior to this, so it's assumed to be available.\n      attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n      var map = {\n        uri: uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl$1(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number,\n        presentationTime: presentationTime\n      };\n      return map;\n    });\n  };\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n\n  var SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n    var baseUrl = attributes.baseUrl,\n        _attributes$initializ = attributes.initialization,\n        initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n    var initSegment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    var segment = urlTypeToSegment({\n      baseUrl: baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n\n  var segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n    var duration = attributes.duration,\n        _attributes$segmentUr = attributes.segmentUrls,\n        segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr,\n        periodStart = attributes.periodStart; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n\n    var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n      return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n    });\n    var segmentTimeInfo;\n\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n\n    var segments = segmentTimeInfo.map(function (segmentTime, index) {\n      if (segmentUrlMap[index]) {\n        var segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n        // - if timescale isn't present on any level, default to 1.\n\n        var timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n        var presentationTimeOffset = attributes.presentationTimeOffset || 0;\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n\n    }).filter(function (segment) {\n      return segment;\n    });\n    return segments;\n  };\n\n  var generateSegments = function generateSegments(_ref) {\n    var attributes = _ref.attributes,\n        segmentInfo = _ref.segmentInfo;\n    var segmentAttributes;\n    var segmentsFn;\n\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge(attributes, segmentInfo.list);\n    }\n\n    var segmentsInfo = {\n      attributes: attributes\n    };\n\n    if (!segmentsFn) {\n      return segmentsInfo;\n    }\n\n    var segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      var _segmentAttributes = segmentAttributes,\n          duration = _segmentAttributes.duration,\n          _segmentAttributes$ti = _segmentAttributes.timescale,\n          timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce(function (max, segment) {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n\n    segmentsInfo.attributes = segmentAttributes;\n    segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n    if (segmentInfo.base && segmentAttributes.indexRange) {\n      segmentsInfo.sidx = segments[0];\n      segmentsInfo.segments = [];\n    }\n\n    return segmentsInfo;\n  };\n\n  var toPlaylists = function toPlaylists(representations) {\n    return representations.map(generateSegments);\n  };\n\n  var findChildren = function findChildren(element, name) {\n    return from(element.childNodes).filter(function (_ref) {\n      var tagName = _ref.tagName;\n      return tagName === name;\n    });\n  };\n\n  var getContent = function getContent(element) {\n    return element.textContent.trim();\n  };\n\n  var parseDuration = function parseDuration(str) {\n    var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    var SECONDS_IN_DAY = 24 * 60 * 60;\n    var SECONDS_IN_HOUR = 60 * 60;\n    var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    var match = durationRegex.exec(str);\n\n    if (!match) {\n      return 0;\n    }\n\n    var _match$slice = match.slice(1),\n        year = _match$slice[0],\n        month = _match$slice[1],\n        day = _match$slice[2],\n        hour = _match$slice[3],\n        minute = _match$slice[4],\n        second = _match$slice[5];\n\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n\n  var parseDate = function parseDate(str) {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n\n    return Date.parse(str);\n  };\n\n  var parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration: function mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime: function availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the suggested presentation delay. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    suggestedPresentationDelay: function suggestedPresentationDelay(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     *\n     * @return {string}\n     *         The type as a string\n     */\n    type: function type(value) {\n      return value;\n    },\n\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start: function start(value) {\n      return parseDuration(value);\n    },\n\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width: function width(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height: function height(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth: function bandwidth(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber: function startNumber(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed timescale\n     */\n    timescale: function timescale(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the presentationTimeOffset.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTimeOffset\n     */\n    presentationTimeOffset: function presentationTimeOffset(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration: function duration(value) {\n      var parsedValue = parseInt(value, 10);\n\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n\n      return parsedValue;\n    },\n\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d: function d(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t: function t(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r: function r(value) {\n      return parseInt(value, 10);\n    },\n\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT: function DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  var parseAttributes = function parseAttributes(el) {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n\n    return from(el.attributes).reduce(function (a, e) {\n      var parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n\n  var keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {string[]} referenceUrls\n   *        List of reference urls to resolve to\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {string[]}\n   *         List of resolved urls\n   */\n\n  var buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n    if (!baseUrlElements.length) {\n      return referenceUrls;\n    }\n\n    return flatten(referenceUrls.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        return resolveUrl$1(reference, getContent(baseUrlElement));\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} segmentTimeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n\n  var getSegmentInformation = function getSegmentInformation(adaptationSet) {\n    var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n      return merge({\n        tag: 'SegmentURL'\n      }, parseAttributes(s));\n    });\n    var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    var segmentTimelineParentNode = segmentList || segmentTemplate;\n    var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n\n    var segmentInfo = {\n      template: template,\n      segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n        return parseAttributes(s);\n      }),\n      list: segmentList && merge(parseAttributes(segmentList), {\n        segmentUrls: segmentUrls,\n        initialization: parseAttributes(segmentInitialization)\n      }),\n      base: segmentBase && merge(parseAttributes(segmentBase), {\n        initialization: parseAttributes(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(function (key) {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {string[]} adaptationSetBaseUrls\n   *        Contains list of resolved base urls inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n\n  var inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n    return function (representation) {\n      var repBaseUrlElements = findChildren(representation, 'BaseURL');\n      var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n      var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n      var representationSegmentInfo = getSegmentInformation(representation);\n      return repBaseUrls.map(function (baseUrl) {\n        return {\n          segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n          attributes: merge(attributes, {\n            baseUrl: baseUrl\n          })\n        };\n      });\n    };\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n\n  var generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n    return contentProtectionNodes.reduce(function (acc, node) {\n      var attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n      // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n      // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n      // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n      if (attributes.schemeIdUri) {\n        attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n      }\n\n      var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes: attributes\n        };\n        var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n        if (psshNode) {\n          var pssh = getContent(psshNode);\n          acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n        }\n      }\n\n      return acc;\n    }, {});\n  }; // defined in ANSI_SCTE 214-1 2016\n\n\n  var parseCaptionServiceMetadata = function parseCaptionServiceMetadata(service) {\n    // 608 captions\n    if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n      var values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(function (value) {\n        var channel;\n        var language; // default language to value\n\n        language = value;\n\n        if (/^CC\\d=/.test(value)) {\n          var _value$split = value.split('=');\n\n          channel = _value$split[0];\n          language = _value$split[1];\n        } else if (/^CC\\d$/.test(value)) {\n          channel = value;\n        }\n\n        return {\n          channel: channel,\n          language: language\n        };\n      });\n    } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n      var _values = typeof service.value !== 'string' ? [] : service.value.split(';');\n\n      return _values.map(function (value) {\n        var flags = {\n          // service or channel number 1-63\n          'channel': undefined,\n          // language is a 3ALPHA per ISO 639.2/B\n          // field is required\n          'language': undefined,\n          // BIT 1/0 or ?\n          // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n          'aspectRatio': 1,\n          // BIT 1/0\n          // easy reader flag indicated the text is tailed to the needs of beginning readers\n          // default 0, or off\n          'easyReader': 0,\n          // BIT 1/0\n          // If 3d metadata is present (CEA-708.1) then 1\n          // default 0\n          '3D': 0\n        };\n\n        if (/=/.test(value)) {\n          var _value$split2 = value.split('='),\n              channel = _value$split2[0],\n              _value$split2$ = _value$split2[1],\n              opts = _value$split2$ === void 0 ? '' : _value$split2$;\n\n          flags.channel = channel;\n          flags.language = value;\n          opts.split(',').forEach(function (opt) {\n            var _opt$split = opt.split(':'),\n                name = _opt$split[0],\n                val = _opt$split[1];\n\n            if (name === 'lang') {\n              flags.language = val; // er for easyReadery\n            } else if (name === 'er') {\n              flags.easyReader = Number(val); // war for wide aspect ratio\n            } else if (name === 'war') {\n              flags.aspectRatio = Number(val);\n            } else if (name === '3D') {\n              flags['3D'] = Number(val);\n            }\n          });\n        } else {\n          flags.language = value;\n        }\n\n        if (flags.channel) {\n          flags.channel = 'SERVICE' + flags.channel;\n        }\n\n        return flags;\n      });\n    }\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {string[]} periodBaseUrls\n   *        Contains list of resolved base urls inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n\n  var toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n    return function (adaptationSet) {\n      var adaptationSetAttributes = parseAttributes(adaptationSet);\n      var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n      var role = findChildren(adaptationSet, 'Role')[0];\n      var roleAttributes = {\n        role: parseAttributes(role)\n      };\n      var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n      var accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n      var captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n      if (captionServices) {\n        attrs = merge(attrs, {\n          captionServices: captionServices\n        });\n      }\n\n      var label = findChildren(adaptationSet, 'Label')[0];\n\n      if (label && label.childNodes.length) {\n        var labelVal = label.childNodes[0].nodeValue.trim();\n        attrs = merge(attrs, {\n          label: labelVal\n        });\n      }\n\n      var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n      if (Object.keys(contentProtection).length) {\n        attrs = merge(attrs, {\n          contentProtection: contentProtection\n        });\n      }\n\n      var segmentInfo = getSegmentInformation(adaptationSet);\n      var representations = findChildren(adaptationSet, 'Representation');\n      var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n      return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n    };\n  };\n  /**\n   * Contains all period information for mapping nodes onto adaptation sets.\n   *\n   * @typedef {Object} PeriodInformation\n   * @property {Node} period.node\n   *           Period node from the mpd\n   * @property {Object} period.attributes\n   *           Parsed period attributes from node plus any added\n   */\n\n  /**\n   * Maps a PeriodInformation object to a list of Representation information objects for all\n   * AdaptationSet nodes contained within the Period.\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {PeriodInformation} period\n   *        Period object containing necessary period information\n   * @param {number} periodStart\n   *        Start time of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n   * @param {string[]} mpdBaseUrls\n   *        Contains list of resolved base urls inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n\n  var toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n    return function (period, index) {\n      var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n      var periodAttributes = merge(mpdAttributes, {\n        periodStart: period.attributes.start\n      });\n\n      if (typeof period.attributes.duration === 'number') {\n        periodAttributes.periodDuration = period.attributes.duration;\n      }\n\n      var adaptationSets = findChildren(period.node, 'AdaptationSet');\n      var periodSegmentInfo = getSegmentInformation(period.node);\n      return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n    };\n  };\n  /**\n   * Gets Period@start property for a given period.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {Object} options.attributes\n   *        Period attributes\n   * @param {Object} [options.priorPeriodAttributes]\n   *        Prior period attributes (if prior period is available)\n   * @param {string} options.mpdType\n   *        The MPD@type these periods came from\n   * @return {number|null}\n   *         The period start, or null if it's an early available period or error\n   */\n\n\n  var getPeriodStart = function getPeriodStart(_ref) {\n    var attributes = _ref.attributes,\n        priorPeriodAttributes = _ref.priorPeriodAttributes,\n        mpdType = _ref.mpdType; // Summary of period start time calculation from DASH spec section 5.3.2.1\n    //\n    // A period's start is the first period's start + time elapsed after playing all\n    // prior periods to this one. Periods continue one after the other in time (without\n    // gaps) until the end of the presentation.\n    //\n    // The value of Period@start should be:\n    // 1. if Period@start is present: value of Period@start\n    // 2. if previous period exists and it has @duration: previous Period@start +\n    //    previous Period@duration\n    // 3. if this is first period and MPD@type is 'static': 0\n    // 4. in all other cases, consider the period an \"early available period\" (note: not\n    //    currently supported)\n    // (1)\n\n    if (typeof attributes.start === 'number') {\n      return attributes.start;\n    } // (2)\n\n\n    if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n      return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n    } // (3)\n\n\n    if (!priorPeriodAttributes && mpdType === 'static') {\n      return 0;\n    } // (4)\n    // There is currently no logic for calculating the Period@start value if there is\n    // no Period@start or prior Period@start and Period@duration available. This is not made\n    // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n    // nothing about any other resolution strategies, it's implied. Thus, this case should\n    // be considered an early available period, or error, and null should suffice for both\n    // of those cases.\n\n\n    return null;\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n\n  var inheritAttributes = function inheritAttributes(mpd, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _options = options,\n        _options$manifestUri = _options.manifestUri,\n        manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n        _options$NOW = _options.NOW,\n        NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n        _options$clientOffset = _options.clientOffset,\n        clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n    var periodNodes = findChildren(mpd, 'Period');\n\n    if (!periodNodes.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n\n    var locations = findChildren(mpd, 'Location');\n    var mpdAttributes = parseAttributes(mpd);\n    var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n    mpdAttributes.type = mpdAttributes.type || 'static';\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n\n    if (locations.length) {\n      mpdAttributes.locations = locations.map(getContent);\n    }\n\n    var periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n    // adding properties that require looking at prior periods is to parse attributes and add\n    // missing ones before toAdaptationSets is called. If more such properties are added, it\n    // may be better to refactor toAdaptationSets.\n\n    periodNodes.forEach(function (node, index) {\n      var attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n      // for this period.\n\n      var priorPeriod = periods[index - 1];\n      attributes.start = getPeriodStart({\n        attributes: attributes,\n        priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n        mpdType: mpdAttributes.type\n      });\n      periods.push({\n        node: node,\n        attributes: attributes\n      });\n    });\n    return {\n      locations: mpdAttributes.locations,\n      representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n    };\n  };\n\n  var stringToMpdXml = function stringToMpdXml(manifestString) {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n\n    var parser = new DOMParser();\n    var xml;\n    var mpd;\n\n    try {\n      xml = parser.parseFromString(manifestString, 'application/xml');\n      mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n    } catch (e) {// ie 11 throwsw on invalid xml\n    }\n\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n\n    return mpd;\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n    var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n    if (!UTCTimingNode) {\n      return null;\n    }\n\n    var attributes = parseAttributes(UTCTimingNode);\n\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n\n    return attributes;\n  };\n  /*\n   * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n   * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n   *\n   * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n   * parsed DASH manifest will have its media sequence and discontinuity sequence values\n   * updated to reflect its position relative to the prior manifest.\n   *\n   * @param {string} manifestString - the DASH manifest as a string\n   * @param {options} [options] - any options\n   *\n   * @return {Object} the manifest object\n   */\n\n  var parse = function parse(manifestString, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n    var playlists = toPlaylists(parsedManifestInfo.representationInfo);\n    return toM3u8({\n      dashPlaylists: playlists,\n      locations: parsedManifestInfo.locations,\n      sidxMapping: options.sidxMapping,\n      previousManifest: options.previousManifest\n    });\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n\n  var parseUTCTiming = function parseUTCTiming(manifestString) {\n    return parseUTCTimingScheme(stringToMpdXml(manifestString));\n  };\n\n  var MAX_UINT32 = Math.pow(2, 32);\n\n  var getUint64$1 = function getUint64(uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n\n      return value;\n    }\n\n    return dv.getUint32(0) * MAX_UINT32 + dv.getUint32(4);\n  };\n\n  var numbers = {\n    getUint64: getUint64$1,\n    MAX_UINT32: MAX_UINT32\n  };\n\n  var getUint64 = numbers.getUint64;\n\n  var parseSidx = function parseSidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8)\n    },\n        i = 12;\n\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = getUint64(data.subarray(i));\n      result.firstOffset = getUint64(data.subarray(i + 8));\n      i += 16;\n    }\n\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  };\n\n  var parseSidx_1 = parseSidx;\n\n  var ID3 = toUint8([0x49, 0x44, 0x33]);\n  var getId3Size = function getId3Size(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n    var flags = bytes[offset + 5];\n    var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n    var footerPresent = (flags & 16) >> 4;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n  var getId3Offset = function getId3Offset(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    bytes = toUint8(bytes);\n\n    if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n      offset: offset\n    })) {\n      return offset;\n    }\n\n    offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n    // have multiple ID3 tag sections even though\n    // they should not.\n\n    return getId3Offset(bytes, offset);\n  };\n\n  var normalizePath$1 = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return stringToBytes(path);\n    }\n\n    if (typeof path === 'number') {\n      return path;\n    }\n\n    return path;\n  };\n\n  var normalizePaths$1 = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath$1(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath$1(p);\n    });\n  };\n  /**\n   * find any number of boxes by name given a path to it in an iso bmff\n   * such as mp4.\n   *\n   * @param {TypedArray} bytes\n   *        bytes for the iso bmff to search for boxes in\n   *\n   * @param {Uint8Array[]|string[]|string|Uint8Array} name\n   *        An array of paths or a single path representing the name\n   *        of boxes to search through in bytes. Paths may be\n   *        uint8 (character codes) or strings.\n   *\n   * @param {boolean} [complete=false]\n   *        Should we search only for complete boxes on the final path.\n   *        This is very useful when you do not want to get back partial boxes\n   *        in the case of streaming files.\n   *\n   * @return {Uint8Array[]}\n   *         An array of the end paths that we found.\n   */\n\n  var findBox = function findBox(bytes, paths, complete) {\n    if (complete === void 0) {\n      complete = false;\n    }\n\n    paths = normalizePaths$1(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      // short-circuit the search for empty paths\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n      var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n      if (size === 0) {\n        break;\n      }\n\n      var end = i + size;\n\n      if (end > bytes.length) {\n        // this box is bigger than the number of bytes we have\n        // and complete is set, we cannot find any more boxes.\n        if (complete) {\n          break;\n        }\n\n        end = bytes.length;\n      }\n\n      var data = bytes.subarray(i + 8, end);\n\n      if (bytesMatch(type, paths[0])) {\n        if (paths.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next box along the path\n          results.push.apply(results, findBox(data, paths.slice(1), complete));\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of bytes\n\n\n    return results;\n  };\n\n  // https://matroska-org.github.io/libebml/specs.html\n  // https://www.matroska.org/technical/elements.html\n  // https://www.webmproject.org/docs/container/\n\n  var EBML_TAGS = {\n    EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n    DocType: toUint8([0x42, 0x82]),\n    Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n    SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n    Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n    Track: toUint8([0xAE]),\n    TrackNumber: toUint8([0xd7]),\n    DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n    TrackEntry: toUint8([0xAE]),\n    TrackType: toUint8([0x83]),\n    FlagDefault: toUint8([0x88]),\n    CodecID: toUint8([0x86]),\n    CodecPrivate: toUint8([0x63, 0xA2]),\n    VideoTrack: toUint8([0xe0]),\n    AudioTrack: toUint8([0xe1]),\n    // Not used yet, but will be used for live webm/mkv\n    // see https://www.matroska.org/technical/basics.html#block-structure\n    // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n    Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n    Timestamp: toUint8([0xE7]),\n    TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n    BlockGroup: toUint8([0xA0]),\n    BlockDuration: toUint8([0x9B]),\n    Block: toUint8([0xA1]),\n    SimpleBlock: toUint8([0xA3])\n  };\n  /**\n   * This is a simple table to determine the length\n   * of things in ebml. The length is one based (starts at 1,\n   * rather than zero) and for every zero bit before a one bit\n   * we add one to length. We also need this table because in some\n   * case we have to xor all the length bits from another value.\n   */\n\n  var LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\n  var getLength = function getLength(_byte) {\n    var len = 1;\n\n    for (var i = 0; i < LENGTH_TABLE.length; i++) {\n      if (_byte & LENGTH_TABLE[i]) {\n        break;\n      }\n\n      len++;\n    }\n\n    return len;\n  }; // length in ebml is stored in the first 4 to 8 bits\n  // of the first byte. 4 for the id length and 8 for the\n  // data size length. Length is measured by converting the number to binary\n  // then 1 + the number of zeros before a 1 is encountered starting\n  // from the left.\n\n\n  var getvint = function getvint(bytes, offset, removeLength, signed) {\n    if (removeLength === void 0) {\n      removeLength = true;\n    }\n\n    if (signed === void 0) {\n      signed = false;\n    }\n\n    var length = getLength(bytes[offset]);\n    var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n    // as they will be modified below to remove the dataSizeLen bits and we do not\n    // want to modify the original data. normally we could just call slice on\n    // uint8array but ie 11 does not support that...\n\n    if (removeLength) {\n      valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n      valueBytes[0] ^= LENGTH_TABLE[length - 1];\n    }\n\n    return {\n      length: length,\n      value: bytesToNumber(valueBytes, {\n        signed: signed\n      }),\n      bytes: valueBytes\n    };\n  };\n\n  var normalizePath = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return path.match(/.{1,2}/g).map(function (p) {\n        return normalizePath(p);\n      });\n    }\n\n    if (typeof path === 'number') {\n      return numberToBytes(path);\n    }\n\n    return path;\n  };\n\n  var normalizePaths = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath(paths)];\n    }\n\n    return paths.map(function (p) {\n      return normalizePath(p);\n    });\n  };\n\n  var getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n    if (offset >= bytes.length) {\n      return bytes.length;\n    }\n\n    var innerid = getvint(bytes, offset, false);\n\n    if (bytesMatch(id.bytes, innerid.bytes)) {\n      return offset;\n    }\n\n    var dataHeader = getvint(bytes, offset + innerid.length);\n    return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n  };\n  /**\n   * Notes on the EBLM format.\n   *\n   * EBLM uses \"vints\" tags. Every vint tag contains\n   * two parts\n   *\n   * 1. The length from the first byte. You get this by\n   *    converting the byte to binary and counting the zeros\n   *    before a 1. Then you add 1 to that. Examples\n   *    00011111 = length 4 because there are 3 zeros before a 1.\n   *    00100000 = length 3 because there are 2 zeros before a 1.\n   *    00000011 = length 7 because there are 6 zeros before a 1.\n   *\n   * 2. The bits used for length are removed from the first byte\n   *    Then all the bytes are merged into a value. NOTE: this\n   *    is not the case for id ebml tags as there id includes\n   *    length bits.\n   *\n   */\n\n\n  var findEbml = function findEbml(bytes, paths) {\n    paths = normalizePaths(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n\n    if (!paths.length) {\n      return results;\n    }\n\n    var i = 0;\n\n    while (i < bytes.length) {\n      var id = getvint(bytes, i, false);\n      var dataHeader = getvint(bytes, i + id.length);\n      var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n      if (dataHeader.value === 0x7f) {\n        dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n        if (dataHeader.value !== bytes.length) {\n          dataHeader.value -= dataStart;\n        }\n      }\n\n      var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n      var data = bytes.subarray(dataStart, dataEnd);\n\n      if (bytesMatch(paths[0], id.bytes)) {\n        if (paths.length === 1) {\n          // this is the end of the paths and we've found the tag we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next tag inside of the data\n          // of this one\n          results = results.concat(findEbml(data, paths.slice(1)));\n        }\n      }\n\n      var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n      i += totalLength;\n    }\n\n    return results;\n  }; // see https://www.matroska.org/technical/basics.html#block-structure\n\n  var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\n  var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\n  var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   *\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n    var positions = [];\n    var i = 1; // Find all `Emulation Prevention Bytes`\n\n    while (i < bytes.length - 2) {\n      if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n        positions.push(i + 2);\n        i++;\n      }\n\n      i++;\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (positions.length === 0) {\n      return bytes;\n    } // Create a new array to hold the NAL unit data\n\n\n    var newLength = bytes.length - positions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === positions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        positions.shift();\n      }\n\n      newData[i] = bytes[sourceIndex];\n    }\n\n    return newData;\n  };\n  var findNal = function findNal(bytes, dataType, types, nalLimit) {\n    if (nalLimit === void 0) {\n      nalLimit = Infinity;\n    }\n\n    bytes = toUint8(bytes);\n    types = [].concat(types);\n    var i = 0;\n    var nalStart;\n    var nalsFound = 0; // keep searching until:\n    // we reach the end of bytes\n    // we reach the maximum number of nals they want to seach\n    // NOTE: that we disregard nalLimit when we have found the start\n    // of the nal we want so that we can find the end of the nal we want.\n\n    while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n      var nalOffset = void 0;\n\n      if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n        nalOffset = 4;\n      } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n        nalOffset = 3;\n      } // we are unsynced,\n      // find the next nal unit\n\n\n      if (!nalOffset) {\n        i++;\n        continue;\n      }\n\n      nalsFound++;\n\n      if (nalStart) {\n        return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n      }\n\n      var nalType = void 0;\n\n      if (dataType === 'h264') {\n        nalType = bytes[i + nalOffset] & 0x1f;\n      } else if (dataType === 'h265') {\n        nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n      }\n\n      if (types.indexOf(nalType) !== -1) {\n        nalStart = i + nalOffset;\n      } // nal header is 1 length for h264, and 2 for h265\n\n\n      i += nalOffset + (dataType === 'h264' ? 1 : 2);\n    }\n\n    return bytes.subarray(0, 0);\n  };\n  var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h264', type, nalLimit);\n  };\n  var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h265', type, nalLimit);\n  };\n\n  var CONSTANTS = {\n    // \"webm\" string literal in hex\n    'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n    // \"matroska\" string literal in hex\n    'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n    // \"fLaC\" string literal in hex\n    'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n    // \"OggS\" string literal in hex\n    'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n    // ac-3 sync byte, also works for ec-3 as that is simply a codec\n    // of ac-3\n    'ac3': toUint8([0x0b, 0x77]),\n    // \"RIFF\" string literal in hex used for wav and avi\n    'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n    // \"AVI\" string literal in hex\n    'avi': toUint8([0x41, 0x56, 0x49]),\n    // \"WAVE\" string literal in hex\n    'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n    // \"ftyp3g\" string literal in hex\n    '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n    // \"ftyp\" string literal in hex\n    'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n    // \"styp\" string literal in hex\n    'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n    // \"ftypqt\" string literal in hex\n    'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n    // moov string literal in hex\n    'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n    // moof string literal in hex\n    'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n  };\n  var _isLikely = {\n    aac: function aac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x10], {\n        offset: offset,\n        mask: [0xFF, 0x16]\n      });\n    },\n    mp3: function mp3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x02], {\n        offset: offset,\n        mask: [0xFF, 0x06]\n      });\n    },\n    webm: function webm(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n      return bytesMatch(docType, CONSTANTS.webm);\n    },\n    mkv: function mkv(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n      return bytesMatch(docType, CONSTANTS.matroska);\n    },\n    mp4: function mp4(bytes) {\n      // if this file is another base media file format, it is not mp4\n      if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n        return false;\n      } // if this file starts with a ftyp or styp box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.mp4, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n        offset: 4\n      })) {\n        return true;\n      } // if this file starts with a moof/moov box its mp4\n\n\n      if (bytesMatch(bytes, CONSTANTS.moof, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.moov, {\n        offset: 4\n      })) {\n        return true;\n      }\n    },\n    mov: function mov(bytes) {\n      return bytesMatch(bytes, CONSTANTS.mov, {\n        offset: 4\n      });\n    },\n    '3gp': function gp(bytes) {\n      return bytesMatch(bytes, CONSTANTS['3gp'], {\n        offset: 4\n      });\n    },\n    ac3: function ac3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.ac3, {\n        offset: offset\n      });\n    },\n    ts: function ts(bytes) {\n      if (bytes.length < 189 && bytes.length >= 1) {\n        return bytes[0] === 0x47;\n      }\n\n      var i = 0; // check the first 376 bytes for two matching sync bytes\n\n      while (i + 188 < bytes.length && i < 188) {\n        if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n          return true;\n        }\n\n        i += 1;\n      }\n\n      return false;\n    },\n    flac: function flac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.flac, {\n        offset: offset\n      });\n    },\n    ogg: function ogg(bytes) {\n      return bytesMatch(bytes, CONSTANTS.ogg);\n    },\n    avi: function avi(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n        offset: 8\n      });\n    },\n    wav: function wav(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n        offset: 8\n      });\n    },\n    'h264': function h264(bytes) {\n      // find seq_parameter_set_rbsp\n      return findH264Nal(bytes, 7, 3).length;\n    },\n    'h265': function h265(bytes) {\n      // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n      return findH265Nal(bytes, [32, 33], 3).length;\n    }\n  }; // get all the isLikely functions\n  // but make sure 'ts' is above h264 and h265\n  // but below everything else as it is the least specific\n\n  var isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n  .filter(function (t) {\n    return t !== 'ts' && t !== 'h264' && t !== 'h265';\n  }) // add it back to the bottom\n  .concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\n  isLikelyTypes.forEach(function (type) {\n    var isLikelyFn = _isLikely[type];\n\n    _isLikely[type] = function (bytes) {\n      return isLikelyFn(toUint8(bytes));\n    };\n  }); // export after wrapping\n\n  var isLikely = _isLikely; // A useful list of file signatures can be found here\n  // https://en.wikipedia.org/wiki/List_of_file_signatures\n\n  var detectContainerForBytes = function detectContainerForBytes(bytes) {\n    bytes = toUint8(bytes);\n\n    for (var i = 0; i < isLikelyTypes.length; i++) {\n      var type = isLikelyTypes[i];\n\n      if (isLikely[type](bytes)) {\n        return type;\n      }\n    }\n\n    return '';\n  }; // fmp4 is not a container\n\n  var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n    return findBox(bytes, ['moof']).length > 0;\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  var ONE_SECOND_IN_TS = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  var clock_1 = clock.ONE_SECOND_IN_TS;\n\n  /*! @name @videojs/http-streaming @version 2.14.3 @license Apache-2.0 */\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n\n  var resolveUrl = resolveUrl$2;\n  /**\n   * Checks whether xhr request was redirected and returns correct url depending\n   * on `handleManifestRedirects` option\n   *\n   * @api private\n   *\n   * @param  {string} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {string}\n   */\n\n  var resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n\n    return url;\n  };\n\n  var logger = function logger(source) {\n    if (videojs.log.debug) {\n      return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n    }\n\n    return function () {};\n  };\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n\n\n  var TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  var SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\n  var filterRanges = function filterRanges(timeRanges, predicate) {\n    var results = [];\n    var i;\n\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n\n    return videojs.createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object\n   */\n\n\n  var findRange = function findRange(buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   *\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object.\n   */\n\n\n  var findNextRange = function findNextRange(timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n\n  var findGaps = function findGaps(buffered) {\n    if (buffered.length < 2) {\n      return videojs.createTimeRanges();\n    }\n\n    var ranges = [];\n\n    for (var i = 1; i < buffered.length; i++) {\n      var start = buffered.end(i - 1);\n      var end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Calculate the intersection of two TimeRanges\n   *\n   * @param {TimeRanges} bufferA\n   * @param {TimeRanges} bufferB\n   * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n   */\n\n\n  var bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n    var start = null;\n    var end = null;\n    var arity = 0;\n    var extents = [];\n    var ranges = [];\n\n    if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n      return videojs.createTimeRange();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n\n    var count = bufferA.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: bufferA.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferA.end(count),\n        type: 'end'\n      });\n    }\n\n    count = bufferB.length;\n\n    while (count--) {\n      extents.push({\n        time: bufferB.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferB.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n\n    return videojs.createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @return {string} a human readable string\n   */\n\n\n  var printableRange = function printableRange(range) {\n    var strArr = [];\n\n    if (!range || !range.length) {\n      return '';\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n\n  var timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n    if (playbackRate === void 0) {\n      playbackRate = 1;\n    }\n\n    var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   *\n   * @param {TimeRanges} timeRanges\n   * @return {Array}\n   */\n\n\n  var timeRangesToArray = function timeRangesToArray(timeRanges) {\n    var timeRangesList = [];\n\n    for (var i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n\n    return timeRangesList;\n  };\n  /**\n   * Determines if two time range objects are different.\n   *\n   * @param {TimeRange} a\n   *        the first time range object to check\n   *\n   * @param {TimeRange} b\n   *        the second time range object to check\n   *\n   * @return {Boolean}\n   *         Whether the time range objects differ\n   */\n\n\n  var isRangeDifferent = function isRangeDifferent(a, b) {\n    // same object\n    if (a === b) {\n      return false;\n    } // one or the other is undefined\n\n\n    if (!a && b || !b && a) {\n      return true;\n    } // length is different\n\n\n    if (a.length !== b.length) {\n      return true;\n    } // see if any start/end pair is different\n\n\n    for (var i = 0; i < a.length; i++) {\n      if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n        return true;\n      }\n    } // if the length and every pair is the same\n    // this is the same time range\n\n\n    return false;\n  };\n\n  var lastBufferedEnd = function lastBufferedEnd(a) {\n    if (!a || !a.length || !a.end) {\n      return;\n    }\n\n    return a.end(a.length - 1);\n  };\n  /**\n   * A utility function to add up the amount of time in a timeRange\n   * after a specified startTime.\n   * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n   *     would return 40 as there are 40s seconds after 0 in the timeRange\n   *\n   * @param {TimeRange} range\n   *        The range to check against\n   * @param {number} startTime\n   *        The time in the time range that you should start counting from\n   *\n   * @return {number}\n   *          The number of seconds in the buffer passed the specified time.\n   */\n\n\n  var timeAheadOf = function timeAheadOf(range, startTime) {\n    var time = 0;\n\n    if (!range || !range.length) {\n      return time;\n    }\n\n    for (var i = 0; i < range.length; i++) {\n      var start = range.start(i);\n      var end = range.end(i); // startTime is after this range entirely\n\n      if (startTime > end) {\n        continue;\n      } // startTime is within this range\n\n\n      if (startTime > start && startTime <= end) {\n        time += end - startTime;\n        continue;\n      } // startTime is before this range.\n\n\n      time += end - start;\n    }\n\n    return time;\n  };\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n\n\n  var createTimeRange = videojs.createTimeRange;\n  /**\n   * Get the duration of a segment, with special cases for\n   * llhls segments that do not have a duration yet.\n   *\n   * @param {Object} playlist\n   *        the playlist that the segment belongs to.\n   * @param {Object} segment\n   *        the segment to get a duration for.\n   *\n   * @return {number}\n   *          the segment duration\n   */\n\n  var segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n    // if this isn't a preload segment\n    // then we will have a segment duration that is accurate.\n    if (!segment.preload) {\n      return segment.duration;\n    } // otherwise we have to add up parts and preload hints\n    // to get an up to date duration.\n\n\n    var result = 0;\n    (segment.parts || []).forEach(function (p) {\n      result += p.duration;\n    }); // for preload hints we have to use partTargetDuration\n    // as they won't even have a duration yet.\n\n    (segment.preloadHints || []).forEach(function (p) {\n      if (p.type === 'PART') {\n        result += playlist.partTargetDuration;\n      }\n    });\n    return result;\n  };\n  /**\n   * A function to get a combined list of parts and segments with durations\n   * and indexes.\n   *\n   * @param {Playlist} playlist the playlist to get the list for.\n   *\n   * @return {Array} The part/segment list.\n   */\n\n\n  var getPartsAndSegments = function getPartsAndSegments(playlist) {\n    return (playlist.segments || []).reduce(function (acc, segment, si) {\n      if (segment.parts) {\n        segment.parts.forEach(function (part, pi) {\n          acc.push({\n            duration: part.duration,\n            segmentIndex: si,\n            partIndex: pi,\n            part: part,\n            segment: segment\n          });\n        });\n      } else {\n        acc.push({\n          duration: segment.duration,\n          segmentIndex: si,\n          partIndex: null,\n          segment: segment,\n          part: null\n        });\n      }\n\n      return acc;\n    }, []);\n  };\n\n  var getLastParts = function getLastParts(media) {\n    var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n    return lastSegment && lastSegment.parts || [];\n  };\n\n  var getKnownPartCount = function getKnownPartCount(_ref) {\n    var preloadSegment = _ref.preloadSegment;\n\n    if (!preloadSegment) {\n      return;\n    }\n\n    var parts = preloadSegment.parts,\n        preloadHints = preloadSegment.preloadHints;\n    var partCount = (preloadHints || []).reduce(function (count, hint) {\n      return count + (hint.type === 'PART' ? 1 : 0);\n    }, 0);\n    partCount += parts && parts.length ? parts.length : 0;\n    return partCount;\n  };\n  /**\n   * Get the number of seconds to delay from the end of a\n   * live playlist.\n   *\n   * @param {Playlist} master the master playlist\n   * @param {Playlist} media the media playlist\n   * @return {number} the hold back in seconds.\n   */\n\n\n  var liveEdgeDelay = function liveEdgeDelay(master, media) {\n    if (media.endList) {\n      return 0;\n    } // dash suggestedPresentationDelay trumps everything\n\n\n    if (master && master.suggestedPresentationDelay) {\n      return master.suggestedPresentationDelay;\n    }\n\n    var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n    if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n      return media.serverControl.partHoldBack;\n    } else if (hasParts && media.partTargetDuration) {\n      return media.partTargetDuration * 3; // finally look for full segment delays\n    } else if (media.serverControl && media.serverControl.holdBack) {\n      return media.serverControl.holdBack;\n    } else if (media.targetDuration) {\n      return media.targetDuration * 3;\n    }\n\n    return 0;\n  };\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var backwardDuration = function backwardDuration(playlist, endSequence) {\n    var result = 0;\n    var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n\n    while (i--) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n\n    return {\n      result: result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {number} endSequence the mediaSequence to stop walking on\n   */\n\n\n  var forwardDuration = function forwardDuration(playlist, endSequence) {\n    var result = 0;\n    var segment;\n    var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n\n      result += segmentDurationWithParts(playlist, segment);\n\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {number} the duration between the first available segment\n    * and end index.\n    */\n\n\n  var intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n\n    var backward = backwardDuration(playlist, endSequence);\n\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n\n    var forward = forwardDuration(playlist, endSequence);\n\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {number} the duration between the start index and end\n    * index.\n    */\n\n\n  var duration = function duration(playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n\n      if (!playlist.endList) {\n        return window.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Array} options.durationList list to iterate over for durations.\n    * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n    * @param {number} options.startIndex partsAndSegments index to start\n    * @param {number} options.endIndex partsAndSegments index to end.\n    * @return {number} the number of seconds between startIndex and endIndex\n    */\n\n\n  var sumDurations = function sumDurations(_ref2) {\n    var defaultDuration = _ref2.defaultDuration,\n        durationList = _ref2.durationList,\n        startIndex = _ref2.startIndex,\n        endIndex = _ref2.endIndex;\n    var durations = 0;\n\n    if (startIndex > endIndex) {\n      var _ref3 = [endIndex, startIndex];\n      startIndex = _ref3[0];\n      endIndex = _ref3[1];\n    }\n\n    if (startIndex < 0) {\n      for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += defaultDuration;\n      }\n\n      startIndex = 0;\n    }\n\n    for (var _i = startIndex; _i < endIndex; _i++) {\n      durations += durationList[_i].duration;\n    }\n\n    return durations;\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   *                        This takes into account the value of liveEdgePadding.\n   *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n   * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n   *                 If this is provided, it is used in the safe live end calculation.\n   *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n   *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n   * @return {number} the end time of playlist\n   * @function playlistEnd\n   */\n\n\n  var playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n\n    if (expired === null) {\n      return null;\n    }\n\n    expired = expired || 0;\n    var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n    if (useSafeLiveEnd) {\n      liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n      lastSegmentEndTime -= liveEdgePadding;\n    } // don't return a time less than zero\n\n\n    return Math.max(0, lastSegmentEndTime);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n    *        Corresponds to suggestedPresentationDelay in DASH manifests.\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n\n  var seekable = function seekable(playlist, expired, liveEdgePadding) {\n    var useSafeLiveEnd = true;\n    var seekableStart = expired || 0;\n    var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n    if (seekableEnd === null) {\n      return createTimeRange();\n    }\n\n    return createTimeRange(seekableStart, seekableEnd);\n  };\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} options.playlist the media playlist to query\n   * @param {number} options.currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {number} options.startTime the time when the segment/part starts\n   * @param {number} options.startingSegmentIndex the segment index to start looking at.\n   * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n   *\n   * @return {Object} an object with partIndex, segmentIndex, and startTime.\n   */\n\n\n  var getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n    var playlist = _ref4.playlist,\n        currentTime = _ref4.currentTime,\n        startingSegmentIndex = _ref4.startingSegmentIndex,\n        startingPartIndex = _ref4.startingPartIndex,\n        startTime = _ref4.startTime,\n        experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n    var time = currentTime - startTime;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    var startIndex = 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      var partAndSegment = partsAndSegments[i];\n\n      if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n        continue;\n      } // skip this if part index does not match.\n\n\n      if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n        continue;\n      }\n\n      startIndex = i;\n      break;\n    }\n\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n          var _partAndSegment = partsAndSegments[_i2];\n          time += _partAndSegment.duration;\n\n          if (experimentalExactManifestTimings) {\n            if (time < 0) {\n              continue;\n            }\n          } else if (time + TIME_FUDGE_FACTOR <= 0) {\n            continue;\n          }\n\n          return {\n            partIndex: _partAndSegment.partIndex,\n            segmentIndex: _partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex: startIndex,\n              endIndex: _i2\n            })\n          };\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n\n      return {\n        partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n        segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n\n    if (startIndex < 0) {\n      for (var _i3 = startIndex; _i3 < 0; _i3++) {\n        time -= playlist.targetDuration;\n\n        if (time < 0) {\n          return {\n            partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n            segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n            startTime: currentTime\n          };\n        }\n      }\n\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n\n    for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n      var _partAndSegment2 = partsAndSegments[_i4];\n      time -= _partAndSegment2.duration;\n\n      if (experimentalExactManifestTimings) {\n        if (time > 0) {\n          continue;\n        }\n      } else if (time - TIME_FUDGE_FACTOR >= 0) {\n        continue;\n      }\n\n      return {\n        partIndex: _partAndSegment2.partIndex,\n        segmentIndex: _partAndSegment2.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex: startIndex,\n          endIndex: _i4\n        })\n      };\n    } // We are out of possible candidates so load the last one...\n\n\n    return {\n      segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n      partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is blacklisted or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is blacklisted or not\n   * @function isBlacklisted\n   */\n\n\n  var isBlacklisted = function isBlacklisted(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been blacklisted permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n\n  var isIncompatible = function isIncompatible(playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n\n  var isEnabled = function isEnabled(playlist) {\n    var blacklisted = isBlacklisted(playlist);\n    return !playlist.disabled && !blacklisted;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n\n  var isDisabled = function isDisabled(playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {boolean} true if it's an AES encrypted HLS stream\n   */\n\n\n  var isAes = function isAes(media) {\n    for (var i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {string} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n\n  var hasAttribute = function hasAttribute(attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {number} segmentDuration\n   *        Duration of requested segment\n   * @param {number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n\n  var estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n    if (bytesReceived === void 0) {\n      bytesReceived = 0;\n    }\n\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n\n    var size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n\n  var isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n    if (master.playlists.length === 1) {\n      return true;\n    }\n\n    var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return master.playlists.filter(function (playlist) {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  };\n\n  var playlistMatch = function playlistMatch(a, b) {\n    // both playlits are null\n    // or only one playlist is non-null\n    // no match\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // playlist objects are the same, match\n\n\n    if (a === b) {\n      return true;\n    } // first try to use id as it should be the most\n    // accurate\n\n\n    if (a.id && b.id && a.id === b.id) {\n      return true;\n    } // next try to use reslovedUri as it should be the\n    // second most accurate.\n\n\n    if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n      return true;\n    } // finally try to use uri as it should be accurate\n    // but might miss a few cases for relative uris\n\n\n    if (a.uri && b.uri && a.uri === b.uri) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var someAudioVariant = function someAudioVariant(master, callback) {\n    var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n    var found = false;\n\n    for (var groupName in AUDIO) {\n      for (var label in AUDIO[groupName]) {\n        found = callback(AUDIO[groupName][label]);\n\n        if (found) {\n          break;\n        }\n      }\n\n      if (found) {\n        break;\n      }\n    }\n\n    return !!found;\n  };\n\n  var isAudioOnly = function isAudioOnly(master) {\n    // we are audio only if we have no main playlists but do\n    // have media group playlists.\n    if (!master || !master.playlists || !master.playlists.length) {\n      // without audio variants or playlists this\n      // is not an audio only master.\n      var found = someAudioVariant(master, function (variant) {\n        return variant.playlists && variant.playlists.length || variant.uri;\n      });\n      return found;\n    } // if every playlist has only an audio codec it is audio only\n\n\n    var _loop = function _loop(i) {\n      var playlist = master.playlists[i];\n      var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n      if (CODECS && CODECS.split(',').every(function (c) {\n        return isAudioCodec(c);\n      })) {\n        return \"continue\";\n      } // playlist is in an audio group it is audio only\n\n\n      var found = someAudioVariant(master, function (variant) {\n        return playlistMatch(playlist, variant);\n      });\n\n      if (found) {\n        return \"continue\";\n      } // if we make it here this playlist isn't audio and we\n      // are not audio only\n\n\n      return {\n        v: false\n      };\n    };\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      var _ret = _loop(i);\n\n      if (_ret === \"continue\") continue;\n      if (typeof _ret === \"object\") return _ret.v;\n    } // if we make it past every playlist without returning, then\n    // this is an audio only playlist.\n\n\n    return true;\n  }; // exports\n\n\n  var Playlist = {\n    liveEdgeDelay: liveEdgeDelay,\n    duration: duration,\n    seekable: seekable,\n    getMediaInfoForTime: getMediaInfoForTime,\n    isEnabled: isEnabled,\n    isDisabled: isDisabled,\n    isBlacklisted: isBlacklisted,\n    isIncompatible: isIncompatible,\n    playlistEnd: playlistEnd,\n    isAes: isAes,\n    hasAttribute: hasAttribute,\n    estimateSegmentRequestTime: estimateSegmentRequestTime,\n    isLowestEnabledRendition: isLowestEnabledRendition,\n    isAudioOnly: isAudioOnly,\n    playlistMatch: playlistMatch,\n    segmentDurationWithParts: segmentDurationWithParts\n  };\n  var log = videojs.log;\n\n  var createPlaylistID = function createPlaylistID(index, uri) {\n    return index + \"-\" + uri;\n  };\n  /**\n   * Parses a given m3u8 playlist\n   *\n   * @param {Function} [onwarn]\n   *        a function to call when the parser triggers a warning event.\n   * @param {Function} [oninfo]\n   *        a function to call when the parser triggers an info event.\n   * @param {string} manifestString\n   *        The downloaded manifest string\n   * @param {Object[]} [customTagParsers]\n   *        An array of custom tag parsers for the m3u8-parser instance\n   * @param {Object[]} [customTagMappers]\n   *        An array of custom tag mappers for the m3u8-parser instance\n   * @param {boolean} [experimentalLLHLS=false]\n   *        Whether to keep ll-hls features in the manifest after parsing.\n   * @return {Object}\n   *         The manifest object\n   */\n\n\n  var parseManifest = function parseManifest(_ref) {\n    var onwarn = _ref.onwarn,\n        oninfo = _ref.oninfo,\n        manifestString = _ref.manifestString,\n        _ref$customTagParsers = _ref.customTagParsers,\n        customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n        _ref$customTagMappers = _ref.customTagMappers,\n        customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n        experimentalLLHLS = _ref.experimentalLLHLS;\n    var parser = new Parser();\n\n    if (onwarn) {\n      parser.on('warn', onwarn);\n    }\n\n    if (oninfo) {\n      parser.on('info', oninfo);\n    }\n\n    customTagParsers.forEach(function (customParser) {\n      return parser.addParser(customParser);\n    });\n    customTagMappers.forEach(function (mapper) {\n      return parser.addTagMapper(mapper);\n    });\n    parser.push(manifestString);\n    parser.end();\n    var manifest = parser.manifest; // remove llhls features from the parsed manifest\n    // if we don't want llhls support.\n\n    if (!experimentalLLHLS) {\n      ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n        if (manifest.hasOwnProperty(k)) {\n          delete manifest[k];\n        }\n      });\n\n      if (manifest.segments) {\n        manifest.segments.forEach(function (segment) {\n          ['parts', 'preloadHints'].forEach(function (k) {\n            if (segment.hasOwnProperty(k)) {\n              delete segment[k];\n            }\n          });\n        });\n      }\n    }\n\n    if (!manifest.targetDuration) {\n      var targetDuration = 10;\n\n      if (manifest.segments && manifest.segments.length) {\n        targetDuration = manifest.segments.reduce(function (acc, s) {\n          return Math.max(acc, s.duration);\n        }, 0);\n      }\n\n      if (onwarn) {\n        onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n      }\n\n      manifest.targetDuration = targetDuration;\n    }\n\n    var parts = getLastParts(manifest);\n\n    if (parts.length && !manifest.partTargetDuration) {\n      var partTargetDuration = parts.reduce(function (acc, p) {\n        return Math.max(acc, p.duration);\n      }, 0);\n\n      if (onwarn) {\n        onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n        log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n      }\n\n      manifest.partTargetDuration = partTargetDuration;\n    }\n\n    return manifest;\n  };\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n\n  var forEachMediaGroup = function forEachMediaGroup(master, callback) {\n    if (!master.mediaGroups) {\n      return;\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n      if (!master.mediaGroups[mediaType]) {\n        return;\n      }\n\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n   * Adds properties and attributes to the playlist to keep consistent functionality for\n   * playlists throughout VHS.\n   *\n   * @param {Object} config\n   *        Arguments object\n   * @param {Object} config.playlist\n   *        The media playlist\n   * @param {string} [config.uri]\n   *        The uri to the media playlist (if media playlist is not from within a master\n   *        playlist)\n   * @param {string} id\n   *        ID to use for the playlist\n   */\n\n\n  var setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n    var playlist = _ref2.playlist,\n        uri = _ref2.uri,\n        id = _ref2.id;\n    playlist.id = id;\n    playlist.playlistErrors_ = 0;\n\n    if (uri) {\n      // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n      // playlists do not contain their own source URI, but one is needed for consistency in\n      // VHS.\n      playlist.uri = uri;\n    } // For HLS master playlists, even though certain attributes MUST be defined, the\n    // stream may still be played without them.\n    // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n    // manifest.\n    //\n    // To avoid undefined reference errors through the project, and make the code easier\n    // to write/read, add an empty attributes object for these cases.\n\n\n    playlist.attributes = playlist.attributes || {};\n  };\n  /**\n   * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n   * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n   * playlist references to the playlists array.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var setupMediaPlaylists = function setupMediaPlaylists(master) {\n    var i = master.playlists.length;\n\n    while (i--) {\n      var playlist = master.playlists[i];\n      setupMediaPlaylist({\n        playlist: playlist,\n        id: createPlaylistID(i, playlist.uri)\n      });\n      playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n      master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n      master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n      // the stream can be played without it. Although an attributes property may have been\n      // added to the playlist to prevent undefined references, issue a warning to fix the\n      // manifest.\n\n      if (!playlist.attributes.BANDWIDTH) {\n        log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n  /**\n   * Adds resolvedUri properties to each media group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   */\n\n\n  var resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n    forEachMediaGroup(master, function (properties) {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Creates a master playlist wrapper to insert a sole media playlist into.\n   *\n   * @param {Object} media\n   *        Media playlist\n   * @param {string} uri\n   *        The media URI\n   *\n   * @return {Object}\n   *         Master playlist\n   */\n\n\n  var masterForMedia = function masterForMedia(media, uri) {\n    var id = createPlaylistID(0, uri);\n    var master = {\n      mediaGroups: {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      },\n      uri: window.location.href,\n      resolvedUri: window.location.href,\n      playlists: [{\n        uri: uri,\n        id: id,\n        resolvedUri: uri,\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        attributes: {}\n      }]\n    }; // set up ID reference\n\n    master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n    master.playlists[uri] = master.playlists[0];\n    return master;\n  };\n  /**\n   * Does an in-place update of the master manifest to add updated playlist URI references\n   * as well as other properties needed by VHS that aren't included by the parser.\n   *\n   * @param {Object} master\n   *        Master manifest object\n   * @param {string} uri\n   *        The source URI\n   */\n\n\n  var addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n    master.uri = uri;\n\n    for (var i = 0; i < master.playlists.length; i++) {\n      if (!master.playlists[i].uri) {\n        // Set up phony URIs for the playlists since playlists are referenced by their URIs\n        // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n        // TODO: consider adding dummy URIs in mpd-parser\n        var phonyUri = \"placeholder-uri-\" + i;\n        master.playlists[i].uri = phonyUri;\n      }\n    }\n\n    var audioOnlyMaster = isAudioOnly(master);\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey; // add a playlist array under properties\n\n      if (!properties.playlists || !properties.playlists.length) {\n        // If the manifest is audio only and this media group does not have a uri, check\n        // if the media group is located in the main list of playlists. If it is, don't add\n        // placeholder properties as it shouldn't be considered an alternate audio track.\n        if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n          for (var _i = 0; _i < master.playlists.length; _i++) {\n            var p = master.playlists[_i];\n\n            if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n              return;\n            }\n          }\n        }\n\n        properties.playlists = [_extends_1({}, properties)];\n      }\n\n      properties.playlists.forEach(function (p, i) {\n        var id = createPlaylistID(i, groupId);\n\n        if (p.uri) {\n          p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n        } else {\n          // DEPRECATED, this has been added to prevent a breaking change.\n          // previously we only ever had a single media group playlist, so\n          // we mark the first playlist uri without prepending the index as we used to\n          // ideally we would do all of the playlists the same way.\n          p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n          // the placeholder again\n\n          p.resolvedUri = p.uri;\n        }\n\n        p.id = p.id || id; // add an empty attributes object, all playlists are\n        // expected to have this.\n\n        p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n        master.playlists[p.id] = p;\n        master.playlists[p.uri] = p;\n      });\n    });\n    setupMediaPlaylists(master);\n    resolveMediaGroupUris(master);\n  };\n\n  var mergeOptions$2 = videojs.mergeOptions,\n      EventTarget$1 = videojs.EventTarget;\n\n  var addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n    if (media.endList || !media.serverControl) {\n      return uri;\n    }\n\n    var parameters = {};\n\n    if (media.serverControl.canBlockReload) {\n      var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n      var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n      // that we are going to request a part of that preload segment.\n      // the logic below is used to determine that.\n\n      if (preloadSegment) {\n        var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n        var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n        // length of parts, then we know we had part preload hints\n        // and we need to add the _HLS_part= query\n\n        if (nextPart > -1 && nextPart !== parts.length - 1) {\n          // add existing parts to our preload hints\n          // eslint-disable-next-line\n          parameters._HLS_part = nextPart;\n        } // this if statement makes sure that we request the msn\n        // of the preload segment if:\n        // 1. the preload segment had parts (and was not yet a full segment)\n        //    but was added to our segments array\n        // 2. the preload segment had preload hints for parts that are not in\n        //    the manifest yet.\n        // in all other cases we want the segment after the preload segment\n        // which will be given by using media.segments.length because it is 1 based\n        // rather than 0 based.\n\n\n        if (nextPart > -1 || parts.length) {\n          nextMSN--;\n        }\n      } // add _HLS_msn= in front of any _HLS_part query\n      // eslint-disable-next-line\n\n\n      parameters._HLS_msn = nextMSN;\n    }\n\n    if (media.serverControl && media.serverControl.canSkipUntil) {\n      // add _HLS_skip= infront of all other queries.\n      // eslint-disable-next-line\n      parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n    }\n\n    if (Object.keys(parameters).length) {\n      var parsedUri = new window.URL(uri);\n      ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n        if (!parameters.hasOwnProperty(name)) {\n          return;\n        }\n\n        parsedUri.searchParams.set(name, parameters[name]);\n      });\n      uri = parsedUri.toString();\n    }\n\n    return uri;\n  };\n  /**\n   * Returns a new segment object with properties and\n   * the parts array merged.\n   *\n   * @param {Object} a the old segment\n   * @param {Object} b the new segment\n   *\n   * @return {Object} the merged segment\n   */\n\n\n  var updateSegment = function updateSegment(a, b) {\n    if (!a) {\n      return b;\n    }\n\n    var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n    // and the new one does not, remove preload hints.\n\n    if (a.preloadHints && !b.preloadHints) {\n      delete result.preloadHints;\n    } // if only the old segment has parts\n    // then the parts are no longer valid\n\n\n    if (a.parts && !b.parts) {\n      delete result.parts; // if both segments have parts\n      // copy part propeties from the old segment\n      // to the new one.\n    } else if (a.parts && b.parts) {\n      for (var i = 0; i < b.parts.length; i++) {\n        if (a.parts && a.parts[i]) {\n          result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n        }\n      }\n    } // set skipped to false for segments that have\n    // have had information merged from the old segment.\n\n\n    if (!a.skipped && b.skipped) {\n      result.skipped = false;\n    } // set preload to false for segments that have\n    // had information added in the new segment.\n\n\n    if (a.preload && !b.preload) {\n      result.preload = false;\n    }\n\n    return result;\n  };\n  /**\n   * Returns a new array of segments that is the result of merging\n   * properties from an older list of segments onto an updated\n   * list. No properties on the updated playlist will be ovewritten.\n   *\n   * @param {Array} original the outdated list of segments\n   * @param {Array} update the updated list of segments\n   * @param {number=} offset the index of the first update\n   * segment in the original segment list. For non-live playlists,\n   * this should always be zero and does not need to be\n   * specified. For live playlists, it should be the difference\n   * between the media sequence numbers in the original and updated\n   * playlists.\n   * @return {Array} a list of merged segment objects\n   */\n\n\n  var updateSegments = function updateSegments(original, update, offset) {\n    var oldSegments = original.slice();\n    var newSegments = update.slice();\n    offset = offset || 0;\n    var result = [];\n    var currentMap;\n\n    for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n      var oldSegment = oldSegments[newIndex + offset];\n      var newSegment = newSegments[newIndex];\n\n      if (oldSegment) {\n        currentMap = oldSegment.map || currentMap;\n        result.push(updateSegment(oldSegment, newSegment));\n      } else {\n        // carry over map to new segment if it is missing\n        if (currentMap && !newSegment.map) {\n          newSegment.map = currentMap;\n        }\n\n        result.push(newSegment);\n      }\n    }\n\n    return result;\n  };\n\n  var resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n    // preloadSegment will not have a uri at all\n    // as the segment isn't actually in the manifest yet, only parts\n    if (!segment.resolvedUri && segment.uri) {\n      segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n    }\n\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n    }\n\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n    }\n\n    if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n      segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n    }\n\n    if (segment.parts && segment.parts.length) {\n      segment.parts.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n\n    if (segment.preloadHints && segment.preloadHints.length) {\n      segment.preloadHints.forEach(function (p) {\n        if (p.resolvedUri) {\n          return;\n        }\n\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n  };\n\n  var getAllSegments = function getAllSegments(media) {\n    var segments = media.segments || [];\n    var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n    // a usable segment, only include a preloadSegment that has\n    // parts.\n\n    if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n      // if preloadHints has a MAP that means that the\n      // init segment is going to change. We cannot use any of the parts\n      // from this preload segment.\n      if (preloadSegment.preloadHints) {\n        for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n          if (preloadSegment.preloadHints[i].type === 'MAP') {\n            return segments;\n          }\n        }\n      } // set the duration for our preload segment to target duration.\n\n\n      preloadSegment.duration = media.targetDuration;\n      preloadSegment.preload = true;\n      segments.push(preloadSegment);\n    }\n\n    return segments;\n  }; // consider the playlist unchanged if the playlist object is the same or\n  // the number of segments is equal, the media sequence number is unchanged,\n  // and this playlist hasn't become the end of the playlist\n\n\n  var isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n    return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n  };\n  /**\n    * Returns a new master playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original master playlist, null is returned.\n    *\n    * @param {Object} master a parsed master M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * master playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n\n  var updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n    if (unchangedCheck === void 0) {\n      unchangedCheck = isPlaylistUnchanged;\n    }\n\n    var result = mergeOptions$2(master, {});\n    var oldMedia = result.playlists[newMedia.id];\n\n    if (!oldMedia) {\n      return null;\n    }\n\n    if (unchangedCheck(oldMedia, newMedia)) {\n      return null;\n    }\n\n    newMedia.segments = getAllSegments(newMedia);\n    var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n    if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n      delete mergedPlaylist.preloadSegment;\n    } // if the update could overlap existing segment information, merge the two segment lists\n\n\n    if (oldMedia.segments) {\n      if (newMedia.skip) {\n        newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n        // old properties into the new segments\n\n        for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n          newMedia.segments.unshift({\n            skipped: true\n          });\n        }\n      }\n\n      mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n\n    mergedPlaylist.segments.forEach(function (segment) {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (var _i = 0; _i < result.playlists.length; _i++) {\n      if (result.playlists[_i].id === newMedia.id) {\n        result.playlists[_i] = mergedPlaylist;\n      }\n    }\n\n    result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n    result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (!properties.playlists) {\n        return;\n      }\n\n      for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n        if (newMedia.id === properties.playlists[_i2].id) {\n          properties.playlists[_i2] = mergedPlaylist;\n        }\n      }\n    });\n    return result;\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n\n  var refreshDelay = function refreshDelay(media, update) {\n    var segments = media.segments || [];\n    var lastSegment = segments[segments.length - 1];\n    var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n    var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n    if (update && lastDuration) {\n      return lastDuration * 1000;\n    } // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n\n\n    return (media.partTargetDuration || media.targetDuration || 10) * 500;\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {string|Object} src url or object of manifest\n   * @param {boolean} withCredentials the withCredentials xhr option\n   * @class\n   */\n\n\n  var PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(PlaylistLoader, _EventTarget);\n\n    function PlaylistLoader(src, vhs, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or object is required');\n      }\n\n      _this.logger_ = logger('PlaylistLoader');\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.src = src;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n      var vhsOptions = vhs.options_;\n      _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n      _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n      _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n      if (videojs.browser.IE_VERSION) {\n        _this.experimentalLLHLS = false;\n      } // initialize the loader state\n\n\n      _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(assertThisInitialized(_this));\n\n      _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n      return _this;\n    }\n\n    var _proto = PlaylistLoader.prototype;\n\n    _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n      var _this2 = this;\n\n      if (this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      var media = this.media();\n      var uri = resolveUrl(this.master.uri, media.uri);\n\n      if (this.experimentalLLHLS) {\n        uri = addLLHLSQueryDirectives(uri, media);\n      }\n\n      this.state = 'HAVE_CURRENT_METADATA';\n      this.request = this.vhs_.xhr({\n        uri: uri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        }\n\n        if (error) {\n          return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n        }\n\n        _this2.haveMetadata({\n          playlistString: _this2.request.responseText,\n          url: _this2.media().uri,\n          id: _this2.media().id\n        });\n      });\n    };\n\n    _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n      var uri = playlist.uri,\n          id = playlist.id; // any in-flight request is now finished\n\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[id],\n        status: xhr.status,\n        message: \"HLS playlist request error at URL: \" + uri + \".\",\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    };\n\n    _proto.parseManifest_ = function parseManifest_(_ref) {\n      var _this3 = this;\n\n      var url = _ref.url,\n          manifestString = _ref.manifestString;\n      return parseManifest({\n        onwarn: function onwarn(_ref2) {\n          var message = _ref2.message;\n          return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n        },\n        oninfo: function oninfo(_ref3) {\n          var message = _ref3.message;\n          return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n        },\n        manifestString: manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        experimentalLLHLS: this.experimentalLLHLS\n      });\n    }\n    /**\n     * Update the playlist loader's state in response to a new or updated playlist.\n     *\n     * @param {string} [playlistString]\n     *        Playlist string (if playlistObject is not provided)\n     * @param {Object} [playlistObject]\n     *        Playlist object (if playlistString is not provided)\n     * @param {string} url\n     *        URL of playlist\n     * @param {string} id\n     *        ID to use for playlist\n     */\n    ;\n\n    _proto.haveMetadata = function haveMetadata(_ref4) {\n      var playlistString = _ref4.playlistString,\n          playlistObject = _ref4.playlistObject,\n          url = _ref4.url,\n          id = _ref4.id; // any in-flight request is now finished\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var playlist = playlistObject || this.parseManifest_({\n        url: url,\n        manifestString: playlistString\n      });\n      playlist.lastRequest = Date.now();\n      setupMediaPlaylist({\n        playlist: playlist,\n        uri: url,\n        id: id\n      }); // merge this playlist into the master\n\n      var update = updateMaster$1(this.master, playlist);\n      this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n      this.pendingMedia_ = null;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n      this.trigger('loadedplaylist');\n    }\n    /**\n      * Abort any outstanding work and clean up.\n      */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      window.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n      * When called without any arguments, returns the currently\n      * active media playlist. When called with a single argument,\n      * triggers the playlist loader to asynchronously switch to the\n      * specified media playlist. Calling this method while the\n      * loader is in the HAVE_NOTHING causes an error to be emitted\n      * but otherwise has no effect.\n      *\n      * @param {Object=} playlist the parsed media playlist\n      * object to switch to\n      * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n      *\n      * @return {Playlist} the current loaded media\n      */\n    ;\n\n    _proto.media = function media(playlist, shouldDelay) {\n      var _this4 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window.clearTimeout(this.finalRenditionTimeout);\n\n      if (shouldDelay) {\n        var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n      var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n      if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n      // media playlist or, for the case of demuxed audio, a resolved audio media group)\n      playlist.endList && playlist.segments.length) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n\n          if (startingState === 'HAVE_MASTER') {\n            // The initial playlist was a master manifest, and the first media selected was\n            // also provided (in the form of a resolved playlist object) as part of the\n            // source object (rather than just a URL). Therefore, since the media playlist\n            // doesn't need to be requested, loadedmetadata won't trigger as part of the\n            // normal flow, and needs an explicit trigger here.\n            this.trigger('loadedmetadata');\n          } else {\n            this.trigger('mediachange');\n          }\n        }\n\n        return;\n      } // We update/set the timeout here so that live playlists\n      // that are not a media change will \"start\" the loader as expected.\n      // We expect that this function will start the media update timeout\n      // cycle again. This also prevents a playlist switch failure from\n      // causing us to stall during live.\n\n\n      this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.pendingMedia_ = playlist;\n      this.request = this.vhs_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        playlist.lastRequest = Date.now();\n        playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this4.playlistRequestError(_this4.request, playlist, startingState);\n        }\n\n        _this4.haveMetadata({\n          playlistString: req.responseText,\n          url: playlist.uri,\n          id: playlist.id\n        }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this4.trigger('loadedmetadata');\n        } else {\n          _this4.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      this.stopRequest();\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.load = function load(shouldDelay) {\n      var _this5 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n\n      var media = this.media();\n\n      if (shouldDelay) {\n        var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          _this5.mediaUpdateTimeout = null;\n\n          _this5.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n      var _this6 = this;\n\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      } // we only have use mediaupdatetimeout for live playlists.\n\n\n      if (!this.media() || this.media().endList) {\n        return;\n      }\n\n      this.mediaUpdateTimeout = window.setTimeout(function () {\n        _this6.mediaUpdateTimeout = null;\n\n        _this6.trigger('mediaupdatetimeout');\n\n        _this6.updateMediaUpdateTimeout_(delay);\n      }, delay);\n    }\n    /**\n     * start loading of the playlist\n     */\n    ;\n\n    _proto.start = function start() {\n      var _this7 = this;\n\n      this.started = true;\n\n      if (typeof this.src === 'object') {\n        // in the case of an entirely constructed manifest object (meaning there's no actual\n        // manifest on a server), default the uri to the page's href\n        if (!this.src.uri) {\n          this.src.uri = window.location.href;\n        } // resolvedUri is added on internally after the initial request. Since there's no\n        // request for pre-resolved manifests, add on resolvedUri here.\n\n\n        this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n        // request can be skipped (since the top level of the manifest, at a minimum, is\n        // already available as a parsed manifest object). However, if the manifest object\n        // represents a master playlist, some media playlists may need to be resolved before\n        // the starting segment list is available. Therefore, go directly to setup of the\n        // initial playlist, and let the normal flow continue from there.\n        //\n        // Note that the call to setup is asynchronous, as other sections of VHS may assume\n        // that the first request is asynchronous.\n\n        setTimeout(function () {\n          _this7.setupInitialPlaylist(_this7.src);\n        }, 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.vhs_.xhr({\n        uri: this.src,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this7.request = null;\n\n        if (error) {\n          _this7.error = {\n            status: req.status,\n            message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this7.state === 'HAVE_NOTHING') {\n            _this7.started = false;\n          }\n\n          return _this7.trigger('error');\n        }\n\n        _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n        var manifest = _this7.parseManifest_({\n          manifestString: req.responseText,\n          url: _this7.src\n        });\n\n        _this7.setupInitialPlaylist(manifest);\n      });\n    };\n\n    _proto.srcUri = function srcUri() {\n      return typeof this.src === 'string' ? this.src : this.src.uri;\n    }\n    /**\n     * Given a manifest object that's either a master or media playlist, trigger the proper\n     * events and set the state of the playlist loader.\n     *\n     * If the manifest object represents a master playlist, `loadedplaylist` will be\n     * triggered to allow listeners to select a playlist. If none is selected, the loader\n     * will default to the first one in the playlists array.\n     *\n     * If the manifest object represents a media playlist, `loadedplaylist` will be\n     * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n     *\n     * In the case of a media playlist, a master playlist object wrapper with one playlist\n     * will be created so that all logic can handle playlists in the same fashion (as an\n     * assumed manifest object schema).\n     *\n     * @param {Object} manifest\n     *        The parsed manifest object\n     */\n    ;\n\n    _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n      this.state = 'HAVE_MASTER';\n\n      if (manifest.playlists) {\n        this.master = manifest;\n        addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n        // then resolve URIs in advance, as they are usually done after a playlist request,\n        // which may not happen if the playlist is resolved.\n\n        manifest.playlists.forEach(function (playlist) {\n          playlist.segments = getAllSegments(playlist);\n          playlist.segments.forEach(function (segment) {\n            resolveSegmentUris(segment, playlist.resolvedUri);\n          });\n        });\n        this.trigger('loadedplaylist');\n\n        if (!this.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          this.media(this.master.playlists[0]);\n        }\n\n        return;\n      } // In order to support media playlists passed in as vhs-json, the case where the uri\n      // is not provided as part of the manifest should be considered, and an appropriate\n      // default used.\n\n\n      var uri = this.srcUri() || window.location.href;\n      this.master = masterForMedia(manifest, uri);\n      this.haveMetadata({\n        playlistObject: manifest,\n        url: uri,\n        id: this.master.playlists[0].id\n      });\n      this.trigger('loadedmetadata');\n    };\n\n    return PlaylistLoader;\n  }(EventTarget$1);\n  /**\n   * @file xhr.js\n   */\n\n\n  var videojsXHR = videojs.xhr,\n      mergeOptions$1 = videojs.mergeOptions;\n\n  var callbackWrapper = function callbackWrapper(request, error, response, callback) {\n    var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n    if (!error && reqResponse) {\n      request.responseTime = Date.now();\n      request.roundTripTime = request.responseTime - request.requestTime;\n      request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n      if (!request.bandwidth) {\n        request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n      }\n    }\n\n    if (response.headers) {\n      request.responseHeaders = response.headers;\n    } // videojs.xhr now uses a specific code on the error\n    // object to signal that a request has timed out instead\n    // of setting a boolean on the request object\n\n\n    if (error && error.code === 'ETIMEDOUT') {\n      request.timedout = true;\n    } // videojs.xhr no longer considers status codes outside of 200 and 0\n    // (for file uris) to be errors, but the old XHR did, so emulate that\n    // behavior. Status 206 may be used in response to byterange requests.\n\n\n    if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n      error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n    }\n\n    callback(error, request);\n  };\n\n  var xhrFactory = function xhrFactory() {\n    var xhr = function XhrFunction(options, callback) {\n      // Add a default timeout\n      options = mergeOptions$1({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n\n      var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        var newOptions = beforeRequest(options);\n\n        if (newOptions) {\n          options = newOptions;\n        }\n      } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n      // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n      var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n      var request = xhrMethod(options, function (error, response) {\n        return callbackWrapper(request, error, response, callback);\n      });\n      var originalAbort = request.abort;\n\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n\n      request.uri = options.uri;\n      request.requestTime = Date.now();\n      return request;\n    };\n\n    xhr.original = true;\n    return xhr;\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n\n  var byterangeStr = function byterangeStr(byterange) {\n    // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    var byterangeEnd;\n    var byterangeStart = byterange.offset;\n\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      byterangeEnd = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      byterangeEnd = byterange.offset + byterange.length - 1;\n    }\n\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n\n  var segmentXhrHeaders = function segmentXhrHeaders(segment) {\n    var headers = {};\n\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n\n    return headers;\n  };\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {number} i the iterator on the range to convert\n   * @return {string} the range in string format\n   */\n\n\n  var textRange = function textRange(range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {number} e The number\n   * @param {number} i the iterator\n   * @return {string} the hex formatted number as a string\n   */\n\n\n  var formatHexString = function formatHexString(e, i) {\n    var value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n\n  var formatAsciiString = function formatAsciiString(e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   *\n   * @param {Object} initSegment\n   *        the init segment object.\n   *\n   * @return {string} the generated init segment id\n   */\n\n\n  var initSegmentId = function initSegmentId(initSegment) {\n    var byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * Returns a unique string identifier for a media segment key.\n   *\n   * @param {Object} key the encryption key\n   * @return {string} the unique id for the media segment key.\n   */\n\n\n  var segmentKeyId = function segmentKeyId(key) {\n    return key.resolvedUri;\n  };\n  /**\n   * utils to help dump binary data to the console\n   *\n   * @param {Array|TypedArray} data\n   *        data to dump to a string\n   *\n   * @return {string} the data as a hex string.\n   */\n\n\n  var hexDump = function hexDump(data) {\n    var bytes = Array.prototype.slice.call(data);\n    var step = 16;\n    var result = '';\n    var hex;\n    var ascii;\n\n    for (var j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n\n    return result;\n  };\n\n  var tagDump = function tagDump(_ref) {\n    var bytes = _ref.bytes;\n    return hexDump(bytes);\n  };\n\n  var textRanges = function textRanges(ranges) {\n    var result = '';\n    var i;\n\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n\n    return result;\n  };\n\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    segmentKeyId: segmentKeyId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  }); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  var SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  var playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n\n    var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    var offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n\n  var originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {string} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    var dateTimeObject;\n\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segment = playlist.segments[0];\n\n    if (dateTimeObject < segment.dateTimeObject) {\n      // Requested time is before stream start.\n      return null;\n    }\n\n    for (var i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n    var lastSegmentStart = lastSegment.dateTimeObject;\n    var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n\n    if (dateTimeObject > lastSegmentStart) {\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n\n  var findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n\n    var segmentEnd = 0;\n    var segment;\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n\n    var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n\n      segment = lastSegment;\n    }\n\n    return {\n      segment: segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {string} programTime The programTime as an ISO-8601 string\n   * @return {number} offset\n   */\n\n\n  var getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n    var segmentDateTime;\n    var programDateTime;\n\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n\n    var segmentTimeEpoch = segmentDateTime.getTime();\n    var programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n\n  var verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < playlist.segments.length; i++) {\n      var segment = playlist.segments[i];\n\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @return {string} err.message A detailed error message\n   * @return {Object} programTime\n   * @return {number} programTime.mediaSeconds The streamTime in seconds\n   * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n\n  var getProgramTime = function getProgramTime(_ref) {\n    var playlist = _ref.playlist,\n        _ref$time = _ref.time,\n        time = _ref$time === void 0 ? undefined : _ref$time,\n        callback = _ref.callback;\n\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n\n    var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n\n    var programTimeObject = {\n      mediaSeconds: time\n    };\n    var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @return {string} err.message A detailed error message\n   * @return {number} newTime The exact time that was seeked to in seconds\n   */\n\n\n  var seekToProgramTime = function seekToProgramTime(_ref2) {\n    var programTime = _ref2.programTime,\n        playlist = _ref2.playlist,\n        _ref2$retryCount = _ref2.retryCount,\n        retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n        seekTo = _ref2.seekTo,\n        _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n        pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n        tech = _ref2.tech,\n        callback = _ref2.callback;\n\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n\n    var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: programTime + \" was not found in the stream\"\n      });\n    }\n\n    var segment = matchedSegment.segment;\n    var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: programTime + \" is not buffered yet. Try again\"\n        });\n      }\n\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', function () {\n        seekToProgramTime({\n          programTime: programTime,\n          playlist: playlist,\n          retryCount: retryCount - 1,\n          seekTo: seekTo,\n          pauseAfterSeek: pauseAfterSeek,\n          tech: tech,\n          callback: callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n\n    var seekToTime = segment.start + mediaOffset;\n\n    var seekedCallback = function seekedCallback() {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n\n    seekTo(seekToTime);\n  }; // which will only happen if the request is complete.\n\n\n  var callbackOnCompleted = function callbackOnCompleted(request, cb) {\n    if (request.readyState === 4) {\n      return cb();\n    }\n\n    return;\n  };\n\n  var containerRequest = function containerRequest(uri, xhr, cb) {\n    var bytes = [];\n    var id3Offset;\n    var finished = false;\n\n    var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n      req.abort();\n      finished = true;\n      return cb(err, req, type, _bytes);\n    };\n\n    var progressListener = function progressListener(error, request) {\n      if (finished) {\n        return;\n      }\n\n      if (error) {\n        return endRequestAndCallback(error, request, '', bytes);\n      } // grap the new part of content that was just downloaded\n\n\n      var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n      bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n      id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n      // or we need at least two bytes after an id3Offset\n\n      if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n      // to see the second sync byte, wait until we have enough data\n      // before declaring it ts\n\n      if (type === 'ts' && bytes.length < 188) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      } // this may be an unsynced ts segment\n      // wait for 376 bytes before detecting no container\n\n\n      if (!type && bytes.length < 376) {\n        return callbackOnCompleted(request, function () {\n          return endRequestAndCallback(error, request, '', bytes);\n        });\n      }\n\n      return endRequestAndCallback(null, request, type, bytes);\n    };\n\n    var options = {\n      uri: uri,\n      beforeSend: function beforeSend(request) {\n        // this forces the browser to pass the bytes to us unprocessed\n        request.overrideMimeType('text/plain; charset=x-user-defined');\n        request.addEventListener('progress', function (_ref) {\n          _ref.total;\n          _ref.loaded;\n          return callbackWrapper(request, null, {\n            statusCode: request.status\n          }, progressListener);\n        });\n      }\n    };\n    var request = xhr(options, function (error, response) {\n      return callbackWrapper(request, error, response, progressListener);\n    });\n    return request;\n  };\n\n  var EventTarget = videojs.EventTarget,\n      mergeOptions = videojs.mergeOptions;\n\n  var dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n    if (!isPlaylistUnchanged(a, b)) {\n      return false;\n    } // for dash the above check will often return true in scenarios where\n    // the playlist actually has changed because mediaSequence isn't a\n    // dash thing, and we often set it to 1. So if the playlists have the same amount\n    // of segments we return true.\n    // So for dash we need to make sure that the underlying segments are different.\n    // if sidx changed then the playlists are different.\n\n\n    if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n      return false;\n    } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n      return false;\n    } // one or the other does not have segments\n    // there was a change.\n\n\n    if (a.segments && !b.segments || !a.segments && b.segments) {\n      return false;\n    } // neither has segments nothing changed\n\n\n    if (!a.segments && !b.segments) {\n      return true;\n    } // check segments themselves\n\n\n    for (var i = 0; i < a.segments.length; i++) {\n      var aSegment = a.segments[i];\n      var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n      if (aSegment.uri !== bSegment.uri) {\n        return false;\n      } // neither segment has a byterange, there will be no byterange change.\n\n\n      if (!aSegment.byterange && !bSegment.byterange) {\n        continue;\n      }\n\n      var aByterange = aSegment.byterange;\n      var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n      if (aByterange && !bByterange || !aByterange && bByterange) {\n        return false;\n      } // if both segments have byterange with different offsets, there was a change.\n\n\n      if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n        return false;\n      }\n    } // if everything was the same with segments, this is the same playlist.\n\n\n    return true;\n  };\n  /**\n   * Parses the master XML string and updates playlist URI references.\n   *\n   * @param {Object} config\n   *        Object of arguments\n   * @param {string} config.masterXml\n   *        The mpd XML\n   * @param {string} config.srcUrl\n   *        The mpd URL\n   * @param {Date} config.clientOffset\n   *         A time difference between server and client\n   * @param {Object} config.sidxMapping\n   *        SIDX mappings for moof/mdat URIs and byte ranges\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n\n  var parseMasterXml = function parseMasterXml(_ref) {\n    var masterXml = _ref.masterXml,\n        srcUrl = _ref.srcUrl,\n        clientOffset = _ref.clientOffset,\n        sidxMapping = _ref.sidxMapping,\n        previousManifest = _ref.previousManifest;\n    var manifest = parse(masterXml, {\n      manifestUri: srcUrl,\n      clientOffset: clientOffset,\n      sidxMapping: sidxMapping,\n      previousManifest: previousManifest\n    });\n    addPropertiesToMaster(manifest, srcUrl);\n    return manifest;\n  };\n  /**\n   * Returns a new master manifest that is the result of merging an updated master manifest\n   * into the original version.\n   *\n   * @param {Object} oldMaster\n   *        The old parsed mpd object\n   * @param {Object} newMaster\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original master manifest with the updated media\n   *         playlists merged in\n   */\n\n\n  var updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n    var noChanges = true;\n    var update = mergeOptions(oldMaster, {\n      // These are top level properties that can be updated\n      duration: newMaster.duration,\n      minimumUpdatePeriod: newMaster.minimumUpdatePeriod,\n      timelineStarts: newMaster.timelineStarts\n    }); // First update the playlists in playlist list\n\n    for (var i = 0; i < newMaster.playlists.length; i++) {\n      var playlist = newMaster.playlists[i];\n\n      if (playlist.sidx) {\n        var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n        if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n          addSidxSegmentsToPlaylist$1(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n        }\n      }\n\n      var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n      if (playlistUpdate) {\n        update = playlistUpdate;\n        noChanges = false;\n      }\n    } // Then update media group playlists\n\n\n    forEachMediaGroup(newMaster, function (properties, type, group, label) {\n      if (properties.playlists && properties.playlists.length) {\n        var id = properties.playlists[0].id;\n\n        var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n        if (_playlistUpdate) {\n          update = _playlistUpdate; // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n          noChanges = false;\n        }\n      }\n    });\n\n    if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      noChanges = false;\n    }\n\n    if (noChanges) {\n      return null;\n    }\n\n    return update;\n  }; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n  // If the SIDXs have maps, the two maps should match,\n  // both `a` and `b` missing SIDXs is considered matching.\n  // If `a` or `b` but not both have a map, they aren't matching.\n\n\n  var equivalentSidx = function equivalentSidx(a, b) {\n    var neitherMap = Boolean(!a.map && !b.map);\n    var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n    return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n  }; // exported for testing\n\n\n  var compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n    var newSidxMapping = {};\n\n    for (var id in playlists) {\n      var playlist = playlists[id];\n      var currentSidxInfo = playlist.sidx;\n\n      if (currentSidxInfo) {\n        var key = generateSidxKey(currentSidxInfo);\n\n        if (!oldSidxMapping[key]) {\n          break;\n        }\n\n        var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n        if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n          newSidxMapping[key] = oldSidxMapping[key];\n        }\n      }\n    }\n\n    return newSidxMapping;\n  };\n  /**\n   *  A function that filters out changed items as they need to be requested separately.\n   *\n   *  The method is exported for testing\n   *\n   *  @param {Object} master the parsed mpd XML returned via mpd-parser\n   *  @param {Object} oldSidxMapping the SIDX to compare against\n   */\n\n\n  var filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n    var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n    var mediaGroupSidx = videoSidx;\n    forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n      if (properties.playlists && properties.playlists.length) {\n        var playlists = properties.playlists;\n        mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n      }\n    });\n    return mediaGroupSidx;\n  };\n\n  var DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n    inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n\n\n    function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _EventTarget.call(this) || this;\n      _this.masterPlaylistLoader_ = masterPlaylistLoader || assertThisInitialized(_this);\n\n      if (!masterPlaylistLoader) {\n        _this.isMaster_ = true;\n      }\n\n      var _options = options,\n          _options$withCredenti = _options.withCredentials,\n          withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n          _options$handleManife = _options.handleManifestRedirects,\n          handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n      _this.vhs_ = vhs;\n      _this.withCredentials = withCredentials;\n      _this.handleManifestRedirects = handleManifestRedirects;\n\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or object is required');\n      } // event naming?\n\n\n      _this.on('minimumUpdatePeriod', function () {\n        _this.refreshXml_();\n      }); // live playlist staleness timeout\n\n\n      _this.on('mediaupdatetimeout', function () {\n        _this.refreshMedia_(_this.media().id);\n      });\n\n      _this.state = 'HAVE_NOTHING';\n      _this.loadedPlaylists_ = {};\n      _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n      // The masterPlaylistLoader will be created with a string\n\n      if (_this.isMaster_) {\n        _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n        // once multi-period is refactored\n\n        _this.masterPlaylistLoader_.sidxMapping_ = {};\n      } else {\n        _this.childPlaylist_ = srcUrlOrPlaylist;\n      }\n\n      return _this;\n    }\n\n    var _proto = DashPlaylistLoader.prototype;\n\n    _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n      // disposed\n      if (!this.request) {\n        return true;\n      } // pending request is cleared\n\n\n      this.request = null;\n\n      if (err) {\n        // use the provided error object or create one\n        // based on the request/response\n        this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n          status: request.status,\n          message: 'DASH request error at URL: ' + request.uri,\n          response: request.response,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (startingState) {\n          this.state = startingState;\n        }\n\n        this.trigger('error');\n        return true;\n      }\n    }\n    /**\n     * Verify that the container of the sidx segment can be parsed\n     * and if it can, get and parse that segment.\n     */\n    ;\n\n    _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n      var _this2 = this;\n\n      var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n      if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n        // keep this function async\n        this.mediaRequest_ = window.setTimeout(function () {\n          return cb(false);\n        }, 0);\n        return;\n      } // resolve the segment URL relative to the playlist\n\n\n      var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n      var fin = function fin(err, request) {\n        if (_this2.requestErrored_(err, request, startingState)) {\n          return;\n        }\n\n        var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n        var sidx;\n\n        try {\n          sidx = parseSidx_1(toUint8(request.response).subarray(8));\n        } catch (e) {\n          // sidx parsing failed.\n          _this2.requestErrored_(e, request, startingState);\n\n          return;\n        }\n\n        sidxMapping[sidxKey] = {\n          sidxInfo: playlist.sidx,\n          sidx: sidx\n        };\n        addSidxSegmentsToPlaylist$1(playlist, sidx, playlist.sidx.resolvedUri);\n        return cb(true);\n      };\n\n      this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n        if (err) {\n          return fin(err, request);\n        }\n\n        if (!container || container !== 'mp4') {\n          return fin({\n            status: request.status,\n            message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n            // response is just bytes in this case\n            // but we really don't want to return that.\n            response: '',\n            playlist: playlist,\n            internal: true,\n            blacklistDuration: Infinity,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          }, request);\n        } // if we already downloaded the sidx bytes in the container request, use them\n\n\n        var _playlist$sidx$bytera = playlist.sidx.byterange,\n            offset = _playlist$sidx$bytera.offset,\n            length = _playlist$sidx$bytera.length;\n\n        if (bytes.length >= length + offset) {\n          return fin(err, {\n            response: bytes.subarray(offset, offset + length),\n            status: request.status,\n            uri: request.uri\n          });\n        } // otherwise request sidx bytes\n\n\n        _this2.request = _this2.vhs_.xhr({\n          uri: uri,\n          responseType: 'arraybuffer',\n          headers: segmentXhrHeaders({\n            byterange: playlist.sidx.byterange\n          })\n        }, fin);\n      });\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window.clearTimeout(this.mediaRequest_);\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      this.mediaRequest_ = null;\n      this.minimumUpdatePeriodTimeout_ = null;\n\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.off();\n    };\n\n    _proto.hasPendingRequest = function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    };\n\n    _proto.stopRequest = function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    };\n\n    _proto.media = function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n        // everything is ready just continue to haveMetadata\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: playlist\n        });\n      });\n    };\n\n    _proto.haveMetadata = function haveMetadata(_ref2) {\n      var startingState = _ref2.startingState,\n          playlist = _ref2.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    };\n\n    _proto.pause = function pause() {\n      if (this.masterPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n        this.masterPlaylistLoader_.createMupOnMedia_ = null;\n      }\n\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n\n      if (this.isMaster_) {\n        window.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n        this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    };\n\n    _proto.load = function load(isFinalRendition) {\n      var _this4 = this;\n\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        // Check to see if this is the master loader and the MUP was cleared (this happens\n        // when the loader was paused). `media` should be set at this point since one is always\n        // set during `start()`.\n        if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n          // Trigger minimumUpdatePeriod to refresh the master manifest\n          this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n          this.updateMinimumUpdatePeriodTimeout_();\n        }\n\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    };\n\n    _proto.start = function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (!this.isMaster_) {\n        this.mediaRequest_ = window.setTimeout(function () {\n          return _this5.haveMaster_();\n        }, 0);\n        return;\n      }\n\n      this.requestMaster_(function (req, masterChanged) {\n        _this5.haveMaster_();\n\n        if (!_this5.hasPendingRequest() && !_this5.media_) {\n          _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n        }\n      });\n    };\n\n    _proto.requestMaster_ = function requestMaster_(cb) {\n      var _this6 = this;\n\n      this.request = this.vhs_.xhr({\n        uri: this.masterPlaylistLoader_.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        if (_this6.requestErrored_(error, req)) {\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return;\n        }\n\n        var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n        _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this6.masterLoaded_ = Date.now();\n        }\n\n        _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n        if (masterChanged) {\n          _this6.handleMaster_();\n\n          _this6.syncClientServerClock_(function () {\n            return cb(req, masterChanged);\n          });\n\n          return;\n        }\n\n        return cb(req, masterChanged);\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n    ;\n\n    _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n      var _this7 = this;\n\n      var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.vhs_.xhr({\n        uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this7.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this7.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    };\n\n    _proto.haveMaster_ = function haveMaster_() {\n      this.state = 'HAVE_MASTER';\n\n      if (this.isMaster_) {\n        // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    };\n\n    _proto.handleMaster_ = function handleMaster_() {\n      // clear media request\n      this.mediaRequest_ = null;\n      var oldMaster = this.masterPlaylistLoader_.master;\n      var newMaster = parseMasterXml({\n        masterXml: this.masterPlaylistLoader_.masterXml_,\n        srcUrl: this.masterPlaylistLoader_.srcUrl,\n        clientOffset: this.masterPlaylistLoader_.clientOffset_,\n        sidxMapping: this.masterPlaylistLoader_.sidxMapping_,\n        previousManifest: oldMaster\n      }); // if we have an old master to compare the new master against\n\n      if (oldMaster) {\n        newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n      } // only update master if we have a new master\n\n\n      this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n      var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n      if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n        this.masterPlaylistLoader_.srcUrl = location;\n      }\n\n      if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      return Boolean(newMaster);\n    };\n\n    _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n      var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n      // a new one will be added if needed.\n\n      if (mpl.createMupOnMedia_) {\n        mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n        mpl.createMupOnMedia_ = null;\n      } // clear any pending timeouts\n\n\n      if (mpl.minimumUpdatePeriodTimeout_) {\n        window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n        mpl.minimumUpdatePeriodTimeout_ = null;\n      }\n\n      var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n      // MPD has no future validity, so a new one will need to be acquired when new\n      // media segments are to be made available. Thus, we use the target duration\n      // in this case\n\n      if (mup === 0) {\n        if (mpl.media()) {\n          mup = mpl.media().targetDuration * 1000;\n        } else {\n          mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n          mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n        }\n      } // if minimumUpdatePeriod is invalid or <= zero, which\n      // can happen when a live video becomes VOD. skip timeout\n      // creation.\n\n\n      if (typeof mup !== 'number' || mup <= 0) {\n        if (mup < 0) {\n          this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n        }\n\n        return;\n      }\n\n      this.createMUPTimeout_(mup);\n    };\n\n    _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n      var mpl = this.masterPlaylistLoader_;\n      mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(function () {\n        mpl.minimumUpdatePeriodTimeout_ = null;\n        mpl.trigger('minimumUpdatePeriod');\n        mpl.createMUPTimeout_(mup);\n      }, mup);\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     */\n    ;\n\n    _proto.refreshXml_ = function refreshXml_() {\n      var _this8 = this;\n\n      this.requestMaster_(function (req, masterChanged) {\n        if (!masterChanged) {\n          return;\n        }\n\n        if (_this8.media_) {\n          _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n        } // This will filter out updated sidx info from the mapping\n\n\n        _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n        _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n          // TODO: do we need to reload the current playlist?\n          _this8.refreshMedia_(_this8.media().id);\n        });\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n    ;\n\n    _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n      var _this9 = this;\n\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      } // for master we have to reparse the master xml\n      // to re-create segments based on current timing values\n      // which may change media. We only skip updating master\n      // if this is the first time this.media_ is being set.\n      // as master was just parsed in that case.\n\n\n      if (this.media_ && this.isMaster_) {\n        this.handleMaster_();\n      }\n\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n      if (mediaChanged) {\n        this.media_ = playlists[mediaID];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.mediaUpdateTimeout) {\n        var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n          if (_this9.media().endList) {\n            return;\n          }\n\n          _this9.mediaUpdateTimeout = window.setTimeout(function () {\n            _this9.trigger('mediaupdatetimeout');\n\n            createMediaUpdateTimeout();\n          }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n        };\n\n        createMediaUpdateTimeout();\n      }\n\n      this.trigger('loadedplaylist');\n    };\n\n    return DashPlaylistLoader;\n  }(EventTarget);\n\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    BACK_BUFFER_LENGTH: 30,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    // TODO: Remove this when experimentalBufferBasedABR is removed\n    EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n    BUFFER_LOW_WATER_LINE_RATE: 1,\n    // If the buffer is greater than the high water line, we won't switch down\n    BUFFER_HIGH_WATER_LINE: 30\n  };\n\n  var stringToArrayBuffer = function stringToArrayBuffer(string) {\n    var view = new Uint8Array(new ArrayBuffer(string.length));\n\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n\n    return view.buffer;\n  };\n  /* global Blob, BlobBuilder, Worker */\n  // unify worker interface\n\n\n  var browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n    // node only supports on/off\n    workerObj.on = workerObj.addEventListener;\n    workerObj.off = workerObj.removeEventListener;\n    return workerObj;\n  };\n\n  var createObjectURL = function createObjectURL(str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: 'application/javascript'\n      }));\n    } catch (e) {\n      var blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob());\n    }\n  };\n\n  var factory = function factory(code) {\n    return function () {\n      var objectUrl = createObjectURL(code);\n      var worker = browserWorkerPolyFill(new Worker(objectUrl));\n      worker.objURL = objectUrl;\n      var terminate = worker.terminate;\n      worker.on = worker.addEventListener;\n      worker.off = worker.removeEventListener;\n\n      worker.terminate = function () {\n        URL.revokeObjectURL(objectUrl);\n        return terminate.call(this);\n      };\n\n      return worker;\n    };\n  };\n\n  var transform = function transform(code) {\n    return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n  };\n\n  var getWorkerString = function getWorkerString(fn) {\n    return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n  };\n  /* rollup-plugin-worker-factory start for worker!/Users/abarstow/videojs/http-streaming/src/transmuxer-worker.js */\n\n\n  var workerCode$1 = transform(getWorkerString(function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    Stream.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n\n    Stream.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n\n    Stream.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n\n    var stream = Stream;\n    var MAX_UINT32$1 = Math.pow(2, 32);\n\n    var getUint64$2 = function getUint64(uint8) {\n      var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n      var value;\n\n      if (dv.getBigUint64) {\n        value = dv.getBigUint64(0);\n\n        if (value < Number.MAX_SAFE_INTEGER) {\n          return Number(value);\n        }\n\n        return value;\n      }\n\n      return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n    };\n\n    var numbers = {\n      getUint64: getUint64$2,\n      MAX_UINT32: MAX_UINT32$1\n    };\n    var MAX_UINT32 = numbers.MAX_UINT32;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i,\n            avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length], // numOfSequenceParameterSets\n        sequenceParameterSets, // \"SPS\"\n        [pps.length], // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n              vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n\n        return box.apply(null, avc1Box);\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun$1(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n\n      trun$1 = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    }; // generate the track's sample table from a frame\n\n\n    var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n      var sample,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n\n    var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n      var i,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = frame.byteLength,\n          numberOfNals = frame.length,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable$1,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n\n    var silence;\n\n    var silence_1 = function silence_1() {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n\n    var ONE_SECOND_IN_TS$4 = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs,\n        metadataTsToSeconds;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS$4;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$4;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n\n    metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n\n    var clock = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i,\n          firstFrame;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n\n      silentFrame = silence_1()[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      return audioFillDuration;\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$3;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n          if (userIdentifier === 'GA94') {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } else {\n            result.payload = void 0;\n          }\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // Link To Transport\n    // -----------------\n\n    var CaptionStream$1 = function CaptionStream(options) {\n      options = options || {};\n      CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n      this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      if (this.parse708captions_) {\n        this.cc708Stream_ = new Cea708Stream({\n          captionServices: options.captionServices\n        }); // eslint-disable-line no-use-before-define\n      }\n\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n\n      if (this.parse708captions_) {\n        this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n        this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n      }\n    };\n\n    CaptionStream$1.prototype = new stream();\n\n    CaptionStream$1.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n      if (!sei.payload) {\n        return;\n      } // ignore everything but user_data_registered_itu_t_t35\n\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n\n    CaptionStream$1.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } else {\n          // Dispatch packet to the Cea708Stream\n          this.dispatchCea708Packet(packet);\n        }\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n\n    CaptionStream$1.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n\n    CaptionStream$1.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n\n    CaptionStream$1.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    };\n\n    CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n      if (this.parse708captions_) {\n        this.cc708Stream_.push(packet);\n      }\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps special and extended character codes to their\n    // proper Unicode equivalent. The first one-byte key is just a\n    // non-standard character code. The two-byte keys that follow are\n    // the extended CEA708 character codes, along with the preceding\n    // 0x10 extended character byte to distinguish these codes from\n    // non-extended character codes. Every CEA708 character code that\n    // is not in this object maps directly to a standard unicode\n    // character code.\n    // The transparent space and non-breaking transparent space are\n    // technically not fully supported since there is no code to\n    // make them transparent, so they have normal non-transparent\n    // stand-ins.\n    // The special closed caption (CC) character isn't a standard\n    // unicode character, so a fairly similar unicode character was\n    // chosen in it's place.\n\n\n    var CHARACTER_TRANSLATION_708 = {\n      0x7f: 0x266a,\n      // ♪\n      0x1020: 0x20,\n      // Transparent Space\n      0x1021: 0xa0,\n      // Nob-breaking Transparent Space\n      0x1025: 0x2026,\n      // …\n      0x102a: 0x0160,\n      // Š\n      0x102c: 0x0152,\n      // Œ\n      0x1030: 0x2588,\n      // █\n      0x1031: 0x2018,\n      // ‘\n      0x1032: 0x2019,\n      // ’\n      0x1033: 0x201c,\n      // “\n      0x1034: 0x201d,\n      // ”\n      0x1035: 0x2022,\n      // •\n      0x1039: 0x2122,\n      // ™\n      0x103a: 0x0161,\n      // š\n      0x103c: 0x0153,\n      // œ\n      0x103d: 0x2120,\n      // ℠\n      0x103f: 0x0178,\n      // Ÿ\n      0x1076: 0x215b,\n      // ⅛\n      0x1077: 0x215c,\n      // ⅜\n      0x1078: 0x215d,\n      // ⅝\n      0x1079: 0x215e,\n      // ⅞\n      0x107a: 0x23d0,\n      // ⏐\n      0x107b: 0x23a4,\n      // ⎤\n      0x107c: 0x23a3,\n      // ⎣\n      0x107d: 0x23af,\n      // ⎯\n      0x107e: 0x23a6,\n      // ⎦\n      0x107f: 0x23a1,\n      // ⎡\n      0x10a0: 0x3138 // ㄸ (CC char)\n\n    };\n\n    var get708CharFromCode = function get708CharFromCode(code) {\n      var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n      if (code & 0x1000 && code === newCode) {\n        // Invalid extended code\n        return '';\n      }\n\n      return String.fromCharCode(newCode);\n    };\n\n    var within708TextBlock = function within708TextBlock(b) {\n      return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n    };\n\n    var Cea708Window = function Cea708Window(windowNum) {\n      this.windowNum = windowNum;\n      this.reset();\n    };\n\n    Cea708Window.prototype.reset = function () {\n      this.clearText();\n      this.pendingNewLine = false;\n      this.winAttr = {};\n      this.penAttr = {};\n      this.penLoc = {};\n      this.penColor = {}; // These default values are arbitrary,\n      // defineWindow will usually override them\n\n      this.visible = 0;\n      this.rowLock = 0;\n      this.columnLock = 0;\n      this.priority = 0;\n      this.relativePositioning = 0;\n      this.anchorVertical = 0;\n      this.anchorHorizontal = 0;\n      this.anchorPoint = 0;\n      this.rowCount = 1;\n      this.virtualRowCount = this.rowCount + 1;\n      this.columnCount = 41;\n      this.windowStyle = 0;\n      this.penStyle = 0;\n    };\n\n    Cea708Window.prototype.getText = function () {\n      return this.rows.join('\\n');\n    };\n\n    Cea708Window.prototype.clearText = function () {\n      this.rows = [''];\n      this.rowIdx = 0;\n    };\n\n    Cea708Window.prototype.newLine = function (pts) {\n      if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n        this.beforeRowOverflow(pts);\n      }\n\n      if (this.rows.length > 0) {\n        this.rows.push('');\n        this.rowIdx++;\n      } // Show all virtual rows since there's no visible scrolling\n\n\n      while (this.rows.length > this.virtualRowCount) {\n        this.rows.shift();\n        this.rowIdx--;\n      }\n    };\n\n    Cea708Window.prototype.isEmpty = function () {\n      if (this.rows.length === 0) {\n        return true;\n      } else if (this.rows.length === 1) {\n        return this.rows[0] === '';\n      }\n\n      return false;\n    };\n\n    Cea708Window.prototype.addText = function (text) {\n      this.rows[this.rowIdx] += text;\n    };\n\n    Cea708Window.prototype.backspace = function () {\n      if (!this.isEmpty()) {\n        var row = this.rows[this.rowIdx];\n        this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n      }\n    };\n\n    var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n      this.serviceNum = serviceNum;\n      this.text = '';\n      this.currentWindow = new Cea708Window(-1);\n      this.windows = [];\n      this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n      if (typeof encoding === 'string') {\n        this.createTextDecoder(encoding);\n      }\n    };\n    /**\n     * Initialize service windows\n     * Must be run before service use\n     *\n     * @param  {Integer}  pts               PTS value\n     * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n     */\n\n\n    Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n      this.startPts = pts;\n\n      for (var win = 0; win < 8; win++) {\n        this.windows[win] = new Cea708Window(win);\n\n        if (typeof beforeRowOverflow === 'function') {\n          this.windows[win].beforeRowOverflow = beforeRowOverflow;\n        }\n      }\n    };\n    /**\n     * Set current window of service to be affected by commands\n     *\n     * @param  {Integer} windowNum Window number\n     */\n\n\n    Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n      this.currentWindow = this.windows[windowNum];\n    };\n    /**\n     * Try to create a TextDecoder if it is natively supported\n     */\n\n\n    Cea708Service.prototype.createTextDecoder = function (encoding) {\n      if (typeof TextDecoder === 'undefined') {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'The `encoding` option is unsupported without TextDecoder support'\n        });\n      } else {\n        try {\n          this.textDecoder_ = new TextDecoder(encoding);\n        } catch (error) {\n          this.stream.trigger('log', {\n            level: 'warn',\n            message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n          });\n        }\n      }\n    };\n\n    var Cea708Stream = function Cea708Stream(options) {\n      options = options || {};\n      Cea708Stream.prototype.init.call(this);\n      var self = this;\n      var captionServices = options.captionServices || {};\n      var captionServiceEncodings = {};\n      var serviceProps; // Get service encodings from captionServices option block\n\n      Object.keys(captionServices).forEach(function (serviceName) {\n        serviceProps = captionServices[serviceName];\n\n        if (/^SERVICE/.test(serviceName)) {\n          captionServiceEncodings[serviceName] = serviceProps.encoding;\n        }\n      });\n      this.serviceEncodings = captionServiceEncodings;\n      this.current708Packet = null;\n      this.services = {};\n\n      this.push = function (packet) {\n        if (packet.type === 3) {\n          // 708 packet start\n          self.new708Packet();\n          self.add708Bytes(packet);\n        } else {\n          if (self.current708Packet === null) {\n            // This should only happen at the start of a file if there's no packet start.\n            self.new708Packet();\n          }\n\n          self.add708Bytes(packet);\n        }\n      };\n    };\n\n    Cea708Stream.prototype = new stream();\n    /**\n     * Push current 708 packet, create new 708 packet.\n     */\n\n    Cea708Stream.prototype.new708Packet = function () {\n      if (this.current708Packet !== null) {\n        this.push708Packet();\n      }\n\n      this.current708Packet = {\n        data: [],\n        ptsVals: []\n      };\n    };\n    /**\n     * Add pts and both bytes from packet into current 708 packet.\n     */\n\n\n    Cea708Stream.prototype.add708Bytes = function (packet) {\n      var data = packet.ccData;\n      var byte0 = data >>> 8;\n      var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n      // that service blocks will always line up with byte pairs.\n\n      this.current708Packet.ptsVals.push(packet.pts);\n      this.current708Packet.data.push(byte0);\n      this.current708Packet.data.push(byte1);\n    };\n    /**\n     * Parse completed 708 packet into service blocks and push each service block.\n     */\n\n\n    Cea708Stream.prototype.push708Packet = function () {\n      var packet708 = this.current708Packet;\n      var packetData = packet708.data;\n      var serviceNum = null;\n      var blockSize = null;\n      var i = 0;\n      var b = packetData[i++];\n      packet708.seq = b >> 6;\n      packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n      for (; i < packetData.length; i++) {\n        b = packetData[i++];\n        serviceNum = b >> 5;\n        blockSize = b & 0x1f; // 0b00011111\n\n        if (serviceNum === 7 && blockSize > 0) {\n          // Extended service num\n          b = packetData[i++];\n          serviceNum = b;\n        }\n\n        this.pushServiceBlock(serviceNum, i, blockSize);\n\n        if (blockSize > 0) {\n          i += blockSize - 1;\n        }\n      }\n    };\n    /**\n     * Parse service block, execute commands, read text.\n     *\n     * Note: While many of these commands serve important purposes,\n     * many others just parse out the parameters or attributes, but\n     * nothing is done with them because this is not a full and complete\n     * implementation of the entire 708 spec.\n     *\n     * @param  {Integer} serviceNum Service number\n     * @param  {Integer} start      Start index of the 708 packet data\n     * @param  {Integer} size       Block size\n     */\n\n\n    Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n      var b;\n      var i = start;\n      var packetData = this.current708Packet.data;\n      var service = this.services[serviceNum];\n\n      if (!service) {\n        service = this.initService(serviceNum, i);\n      }\n\n      for (; i < start + size && i < packetData.length; i++) {\n        b = packetData[i];\n\n        if (within708TextBlock(b)) {\n          i = this.handleText(i, service);\n        } else if (b === 0x18) {\n          i = this.multiByteCharacter(i, service);\n        } else if (b === 0x10) {\n          i = this.extendedCommands(i, service);\n        } else if (0x80 <= b && b <= 0x87) {\n          i = this.setCurrentWindow(i, service);\n        } else if (0x98 <= b && b <= 0x9f) {\n          i = this.defineWindow(i, service);\n        } else if (b === 0x88) {\n          i = this.clearWindows(i, service);\n        } else if (b === 0x8c) {\n          i = this.deleteWindows(i, service);\n        } else if (b === 0x89) {\n          i = this.displayWindows(i, service);\n        } else if (b === 0x8a) {\n          i = this.hideWindows(i, service);\n        } else if (b === 0x8b) {\n          i = this.toggleWindows(i, service);\n        } else if (b === 0x97) {\n          i = this.setWindowAttributes(i, service);\n        } else if (b === 0x90) {\n          i = this.setPenAttributes(i, service);\n        } else if (b === 0x91) {\n          i = this.setPenColor(i, service);\n        } else if (b === 0x92) {\n          i = this.setPenLocation(i, service);\n        } else if (b === 0x8f) {\n          service = this.reset(i, service);\n        } else if (b === 0x08) {\n          // BS: Backspace\n          service.currentWindow.backspace();\n        } else if (b === 0x0c) {\n          // FF: Form feed\n          service.currentWindow.clearText();\n        } else if (b === 0x0d) {\n          // CR: Carriage return\n          service.currentWindow.pendingNewLine = true;\n        } else if (b === 0x0e) {\n          // HCR: Horizontal carriage return\n          service.currentWindow.clearText();\n        } else if (b === 0x8d) {\n          // DLY: Delay, nothing to do\n          i++;\n        } else ;\n      }\n    };\n    /**\n     * Execute an extended command\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.extendedCommands = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service, {\n          isExtended: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Get PTS value of a given byte index\n     *\n     * @param  {Integer} byteIndex  Index of the byte\n     * @return {Integer}            PTS\n     */\n\n\n    Cea708Stream.prototype.getPts = function (byteIndex) {\n      // There's 1 pts value per 2 bytes\n      return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n    };\n    /**\n     * Initializes a service\n     *\n     * @param  {Integer} serviceNum Service number\n     * @return {Service}            Initialized service object\n     */\n\n\n    Cea708Stream.prototype.initService = function (serviceNum, i) {\n      var serviceName = 'SERVICE' + serviceNum;\n      var self = this;\n      var serviceName;\n      var encoding;\n\n      if (serviceName in this.serviceEncodings) {\n        encoding = this.serviceEncodings[serviceName];\n      }\n\n      this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n      this.services[serviceNum].init(this.getPts(i), function (pts) {\n        self.flushDisplayed(pts, self.services[serviceNum]);\n      });\n      return this.services[serviceNum];\n    };\n    /**\n     * Execute text writing to current window\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.handleText = function (i, service, options) {\n      var isExtended = options && options.isExtended;\n      var isMultiByte = options && options.isMultiByte;\n      var packetData = this.current708Packet.data;\n      var extended = isExtended ? 0x1000 : 0x0000;\n      var currentByte = packetData[i];\n      var nextByte = packetData[i + 1];\n      var win = service.currentWindow;\n\n      var _char;\n\n      var charCodeArray; // Use the TextDecoder if one was created for this service\n\n      if (service.textDecoder_ && !isExtended) {\n        if (isMultiByte) {\n          charCodeArray = [currentByte, nextByte];\n          i++;\n        } else {\n          charCodeArray = [currentByte];\n        }\n\n        _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n      } else {\n        _char = get708CharFromCode(extended | currentByte);\n      }\n\n      if (win.pendingNewLine && !win.isEmpty()) {\n        win.newLine(this.getPts(i));\n      }\n\n      win.pendingNewLine = false;\n      win.addText(_char);\n      return i;\n    };\n    /**\n     * Handle decoding of multibyte character\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var firstByte = packetData[i + 1];\n      var secondByte = packetData[i + 2];\n\n      if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n        i = this.handleText(++i, service, {\n          isMultiByte: true\n        });\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CW# command.\n     *\n     * Set the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      return i;\n    };\n    /**\n     * Parse and execute the DF# command.\n     *\n     * Define a window and set it as the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.defineWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      var win = service.currentWindow;\n      b = packetData[++i];\n      win.visible = (b & 0x20) >> 5; // v\n\n      win.rowLock = (b & 0x10) >> 4; // rl\n\n      win.columnLock = (b & 0x08) >> 3; // cl\n\n      win.priority = b & 0x07; // p\n\n      b = packetData[++i];\n      win.relativePositioning = (b & 0x80) >> 7; // rp\n\n      win.anchorVertical = b & 0x7f; // av\n\n      b = packetData[++i];\n      win.anchorHorizontal = b; // ah\n\n      b = packetData[++i];\n      win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n      win.rowCount = b & 0x0f; // rc\n\n      b = packetData[++i];\n      win.columnCount = b & 0x3f; // cc\n\n      b = packetData[++i];\n      win.windowStyle = (b & 0x38) >> 3; // ws\n\n      win.penStyle = b & 0x07; // ps\n      // The spec says there are (rowCount+1) \"virtual rows\"\n\n      win.virtualRowCount = win.rowCount + 1;\n      return i;\n    };\n    /**\n     * Parse and execute the SWA command.\n     *\n     * Set attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var winAttr = service.currentWindow.winAttr;\n      b = packetData[++i];\n      winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n      winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n      winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n      winAttr.fillBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n      winAttr.borderRed = (b & 0x30) >> 4; // br\n\n      winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n      winAttr.borderBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      winAttr.borderType += (b & 0x80) >> 5; // bt\n\n      winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n      winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n      winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n      winAttr.justify = b & 0x03; // j\n\n      b = packetData[++i];\n      winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n      winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n      winAttr.displayEffect = b & 0x03; // de\n\n      return i;\n    };\n    /**\n     * Gather text from all displayed windows and push a caption to output.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n      var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n      // display text in the correct order, but sample files so far have not shown any issue.\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n          displayedText.push(service.windows[winId].getText());\n        }\n      }\n\n      service.endPts = pts;\n      service.text = displayedText.join('\\n\\n');\n      this.pushCaption(service);\n      service.startPts = pts;\n    };\n    /**\n     * Push a caption to output if the caption contains text.\n     *\n     * @param  {Service} service  The service object to be affected\n     */\n\n\n    Cea708Stream.prototype.pushCaption = function (service) {\n      if (service.text !== '') {\n        this.trigger('data', {\n          startPts: service.startPts,\n          endPts: service.endPts,\n          text: service.text,\n          stream: 'cc708_' + service.serviceNum\n        });\n        service.text = '';\n        service.startPts = service.endPts;\n      }\n    };\n    /**\n     * Parse and execute the DSW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.displayWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the HDW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.hideWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 0;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the TGW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.toggleWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible ^= 1;\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the CLW command.\n     *\n     * Clear text of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.clearWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].clearText();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the DLW command.\n     *\n     * Re-initialize windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.deleteWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].reset();\n        }\n      }\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPA command.\n     *\n     * Set pen attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penAttr = service.currentWindow.penAttr;\n      b = packetData[++i];\n      penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n      penAttr.offset = (b & 0x0c) >> 2; // o\n\n      penAttr.penSize = b & 0x03; // s\n\n      b = packetData[++i];\n      penAttr.italics = (b & 0x80) >> 7; // i\n\n      penAttr.underline = (b & 0x40) >> 6; // u\n\n      penAttr.edgeType = (b & 0x38) >> 3; // et\n\n      penAttr.fontStyle = b & 0x07; // fs\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPC command.\n     *\n     * Set pen color of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenColor = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penColor = service.currentWindow.penColor;\n      b = packetData[++i];\n      penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n      penColor.fgRed = (b & 0x30) >> 4; // fr\n\n      penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n      penColor.fgBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n      penColor.bgRed = (b & 0x30) >> 4; // br\n\n      penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n      penColor.bgBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      penColor.edgeRed = (b & 0x30) >> 4; // er\n\n      penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n      penColor.edgeBlue = b & 0x03; // eb\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPL command.\n     *\n     * Set pen location of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n\n    Cea708Stream.prototype.setPenLocation = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n      service.currentWindow.pendingNewLine = true;\n      b = packetData[++i];\n      penLoc.row = b & 0x0f; // r\n\n      b = packetData[++i];\n      penLoc.column = b & 0x3f; // c\n\n      return i;\n    };\n    /**\n     * Execute the RST command.\n     *\n     * Reset service to a clean slate. Re-initialize.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Service}          Re-initialized service\n     */\n\n\n    Cea708Stream.prototype.reset = function (i, service) {\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      return this.initService(service.serviceNum, i);\n    }; // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row, index) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping a malformed 608 caption at index ' + index + '.'\n          });\n          return '';\n        }\n      }, this) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char2) {\n      return _char2 >= 0x20 && _char2 <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream$1,\n      Cea608Stream: Cea608Stream,\n      Cea708Stream: Cea708Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n\n    var handleRollover$1 = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover$1(data.dts, referenceDTS);\n        data.pts = handleRollover$1(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n\n    TimestampRolloverStream$1.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      handleRollover: handleRollover$1\n    };\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591$1(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping unrecognized metadata packet'\n          });\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            this.trigger('log', {\n              level: 'warn',\n              message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n            });\n            return;\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH$1 = 188,\n        // bytes\n    SYNC_BYTE$1 = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH$1,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH$1;\n            endIndex += MP2T_PACKET_LENGTH$1;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          segmentHadPmt = false,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          programMapTable,\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags;\n        var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n                stream = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream.data.push(data);\n            stream.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            segmentHadPmt = true;\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n\n      this.flush = function () {\n        // if on flush we haven't had a pmt emitted\n        // and we have a pmt to emit. emit the pmt\n        // so that we trigger a trackinfo downstream.\n        if (!segmentHadPmt && programMapTable) {\n          var pmt = {\n            type: 'metadata',\n            tracks: []\n          }; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          self.trigger('data', pmt);\n        }\n\n        segmentHadPmt = false;\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      Cea708Stream: captionStream.Cea708Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n    var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream(handlePartialSegments) {\n      var buffer,\n          frameNum = 0;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.skipWarn_ = function (start, end) {\n        this.trigger('log', {\n          level: 'warn',\n          message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n        });\n      };\n\n      this.push = function (packet) {\n        var i = 0,\n            frameLength,\n            protectionSkipBytes,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer && buffer.length) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        var skip; // We use i + 7 here because we want to be able to parse the entire header.\n        // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n        while (i + 7 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            if (typeof skip !== 'number') {\n              skip = i;\n            } // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n\n\n            i++;\n            continue;\n          }\n\n          if (typeof skip === 'number') {\n            this.skipWarn_(skip, i);\n            skip = null;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          // NOTE: frame length includes the size of the header\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n          // then we have to wait for more data\n\n          if (buffer.byteLength - i < frameLength) {\n            break;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            // data is the frame without it's header\n            data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n          });\n          frameNum++;\n          i += frameLength;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // remove processed bytes from the buffer.\n\n\n        buffer = buffer.subarray(i);\n      };\n\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      // TODO: the three profiles below don't\n      // appear to have sps data in the specificiation anymore?\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data,\n          nalUnitTypeCode: data[0] & 0x1f\n        };\n\n        switch (event.nalUnitTypeCode) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio = [1, 1],\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          // sar is sample aspect ratio\n          sarRatio: sarRatio\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n      returnSize = returnSize >= 0 ? returnSize : 0;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var getId3Offset = function getId3Offset(data, offset) {\n      if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n        return offset;\n      }\n\n      offset += parseId3TagSize(data, offset);\n      return getId3Offset(data, offset);\n    }; // TODO: use vhs-utils\n\n\n    var isLikelyAacData$1 = function isLikelyAacData(data) {\n      var offset = getId3Offset(data, 0);\n      return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n      // is not mp3 data but aac data.\n      (data[offset + 1] & 0x16) === 0x10;\n    };\n\n    var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$2 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData$1,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$2,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    };\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES;\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n    var retriggerForStream = function retriggerForStream(key, event) {\n      event.stream = key;\n      this.trigger('log', event);\n    };\n\n    var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n      var keys = Object.keys(pipeline);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i]; // skip non-stream keys and headOfPipeline\n        // which is just a duplicate\n\n        if (key === 'headOfPipeline' || !pipeline[key].on) {\n          continue;\n        }\n\n        pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n      }\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          audioProperties.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n        videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          segmentDuration = frames.length * frameDuration;\n          this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n          // frame info is in video clock cycles. Convert to match expectation of\n          // listeners (that all timestamps will be based on video clock cycles).\n          clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n          frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + segmentDuration\n          });\n        }\n\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          videoProperties.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        videoProperties.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        audioProperties.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n\n    _CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n            return;\n          }\n\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n          pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n          pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream(options);\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n              pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n\n      this.getLogTrigger_ = function (key) {\n        var self = this;\n        return function (event) {\n          event.stream = key;\n          self.trigger('log', event);\n        };\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: audioProperties,\n      VIDEO_PROPERTIES: videoProperties,\n      // exported for testing\n      generateSegmentTimingInfo: generateSegmentTimingInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned$3 = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var toHexString$1 = function toHexString(value) {\n      return ('00' + value.toString(16)).slice(-2);\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned$3,\n      toHexString: toHexString$1\n    };\n\n    var parseType$1 = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n\n    var parseType_1 = parseType$1;\n    var toUnsigned$2 = bin.toUnsigned;\n\n    var findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType_1(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n\n    var findBox_1 = findBox;\n    var toUnsigned$1 = bin.toUnsigned;\n    var getUint64$1 = numbers.getUint64;\n\n    var tfdt = function tfdt(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n\n      if (result.version === 1) {\n        result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n      } else {\n        result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n      }\n\n      return result;\n    };\n\n    var parseTfdt = tfdt;\n\n    var parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    };\n\n    var parseSampleFlags_1 = parseSampleFlags;\n\n    var trun = function trun(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n          view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n          // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n          // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n          // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n          // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n          // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n          // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n          offset = 8,\n          sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n\n          offset += 4;\n        }\n\n        result.samples.push(sample);\n      }\n\n      return result;\n    };\n\n    var parseTrun = trun;\n\n    var tfhd = function tfhd(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n          baseDataOffsetPresent = result.flags[2] & 0x01,\n          sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n          defaultSampleDurationPresent = result.flags[2] & 0x08,\n          defaultSampleSizePresent = result.flags[2] & 0x10,\n          defaultSampleFlagsPresent = result.flags[2] & 0x20,\n          durationIsEmpty = result.flags[0] & 0x010000,\n          defaultBaseIsMoof = result.flags[0] & 0x020000,\n          i;\n      i = 8;\n\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n\n      return result;\n    };\n\n    var parseTfhd = tfhd;\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n    var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = {\n        logs: [],\n        seiNals: []\n      },\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else if (lastMatchedSample) {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            } else {\n              result.logs.push({\n                level: 'warn',\n                message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n              });\n              break;\n            }\n\n            result.seiNals.push(seiNal);\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          if (typeof currentDts === 'bigint') {\n            sample.pts = currentDts + window_1.BigInt(sample.compositionTimeOffset);\n            currentDts += window_1.BigInt(sample.duration);\n          } else {\n            sample.pts = currentDts + sample.compositionTimeOffset;\n            currentDts += sample.duration;\n          }\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = findBox_1(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = findBox_1(traf, ['trun']);\n        var samples;\n        var result; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          result = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = {\n              seiNals: [],\n              logs: []\n            };\n          }\n\n          captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n          captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n      if (trackId === null) {\n        return null;\n      }\n\n      captionNals = parseCaptionNals(segment, trackId);\n      var trackNals = captionNals[trackId] || {};\n      return {\n        seiNals: trackNals.seiNals,\n        logs: trackNals.logs,\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser = function CaptionParser() {\n      var isInitialized = false;\n      var captionStream; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions; // Stores whether we are receiving partial data or not\n\n      var parsingPartial;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function (options) {\n        captionStream = new CaptionStream();\n        isInitialized = true;\n        parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n        captionStream.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n        captionStream.on('log', function (log) {\n          parsedCaptions.logs.push(log);\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one.\n          // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n        } else if (trackId === null || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData && parsedData.logs) {\n          parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n        }\n\n        if (parsedData === null || !parsedData.seiNals) {\n          if (parsedCaptions.logs.length) {\n            return {\n              logs: parsedCaptions.logs,\n              captions: [],\n              captionStreams: []\n            };\n          }\n\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        if (!parsingPartial) {\n          captionStream.flush();\n        } else {\n          captionStream.partialFlush();\n        }\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n        parsedCaptions.logs = [];\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {},\n            logs: []\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser;\n    var toUnsigned = bin.toUnsigned;\n    var toHexString = bin.toHexString;\n    var getUint64 = numbers.getUint64;\n    var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = findBox_1(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs; // we need info from two childrend of each track fragment box\n\n      trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      var lowestTime = trafs.reduce(function (acc, traf) {\n        var tfhd = findBox_1(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n        var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n        var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n        var tfdt = findBox_1(traf, ['tfdt'])[0];\n        var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n        var baseTime; // version 1 is 64 bit\n\n        if (tfdt[0] === 1) {\n          baseTime = getUint64(tfdt.subarray(4, 12));\n        } else {\n          baseTime = dv.getUint32(4);\n        } // convert base time to seconds if it is a valid number.\n\n\n        var seconds;\n\n        if (typeof baseTime === 'bigint') {\n          seconds = baseTime / window_1.BigInt(scale);\n        } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n          seconds = baseTime / scale;\n        }\n\n        if (seconds < Number.MAX_SAFE_INTEGER) {\n          seconds = Number(seconds);\n        }\n\n        if (seconds < acc) {\n          acc = seconds;\n        }\n\n        return acc;\n      }, Infinity);\n      return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n    };\n    /**\n     * Determine the composition start, in seconds, for an MP4\n     * fragment.\n     *\n     * The composition start time of a fragment can be calculated using the base\n     * media decode time, composition time offset, and timescale, as follows:\n     *\n     * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n     *\n     * All of the aforementioned information is contained within a media fragment's\n     * `traf` box, except for timescale info, which comes from the initialization\n     * segment, so a track id (also contained within a `traf`) is also necessary to\n     * associate it with a timescale\n     *\n     *\n     * @param timescales {object} - a hash of track ids to timescale values.\n     * @param fragment {Unit8Array} - the bytes of a media segment\n     * @return {number} the composition start time for the fragment, in seconds\n     **/\n\n\n    compositionStartTime = function compositionStartTime(timescales, fragment) {\n      var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n      var baseMediaDecodeTime = 0;\n      var compositionTimeOffset = 0;\n      var trackId;\n\n      if (trafBoxes && trafBoxes.length) {\n        // The spec states that track run samples contained within a `traf` box are contiguous, but\n        // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n        // We will assume that they are, so we only need the first to calculate start time.\n        var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n        var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n        var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n        if (tfhd) {\n          var parsedTfhd = parseTfhd(tfhd);\n          trackId = parsedTfhd.trackId;\n        }\n\n        if (tfdt) {\n          var parsedTfdt = parseTfdt(tfdt);\n          baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n        }\n\n        if (trun) {\n          var parsedTrun = parseTrun(trun);\n\n          if (parsedTrun.samples && parsedTrun.samples.length) {\n            compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n          }\n        }\n      } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n      // specified.\n\n\n      var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n      if (typeof baseMediaDecodeTime === 'bigint') {\n        compositionTimeOffset = window_1.BigInt(compositionTimeOffset);\n        timescale = window_1.BigInt(timescale);\n      }\n\n      var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n\n      if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n        result = Number(result);\n      }\n\n      return result;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n        var tkhds = findBox_1(trak, ['tkhd']);\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType_1(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    };\n    /**\n     * Get all the video, audio, and hint tracks from a non fragmented\n     * mp4 segment\n     */\n\n\n    getTracks = function getTracks(init) {\n      var traks = findBox_1(init, ['moov', 'trak']);\n      var tracks = [];\n      traks.forEach(function (trak) {\n        var track = {};\n        var tkhd = findBox_1(trak, ['tkhd'])[0];\n        var view, tkhdVersion; // id\n\n        if (tkhd) {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          tkhdVersion = view.getUint8(0);\n          track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n        }\n\n        var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n        if (hdlr) {\n          var type = parseType_1(hdlr.subarray(8, 12));\n\n          if (type === 'vide') {\n            track.type = 'video';\n          } else if (type === 'soun') {\n            track.type = 'audio';\n          } else {\n            track.type = type;\n          }\n        } // codec\n\n\n        var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n        if (stsd) {\n          var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n          track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n          var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n          var codecConfig, codecConfigType;\n\n          if (codecBox) {\n            // https://tools.ietf.org/html/rfc6381#section-3.3\n            if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n              // we don't need anything but the \"config\" parameter of the\n              // avc1 codecBox\n              codecConfig = codecBox.subarray(78);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n                track.codec += '.'; // left padded with zeroes for single digit hex\n                // profile idc\n\n                track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n                track.codec += toHexString(codecConfig[10]); // level idc\n\n                track.codec += toHexString(codecConfig[11]);\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'avc1.4d400d';\n              }\n            } else if (/^mp4[a,v]$/i.test(track.codec)) {\n              // we do not need anything but the streamDescriptor of the mp4a codecBox\n              codecConfig = codecBox.subarray(28);\n              codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n              if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n                track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n                track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'mp4a.40.2';\n              }\n            } else {\n              // flac, opus, etc\n              track.codec = track.codec.toLowerCase();\n            }\n          }\n        }\n\n        var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n        if (mdhd) {\n          track.timescale = getTimescaleFromMediaHeader(mdhd);\n        }\n\n        tracks.push(track);\n      });\n      return tracks;\n    };\n\n    var probe$2 = {\n      // export mp4 inspector's findBox and parseType for backwards compatibility\n      findBox: findBox_1,\n      parseType: parseType_1,\n      timescale: timescale,\n      startTime: startTime,\n      compositionStartTime: compositionStartTime,\n      videoTrackIds: getVideoTrackIds,\n      tracks: getTracks,\n      getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n    };\n\n    var parsePid = function parsePid(packet) {\n      var pid = packet[1] & 0x1f;\n      pid <<= 8;\n      pid |= packet[2];\n      return pid;\n    };\n\n    var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n      return !!(packet[1] & 0x40);\n    };\n\n    var parseAdaptionField = function parseAdaptionField(packet) {\n      var offset = 0; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[4] + 1;\n      }\n\n      return offset;\n    };\n\n    var parseType = function parseType(packet, pmtPid) {\n      var pid = parsePid(packet);\n\n      if (pid === 0) {\n        return 'pat';\n      } else if (pid === pmtPid) {\n        return 'pmt';\n      } else if (pmtPid) {\n        return 'pes';\n      }\n\n      return null;\n    };\n\n    var parsePat = function parsePat(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        offset += packet[offset] + 1;\n      }\n\n      return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n    };\n\n    var parsePmt = function parsePmt(packet) {\n      var programMapTable = {};\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var payloadOffset = 4 + parseAdaptionField(packet);\n\n      if (pusi) {\n        payloadOffset += packet[payloadOffset] + 1;\n      } // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n\n      if (!(packet[payloadOffset + 5] & 0x01)) {\n        return;\n      }\n\n      var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n      sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n      var offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n        programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n      }\n\n      return programMapTable;\n    };\n\n    var parsePesType = function parsePesType(packet, programMapTable) {\n      var pid = parsePid(packet);\n      var type = programMapTable[pid];\n\n      switch (type) {\n        case streamTypes.H264_STREAM_TYPE:\n          return 'video';\n\n        case streamTypes.ADTS_STREAM_TYPE:\n          return 'audio';\n\n        case streamTypes.METADATA_STREAM_TYPE:\n          return 'timed-metadata';\n\n        default:\n          return null;\n      }\n    };\n\n    var parsePesTime = function parsePesTime(packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n\n      if (!pusi) {\n        return null;\n      }\n\n      var offset = 4 + parseAdaptionField(packet);\n\n      if (offset >= packet.byteLength) {\n        // From the H 222.0 MPEG-TS spec\n        // \"For transport stream packets carrying PES packets, stuffing is needed when there\n        //  is insufficient PES packet data to completely fill the transport stream packet\n        //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n        //  the sum of the lengths of the data elements in it, so that the payload bytes\n        //  remaining after the adaptation field exactly accommodates the available PES packet\n        //  data.\"\n        //\n        // If the offset is >= the length of the packet, then the packet contains no data\n        // and instead is just adaption field stuffing bytes\n        return null;\n      }\n\n      var pes = null;\n      var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        pes = {}; // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n        pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n\n      return pes;\n    };\n\n    var parseNalUnitType = function parseNalUnitType(type) {\n      switch (type) {\n        case 0x05:\n          return 'slice_layer_without_partitioning_rbsp_idr';\n\n        case 0x06:\n          return 'sei_rbsp';\n\n        case 0x07:\n          return 'seq_parameter_set_rbsp';\n\n        case 0x08:\n          return 'pic_parameter_set_rbsp';\n\n        case 0x09:\n          return 'access_unit_delimiter_rbsp';\n\n        default:\n          return null;\n      }\n    };\n\n    var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n      var offset = 4 + parseAdaptionField(packet);\n      var frameBuffer = packet.subarray(offset);\n      var frameI = 0;\n      var frameSyncPoint = 0;\n      var foundKeyFrame = false;\n      var nalType; // advance the sync point to a NAL start, if necessary\n\n      for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n        if (frameBuffer[frameSyncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          frameI = frameSyncPoint + 5;\n          break;\n        }\n      }\n\n      while (frameI < frameBuffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (frameBuffer[frameI]) {\n          case 0:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0) {\n              frameI += 2;\n              break;\n            } else if (frameBuffer[frameI - 2] !== 0) {\n              frameI++;\n              break;\n            }\n\n            if (frameSyncPoint + 3 !== frameI - 2) {\n              nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n              if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n                foundKeyFrame = true;\n              }\n            } // drop trailing zeroes\n\n\n            do {\n              frameI++;\n            } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n              frameI += 3;\n              break;\n            }\n\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            frameI += 3;\n            break;\n        }\n      }\n\n      frameBuffer = frameBuffer.subarray(frameSyncPoint);\n      frameI -= frameSyncPoint;\n      frameSyncPoint = 0; // parse the final nal\n\n      if (frameBuffer && frameBuffer.byteLength > 3) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      return foundKeyFrame;\n    };\n\n    var probe$1 = {\n      parseType: parseType,\n      parsePat: parsePat,\n      parsePmt: parsePmt,\n      parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n      parsePesType: parsePesType,\n      parsePesTime: parsePesTime,\n      videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n    };\n    var handleRollover = timestampRolloverStream.handleRollover;\n    var probe = {};\n    probe.ts = probe$1;\n    probe.aac = utils;\n    var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * walks through segment data looking for pat and pmt packets to parse out\n     * program map table information\n     */\n\n    var parsePsi_ = function parsePsi_(bytes, pmt) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type;\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pat':\n              pmt.pid = probe.ts.parsePat(packet);\n              break;\n\n            case 'pmt':\n              var table = probe.ts.parsePmt(packet);\n              pmt.table = pmt.table || {};\n              Object.keys(table).forEach(function (key) {\n                pmt.table[key] = table[key];\n              });\n              break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last audio pes packets\n     */\n\n\n    var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed;\n      var endLoop = false; // Start walking from start of segment to get first audio packet\n\n      while (endIndex <= bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last audio packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last video pes packets as well as timing information for the first\n     * key frame.\n     */\n\n\n    var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH,\n          packet,\n          type,\n          pesType,\n          pusi,\n          parsed,\n          frame,\n          i,\n          pes;\n      var endLoop = false;\n      var currentFrame = {\n        data: [],\n        size: 0\n      }; // Start walking from start of segment to get first video packet\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video') {\n                if (pusi && !endLoop) {\n                  parsed = probe.ts.parsePesTime(packet);\n\n                  if (parsed) {\n                    parsed.type = 'video';\n                    result.video.push(parsed);\n                    endLoop = true;\n                  }\n                }\n\n                if (!result.firstKeyFrame) {\n                  if (pusi) {\n                    if (currentFrame.size !== 0) {\n                      frame = new Uint8Array(currentFrame.size);\n                      i = 0;\n\n                      while (currentFrame.data.length) {\n                        pes = currentFrame.data.shift();\n                        frame.set(pes, i);\n                        i += pes.byteLength;\n                      }\n\n                      if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                        var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                        // the keyframe seems to work fine with HLS playback\n                        // and definitely preferable to a crash with TypeError...\n\n                        if (firstKeyFrame) {\n                          result.firstKeyFrame = firstKeyFrame;\n                          result.firstKeyFrame.type = 'video';\n                        } else {\n                          // eslint-disable-next-line\n                          console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                        }\n                      }\n\n                      currentFrame.size = 0;\n                    }\n                  }\n\n                  currentFrame.data.push(packet);\n                  currentFrame.size += packet.byteLength;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop && result.firstKeyFrame) {\n            break;\n          }\n\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last video packet\n\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n              if (pesType === 'video' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              break;\n          }\n\n          if (endLoop) {\n            break;\n          }\n\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * Adjusts the timestamp information for the segment to account for\n     * rollover and convert to seconds based on pes packet timescale (90khz clock)\n     */\n\n\n    var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n      if (segmentInfo.audio && segmentInfo.audio.length) {\n        var audioBaseTimestamp = baseTimestamp;\n\n        if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n          audioBaseTimestamp = segmentInfo.audio[0].dts;\n        }\n\n        segmentInfo.audio.forEach(function (info) {\n          info.dts = handleRollover(info.dts, audioBaseTimestamp);\n          info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n      }\n\n      if (segmentInfo.video && segmentInfo.video.length) {\n        var videoBaseTimestamp = baseTimestamp;\n\n        if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n          videoBaseTimestamp = segmentInfo.video[0].dts;\n        }\n\n        segmentInfo.video.forEach(function (info) {\n          info.dts = handleRollover(info.dts, videoBaseTimestamp);\n          info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n\n        if (segmentInfo.firstKeyFrame) {\n          var frame = segmentInfo.firstKeyFrame;\n          frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n          frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n          frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n          frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n        }\n      }\n    };\n    /**\n     * inspects the aac data stream for start and end time information\n     */\n\n\n    var inspectAac_ = function inspectAac_(bytes) {\n      var endLoop = false,\n          audioCount = 0,\n          sampleRate = null,\n          timestamp = null,\n          frameSize = 0,\n          byteIndex = 0,\n          packet;\n\n      while (bytes.length - byteIndex >= 3) {\n        var type = probe.aac.parseType(bytes, byteIndex);\n\n        switch (type) {\n          case 'timed-metadata':\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (bytes.length - byteIndex < 10) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (timestamp === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              timestamp = probe.aac.parseAacTimestamp(packet);\n            }\n\n            byteIndex += frameSize;\n            break;\n\n          case 'audio':\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (bytes.length - byteIndex < 7) {\n              endLoop = true;\n              break;\n            }\n\n            frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n\n            if (sampleRate === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              sampleRate = probe.aac.parseSampleRate(packet);\n            }\n\n            audioCount++;\n            byteIndex += frameSize;\n            break;\n\n          default:\n            byteIndex++;\n            break;\n        }\n\n        if (endLoop) {\n          return null;\n        }\n      }\n\n      if (sampleRate === null || timestamp === null) {\n        return null;\n      }\n\n      var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n      var result = {\n        audio: [{\n          type: 'audio',\n          dts: timestamp,\n          pts: timestamp\n        }, {\n          type: 'audio',\n          dts: timestamp + audioCount * 1024 * audioTimescale,\n          pts: timestamp + audioCount * 1024 * audioTimescale\n        }]\n      };\n      return result;\n    };\n    /**\n     * inspects the transport stream segment data for start and end time information\n     * of the audio and video tracks (when present) as well as the first key frame's\n     * start time.\n     */\n\n\n    var inspectTs_ = function inspectTs_(bytes) {\n      var pmt = {\n        pid: null,\n        table: null\n      };\n      var result = {};\n      parsePsi_(bytes, pmt);\n\n      for (var pid in pmt.table) {\n        if (pmt.table.hasOwnProperty(pid)) {\n          var type = pmt.table[pid];\n\n          switch (type) {\n            case streamTypes.H264_STREAM_TYPE:\n              result.video = [];\n              parseVideoPes_(bytes, pmt, result);\n\n              if (result.video.length === 0) {\n                delete result.video;\n              }\n\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              result.audio = [];\n              parseAudioPes_(bytes, pmt, result);\n\n              if (result.audio.length === 0) {\n                delete result.audio;\n              }\n\n              break;\n          }\n        }\n      }\n\n      return result;\n    };\n    /**\n     * Inspects segment byte data and returns an object with start and end timing information\n     *\n     * @param {Uint8Array} bytes The segment byte data\n     * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n     *  timestamps for rollover. This value must be in 90khz clock.\n     * @return {Object} Object containing start and end frame timing info of segment.\n     */\n\n\n    var inspect = function inspect(bytes, baseTimestamp) {\n      var isAacData = probe.aac.isLikelyAacData(bytes);\n      var result;\n\n      if (isAacData) {\n        result = inspectAac_(bytes);\n      } else {\n        result = inspectTs_(bytes);\n      }\n\n      if (!result || !result.audio && !result.video) {\n        return null;\n      }\n\n      adjustTimestamp_(result, baseTimestamp);\n      return result;\n    };\n\n    var tsInspector = {\n      inspect: inspect,\n      parseAudioPes_: parseAudioPes_\n    };\n    /* global self */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n        var videoSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n      transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n        // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n        var audioSegmentTimingInfo = {\n          start: {\n            decode: clock.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n\n        if (timingInfo.prependedContentDuration) {\n          audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n\n        self.postMessage({\n          action: 'audioSegmentTimingInfo',\n          audioSegmentTimingInfo: audioSegmentTimingInfo\n        });\n      });\n      transmuxer.on('id3Frame', function (id3Frame) {\n        self.postMessage({\n          action: 'id3Frame',\n          id3Frame: id3Frame\n        });\n      });\n      transmuxer.on('caption', function (caption) {\n        self.postMessage({\n          action: 'caption',\n          caption: caption\n        });\n      });\n      transmuxer.on('trackinfo', function (trackInfo) {\n        self.postMessage({\n          action: 'trackinfo',\n          trackInfo: trackInfo\n        });\n      });\n      transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n        // convert to video TS since we prioritize video time over audio\n        self.postMessage({\n          action: 'audioTimingInfo',\n          audioTimingInfo: {\n            start: clock.videoTsToSeconds(audioTimingInfo.start),\n            end: clock.videoTsToSeconds(audioTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n        self.postMessage({\n          action: 'videoTimingInfo',\n          videoTimingInfo: {\n            start: clock.videoTsToSeconds(videoTimingInfo.start),\n            end: clock.videoTsToSeconds(videoTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('log', function (log) {\n        self.postMessage({\n          action: 'log',\n          log: log\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = /*#__PURE__*/function () {\n      function MessageHandlers(self, options) {\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      var _proto = MessageHandlers.prototype;\n\n      _proto.init = function init() {\n        if (this.transmuxer) {\n          this.transmuxer.dispose();\n        }\n\n        this.transmuxer = new transmuxer.Transmuxer(this.options);\n        wireTransmuxerEvents(this.self, this.transmuxer);\n      };\n\n      _proto.pushMp4Captions = function pushMp4Captions(data) {\n        if (!this.captionParser) {\n          this.captionParser = new captionParser();\n          this.captionParser.init();\n        }\n\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n        this.self.postMessage({\n          action: 'mp4Captions',\n          captions: parsed && parsed.captions || [],\n          logs: parsed && parsed.logs || [],\n          data: segment.buffer\n        }, [segment.buffer]);\n      };\n\n      _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n        var timescales = _ref.timescales,\n            data = _ref.data;\n        var startTime = probe$2.startTime(timescales, data);\n        this.self.postMessage({\n          action: 'probeMp4StartTime',\n          startTime: startTime,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n        var data = _ref2.data;\n        var tracks = probe$2.tracks(data);\n        this.self.postMessage({\n          action: 'probeMp4Tracks',\n          tracks: tracks,\n          data: data\n        }, [data.buffer]);\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n       * internal \"media time,\" as well as whether it contains video and/or audio.\n       *\n       * @private\n       * @param {Uint8Array} bytes - segment bytes\n       * @param {number} baseStartTime\n       *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n       *        This value should be in seconds, as it's converted to a 90khz clock within the\n       *        function body.\n       * @return {Object} The start time of the current segment in \"media time\" as well as\n       *                  whether it contains video and/or audio\n       */\n      ;\n\n      _proto.probeTs = function probeTs(_ref3) {\n        var data = _ref3.data,\n            baseStartTime = _ref3.baseStartTime;\n        var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n        var timeInfo = tsInspector.inspect(data, tsStartTime);\n        var result = null;\n\n        if (timeInfo) {\n          result = {\n            // each type's time info comes back as an array of 2 times, start and end\n            hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n            hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n          };\n\n          if (result.hasVideo) {\n            result.videoStart = timeInfo.video[0].ptsTime;\n          }\n\n          if (result.hasAudio) {\n            result.audioStart = timeInfo.audio[0].ptsTime;\n          }\n        }\n\n        this.self.postMessage({\n          action: 'probeTs',\n          result: result,\n          data: data\n        }, [data.buffer]);\n      };\n\n      _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearAllCaptions();\n        }\n      };\n\n      _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearParsedCaptions();\n        }\n      }\n      /**\n       * Adds data (a ts segment) to the start of the transmuxer pipeline for\n       * processing.\n       *\n       * @param {ArrayBuffer} data data to push into the muxer\n       */\n      ;\n\n      _proto.push = function push(data) {\n        // Cast array buffer to correct type for transmuxer\n        var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        this.transmuxer.push(segment);\n      }\n      /**\n       * Recreate the transmuxer so that the next segment added via `push`\n       * start with a fresh transmuxer.\n       */\n      ;\n\n      _proto.reset = function reset() {\n        this.transmuxer.reset();\n      }\n      /**\n       * Set the value that will be used as the `baseMediaDecodeTime` time for the\n       * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n       * set relative to the first based on the PTS values.\n       *\n       * @param {Object} data used to set the timestamp offset in the muxer\n       */\n      ;\n\n      _proto.setTimestampOffset = function setTimestampOffset(data) {\n        var timestampOffset = data.timestampOffset || 0;\n        this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n      };\n\n      _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n        this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n      };\n\n      _proto.setRemux = function setRemux(data) {\n        this.transmuxer.setRemux(data.remux);\n      }\n      /**\n       * Forces the pipeline to finish processing the last segment and emit it's\n       * results.\n       *\n       * @param {Object} data event data, not really used\n       */\n      ;\n\n      _proto.flush = function flush(data) {\n        this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n        self.postMessage({\n          action: 'done',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.endTimeline = function endTimeline() {\n        this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n        // timelines\n\n        self.postMessage({\n          action: 'endedtimeline',\n          type: 'transmuxed'\n        });\n      };\n\n      _proto.alignGopsWith = function alignGopsWith(data) {\n        this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n      };\n\n      return MessageHandlers;\n    }();\n    /**\n     * Our web worker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    self.onmessage = function (event) {\n      if (event.data.action === 'init' && event.data.options) {\n        this.messageHandlers = new MessageHandlers(self, event.data.options);\n        return;\n      }\n\n      if (!this.messageHandlers) {\n        this.messageHandlers = new MessageHandlers(self);\n      }\n\n      if (event.data && event.data.action && event.data.action !== 'init') {\n        if (this.messageHandlers[event.data.action]) {\n          this.messageHandlers[event.data.action](event.data);\n        }\n      }\n    };\n  }));\n  var TransmuxWorker = factory(workerCode$1);\n  /* rollup-plugin-worker-factory end for worker!/Users/abarstow/videojs/http-streaming/src/transmuxer-worker.js */\n\n  var handleData_ = function handleData_(event, transmuxedData, callback) {\n    var _event$data$segment = event.data.segment,\n        type = _event$data$segment.type,\n        initSegment = _event$data$segment.initSegment,\n        captions = _event$data$segment.captions,\n        captionStreams = _event$data$segment.captionStreams,\n        metadata = _event$data$segment.metadata,\n        videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n        videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n    transmuxedData.buffer.push({\n      captions: captions,\n      captionStreams: captionStreams,\n      metadata: metadata\n    });\n    var boxes = event.data.segment.boxes || {\n      data: event.data.segment.data\n    };\n    var result = {\n      type: type,\n      // cast ArrayBuffer to TypedArray\n      data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n      initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n    };\n\n    if (typeof videoFrameDtsTime !== 'undefined') {\n      result.videoFrameDtsTime = videoFrameDtsTime;\n    }\n\n    if (typeof videoFramePtsTime !== 'undefined') {\n      result.videoFramePtsTime = videoFramePtsTime;\n    }\n\n    callback(result);\n  };\n\n  var handleDone_ = function handleDone_(_ref) {\n    var transmuxedData = _ref.transmuxedData,\n        callback = _ref.callback; // Previously we only returned data on data events,\n    // not on done events. Clear out the buffer to keep that consistent.\n\n    transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n    // have received\n\n    callback(transmuxedData);\n  };\n\n  var handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n    transmuxedData.gopInfo = event.data.gopInfo;\n  };\n\n  var processTransmux = function processTransmux(options) {\n    var transmuxer = options.transmuxer,\n        bytes = options.bytes,\n        audioAppendStart = options.audioAppendStart,\n        gopsToAlignWith = options.gopsToAlignWith,\n        remux = options.remux,\n        onData = options.onData,\n        onTrackInfo = options.onTrackInfo,\n        onAudioTimingInfo = options.onAudioTimingInfo,\n        onVideoTimingInfo = options.onVideoTimingInfo,\n        onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n        onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n        onId3 = options.onId3,\n        onCaptions = options.onCaptions,\n        onDone = options.onDone,\n        onEndedTimeline = options.onEndedTimeline,\n        onTransmuxerLog = options.onTransmuxerLog,\n        isEndOfTimeline = options.isEndOfTimeline;\n    var transmuxedData = {\n      buffer: []\n    };\n    var waitForEndedTimelineEvent = isEndOfTimeline;\n\n    var handleMessage = function handleMessage(event) {\n      if (transmuxer.currentTransmux !== options) {\n        // disposed\n        return;\n      }\n\n      if (event.data.action === 'data') {\n        handleData_(event, transmuxedData, onData);\n      }\n\n      if (event.data.action === 'trackinfo') {\n        onTrackInfo(event.data.trackInfo);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        handleGopInfo_(event, transmuxedData);\n      }\n\n      if (event.data.action === 'audioTimingInfo') {\n        onAudioTimingInfo(event.data.audioTimingInfo);\n      }\n\n      if (event.data.action === 'videoTimingInfo') {\n        onVideoTimingInfo(event.data.videoTimingInfo);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'audioSegmentTimingInfo') {\n        onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n      }\n\n      if (event.data.action === 'id3Frame') {\n        onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n      }\n\n      if (event.data.action === 'caption') {\n        onCaptions(event.data.caption);\n      }\n\n      if (event.data.action === 'endedtimeline') {\n        waitForEndedTimelineEvent = false;\n        onEndedTimeline();\n      }\n\n      if (event.data.action === 'log') {\n        onTransmuxerLog(event.data.log);\n      } // wait for the transmuxed event since we may have audio and video\n\n\n      if (event.data.type !== 'transmuxed') {\n        return;\n      } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n      // of a timeline, that means there may still be data events before the segment\n      // processing can be considerred complete. In that case, the final event should be\n      // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n      if (waitForEndedTimelineEvent) {\n        return;\n      }\n\n      transmuxer.onmessage = null;\n      handleDone_({\n        transmuxedData: transmuxedData,\n        callback: onDone\n      });\n      /* eslint-disable no-use-before-define */\n\n      dequeue(transmuxer);\n      /* eslint-enable */\n    };\n\n    transmuxer.onmessage = handleMessage;\n\n    if (audioAppendStart) {\n      transmuxer.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioAppendStart\n      });\n    } // allow empty arrays to be passed to clear out GOPs\n\n\n    if (Array.isArray(gopsToAlignWith)) {\n      transmuxer.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith: gopsToAlignWith\n      });\n    }\n\n    if (typeof remux !== 'undefined') {\n      transmuxer.postMessage({\n        action: 'setRemux',\n        remux: remux\n      });\n    }\n\n    if (bytes.byteLength) {\n      var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n      var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n      transmuxer.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: byteOffset,\n        byteLength: bytes.byteLength\n      }, [buffer]);\n    }\n\n    if (isEndOfTimeline) {\n      transmuxer.postMessage({\n        action: 'endTimeline'\n      });\n    } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n    // the end of the segment\n\n\n    transmuxer.postMessage({\n      action: 'flush'\n    });\n  };\n\n  var dequeue = function dequeue(transmuxer) {\n    transmuxer.currentTransmux = null;\n\n    if (transmuxer.transmuxQueue.length) {\n      transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n      if (typeof transmuxer.currentTransmux === 'function') {\n        transmuxer.currentTransmux();\n      } else {\n        processTransmux(transmuxer.currentTransmux);\n      }\n    }\n  };\n\n  var processAction = function processAction(transmuxer, action) {\n    transmuxer.postMessage({\n      action: action\n    });\n    dequeue(transmuxer);\n  };\n\n  var enqueueAction = function enqueueAction(action, transmuxer) {\n    if (!transmuxer.currentTransmux) {\n      transmuxer.currentTransmux = action;\n      processAction(transmuxer, action);\n      return;\n    }\n\n    transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n  };\n\n  var reset = function reset(transmuxer) {\n    enqueueAction('reset', transmuxer);\n  };\n\n  var endTimeline = function endTimeline(transmuxer) {\n    enqueueAction('endTimeline', transmuxer);\n  };\n\n  var transmux = function transmux(options) {\n    if (!options.transmuxer.currentTransmux) {\n      options.transmuxer.currentTransmux = options;\n      processTransmux(options);\n      return;\n    }\n\n    options.transmuxer.transmuxQueue.push(options);\n  };\n\n  var createTransmuxer = function createTransmuxer(options) {\n    var transmuxer = new TransmuxWorker();\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue = [];\n    var term = transmuxer.terminate;\n\n    transmuxer.terminate = function () {\n      transmuxer.currentTransmux = null;\n      transmuxer.transmuxQueue.length = 0;\n      return term.call(transmuxer);\n    };\n\n    transmuxer.postMessage({\n      action: 'init',\n      options: options\n    });\n    return transmuxer;\n  };\n\n  var segmentTransmuxer = {\n    reset: reset,\n    endTimeline: endTimeline,\n    transmux: transmux,\n    createTransmuxer: createTransmuxer\n  };\n\n  var workerCallback = function workerCallback(options) {\n    var transmuxer = options.transmuxer;\n    var endAction = options.endAction || options.action;\n    var callback = options.callback;\n\n    var message = _extends_1({}, options, {\n      endAction: null,\n      transmuxer: null,\n      callback: null\n    });\n\n    var listenForEndEvent = function listenForEndEvent(event) {\n      if (event.data.action !== endAction) {\n        return;\n      }\n\n      transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n      if (event.data.data) {\n        event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n        if (options.data) {\n          options.data = event.data.data;\n        }\n      }\n\n      callback(event.data);\n    };\n\n    transmuxer.addEventListener('message', listenForEndEvent);\n\n    if (options.data) {\n      var isArrayBuffer = options.data instanceof ArrayBuffer;\n      message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n      message.byteLength = options.data.byteLength;\n      var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n      transmuxer.postMessage(message, transfers);\n    } else {\n      transmuxer.postMessage(message);\n    }\n  };\n\n  var REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n  var abortAll = function abortAll(activeXhrs) {\n    activeXhrs.forEach(function (xhr) {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n\n  var getRequestStats = function getRequestStats(request) {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n\n  var getProgressStats = function getProgressStats(progressEvent) {\n    var request = progressEvent.target;\n    var roundTripTime = Date.now() - request.requestTime;\n    var stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n\n  var handleErrors = function handleErrors(error, request) {\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request\n      };\n    }\n\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request\n      };\n    }\n\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n      return {\n        status: request.status,\n        message: 'Empty HLS response at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Array} objects - objects to add the key bytes to.\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n    return function (error, request) {\n      var response = request.response;\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      if (response.byteLength !== 16) {\n        return finishProcessingFn({\n          status: request.status,\n          message: 'Invalid HLS key at URL: ' + request.uri,\n          code: REQUEST_ERRORS.FAILURE,\n          xhr: request\n        }, segment);\n      }\n\n      var view = new DataView(response);\n      var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n      for (var i = 0; i < objects.length; i++) {\n        objects[i].bytes = bytes;\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var parseInitSegment = function parseInitSegment(segment, _callback) {\n    var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n    // only know how to parse mp4 init segments at the moment\n\n    if (type !== 'mp4') {\n      var uri = segment.map.resolvedUri || segment.map.uri;\n      return _callback({\n        internal: true,\n        message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n        code: REQUEST_ERRORS.FAILURE\n      });\n    }\n\n    workerCallback({\n      action: 'probeMp4Tracks',\n      data: segment.map.bytes,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref) {\n        var tracks = _ref.tracks,\n            data = _ref.data; // transfer bytes back to us\n\n        segment.map.bytes = data;\n        tracks.forEach(function (track) {\n          segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n          if (segment.map.tracks[track.type]) {\n            return;\n          }\n\n          segment.map.tracks[track.type] = track;\n\n          if (typeof track.id === 'number' && track.timescale) {\n            segment.map.timescales = segment.map.timescales || {};\n            segment.map.timescales[track.id] = track.timescale;\n          }\n        });\n        return _callback(null);\n      }\n    });\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n    var segment = _ref2.segment,\n        finishProcessingFn = _ref2.finishProcessingFn;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n      // until the key request is done to decrypt.\n\n      if (segment.map.key) {\n        segment.map.encryptedBytes = bytes;\n        return finishProcessingFn(null, segment);\n      }\n\n      segment.map.bytes = bytes;\n      parseInitSegment(segment, function (parseError) {\n        if (parseError) {\n          parseError.xhr = request;\n          parseError.status = request.status;\n          return finishProcessingFn(parseError, segment);\n        }\n\n        finishProcessingFn(null, segment);\n      });\n    };\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n\n  var handleSegmentResponse = function handleSegmentResponse(_ref3) {\n    var segment = _ref3.segment,\n        finishProcessingFn = _ref3.finishProcessingFn,\n        responseType = _ref3.responseType;\n    return function (error, request) {\n      var errorObj = handleErrors(error, request);\n\n      if (errorObj) {\n        return finishProcessingFn(errorObj, segment);\n      }\n\n      var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n      // thrown for two primary cases:\n      // 1. the mime type override stops working, or is not implemented for a specific\n      //    browser\n      // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n      responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n      segment.stats = getRequestStats(request);\n\n      if (segment.key) {\n        segment.encryptedBytes = new Uint8Array(newBytes);\n      } else {\n        segment.bytes = new Uint8Array(newBytes);\n      }\n\n      return finishProcessingFn(null, segment);\n    };\n  };\n\n  var transmuxAndNotify = function transmuxAndNotify(_ref4) {\n    var segment = _ref4.segment,\n        bytes = _ref4.bytes,\n        trackInfoFn = _ref4.trackInfoFn,\n        timingInfoFn = _ref4.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n        id3Fn = _ref4.id3Fn,\n        captionsFn = _ref4.captionsFn,\n        isEndOfTimeline = _ref4.isEndOfTimeline,\n        endedTimelineFn = _ref4.endedTimelineFn,\n        dataFn = _ref4.dataFn,\n        doneFn = _ref4.doneFn,\n        onTransmuxerLog = _ref4.onTransmuxerLog;\n    var fmp4Tracks = segment.map && segment.map.tracks || {};\n    var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n    // One reason for this is that in the case of full segments, we want to trust start\n    // times from the probe, rather than the transmuxer.\n\n    var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n    var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n    var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n    var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n    var finish = function finish() {\n      return transmux({\n        bytes: bytes,\n        transmuxer: segment.transmuxer,\n        audioAppendStart: segment.audioAppendStart,\n        gopsToAlignWith: segment.gopsToAlignWith,\n        remux: isMuxed,\n        onData: function onData(result) {\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          dataFn(segment, result);\n        },\n        onTrackInfo: function onTrackInfo(trackInfo) {\n          if (trackInfoFn) {\n            if (isMuxed) {\n              trackInfo.isMuxed = true;\n            }\n\n            trackInfoFn(segment, trackInfo);\n          }\n        },\n        onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n          // we only want the first start value we encounter\n          if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n            audioStartFn(audioTimingInfo.start);\n            audioStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n            audioEndFn(audioTimingInfo.end);\n          }\n        },\n        onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n          // we only want the first start value we encounter\n          if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n            videoStartFn(videoTimingInfo.start);\n            videoStartFn = null;\n          } // we want to continually update the end time\n\n\n          if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n            videoEndFn(videoTimingInfo.end);\n          }\n        },\n        onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n          videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n        },\n        onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n          audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n        },\n        onId3: function onId3(id3Frames, dispatchType) {\n          id3Fn(segment, id3Frames, dispatchType);\n        },\n        onCaptions: function onCaptions(captions) {\n          captionsFn(segment, [captions]);\n        },\n        isEndOfTimeline: isEndOfTimeline,\n        onEndedTimeline: function onEndedTimeline() {\n          endedTimelineFn();\n        },\n        onTransmuxerLog: onTransmuxerLog,\n        onDone: function onDone(result) {\n          if (!doneFn) {\n            return;\n          }\n\n          result.type = result.type === 'combined' ? 'video' : result.type;\n          doneFn(null, segment, result);\n        }\n      });\n    }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n    // Meaning cached frame data may corrupt our notion of where this segment\n    // really starts. To get around this, probe for the info needed.\n\n\n    workerCallback({\n      action: 'probeTs',\n      transmuxer: segment.transmuxer,\n      data: bytes,\n      baseStartTime: segment.baseStartTime,\n      callback: function callback(data) {\n        segment.bytes = bytes = data.data;\n        var probeResult = data.result;\n\n        if (probeResult) {\n          trackInfoFn(segment, {\n            hasAudio: probeResult.hasAudio,\n            hasVideo: probeResult.hasVideo,\n            isMuxed: isMuxed\n          });\n          trackInfoFn = null;\n\n          if (probeResult.hasAudio && !isMuxed) {\n            audioStartFn(probeResult.audioStart);\n          }\n\n          if (probeResult.hasVideo) {\n            videoStartFn(probeResult.videoStart);\n          }\n\n          audioStartFn = null;\n          videoStartFn = null;\n        }\n\n        finish();\n      }\n    });\n  };\n\n  var handleSegmentBytes = function handleSegmentBytes(_ref5) {\n    var segment = _ref5.segment,\n        bytes = _ref5.bytes,\n        trackInfoFn = _ref5.trackInfoFn,\n        timingInfoFn = _ref5.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n        id3Fn = _ref5.id3Fn,\n        captionsFn = _ref5.captionsFn,\n        isEndOfTimeline = _ref5.isEndOfTimeline,\n        endedTimelineFn = _ref5.endedTimelineFn,\n        dataFn = _ref5.dataFn,\n        doneFn = _ref5.doneFn,\n        onTransmuxerLog = _ref5.onTransmuxerLog;\n    var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n    // We should have a handler that fetches the number of bytes required\n    // to check if something is fmp4. This will allow us to save bandwidth\n    // because we can only blacklist a playlist and abort requests\n    // by codec after trackinfo triggers.\n\n    if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n      segment.isFmp4 = true;\n      var tracks = segment.map.tracks;\n      var trackInfo = {\n        isFmp4: true,\n        hasVideo: !!tracks.video,\n        hasAudio: !!tracks.audio\n      }; // if we have a audio track, with a codec that is not set to\n      // encrypted audio\n\n      if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n        trackInfo.audioCodec = tracks.audio.codec;\n      } // if we have a video track, with a codec that is not set to\n      // encrypted video\n\n\n      if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n        trackInfo.videoCodec = tracks.video.codec;\n      }\n\n      if (tracks.video && tracks.audio) {\n        trackInfo.isMuxed = true;\n      } // since we don't support appending fmp4 data on progress, we know we have the full\n      // segment here\n\n\n      trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n      // time. The end time can be roughly calculated by the receiver using the duration.\n      //\n      // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n      // that is the true start of the segment (where the playback engine should begin\n      // decoding).\n\n      var finishLoading = function finishLoading(captions) {\n        // if the track still has audio at this point it is only possible\n        // for it to be audio only. See `tracks.video && tracks.audio` if statement\n        // above.\n        // we make sure to use segment.bytes here as that\n        dataFn(segment, {\n          data: bytesAsUint8Array,\n          type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n        });\n\n        if (captions && captions.length) {\n          captionsFn(segment, captions);\n        }\n\n        doneFn(null, segment, {});\n      };\n\n      workerCallback({\n        action: 'probeMp4StartTime',\n        timescales: segment.map.timescales,\n        data: bytesAsUint8Array,\n        transmuxer: segment.transmuxer,\n        callback: function callback(_ref6) {\n          var data = _ref6.data,\n              startTime = _ref6.startTime; // transfer bytes back to us\n\n          bytes = data.buffer;\n          segment.bytes = bytesAsUint8Array = data;\n\n          if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n            timingInfoFn(segment, 'audio', 'start', startTime);\n          }\n\n          if (trackInfo.hasVideo) {\n            timingInfoFn(segment, 'video', 'start', startTime);\n          } // Run through the CaptionParser in case there are captions.\n          // Initialize CaptionParser if it hasn't been yet\n\n\n          if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n            finishLoading();\n            return;\n          }\n\n          workerCallback({\n            action: 'pushMp4Captions',\n            endAction: 'mp4Captions',\n            transmuxer: segment.transmuxer,\n            data: bytesAsUint8Array,\n            timescales: segment.map.timescales,\n            trackIds: [tracks.video.id],\n            callback: function callback(message) {\n              // transfer bytes back to us\n              bytes = message.data.buffer;\n              segment.bytes = bytesAsUint8Array = message.data;\n              message.logs.forEach(function (log) {\n                onTransmuxerLog(videojs.mergeOptions(log, {\n                  stream: 'mp4CaptionParser'\n                }));\n              });\n              finishLoading(message.captions);\n            }\n          });\n        }\n      });\n      return;\n    } // VTT or other segments that don't need processing\n\n\n    if (!segment.transmuxer) {\n      doneFn(null, segment, {});\n      return;\n    }\n\n    if (typeof segment.container === 'undefined') {\n      segment.container = detectContainerForBytes(bytesAsUint8Array);\n    }\n\n    if (segment.container !== 'ts' && segment.container !== 'aac') {\n      trackInfoFn(segment, {\n        hasAudio: false,\n        hasVideo: false\n      });\n      doneFn(null, segment, {});\n      return;\n    } // ts or aac\n\n\n    transmuxAndNotify({\n      segment: segment,\n      bytes: bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  };\n\n  var decrypt = function decrypt(_ref7, callback) {\n    var id = _ref7.id,\n        key = _ref7.key,\n        encryptedBytes = _ref7.encryptedBytes,\n        decryptionWorker = _ref7.decryptionWorker;\n\n    var decryptionHandler = function decryptionHandler(event) {\n      if (event.data.source === id) {\n        decryptionWorker.removeEventListener('message', decryptionHandler);\n        var decrypted = event.data.decrypted;\n        callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n      }\n    };\n\n    decryptionWorker.addEventListener('message', decryptionHandler);\n    var keyBytes;\n\n    if (key.bytes.slice) {\n      keyBytes = key.bytes.slice();\n    } else {\n      keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n    } // incrementally decrypt the bytes\n\n\n    decryptionWorker.postMessage(createTransferableMessage({\n      source: id,\n      encrypted: encryptedBytes,\n      key: keyBytes,\n      iv: key.iv\n    }), [encryptedBytes.buffer, keyBytes.buffer]);\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n\n  var decryptSegment = function decryptSegment(_ref8) {\n    var decryptionWorker = _ref8.decryptionWorker,\n        segment = _ref8.segment,\n        trackInfoFn = _ref8.trackInfoFn,\n        timingInfoFn = _ref8.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n        id3Fn = _ref8.id3Fn,\n        captionsFn = _ref8.captionsFn,\n        isEndOfTimeline = _ref8.isEndOfTimeline,\n        endedTimelineFn = _ref8.endedTimelineFn,\n        dataFn = _ref8.dataFn,\n        doneFn = _ref8.doneFn,\n        onTransmuxerLog = _ref8.onTransmuxerLog;\n    decrypt({\n      id: segment.requestId,\n      key: segment.key,\n      encryptedBytes: segment.encryptedBytes,\n      decryptionWorker: decryptionWorker\n    }, function (decryptedBytes) {\n      segment.bytes = decryptedBytes;\n      handleSegmentBytes({\n        segment: segment,\n        bytes: segment.bytes,\n        trackInfoFn: trackInfoFn,\n        timingInfoFn: timingInfoFn,\n        videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n        id3Fn: id3Fn,\n        captionsFn: captionsFn,\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: endedTimelineFn,\n        dataFn: dataFn,\n        doneFn: doneFn,\n        onTransmuxerLog: onTransmuxerLog\n      });\n    });\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n\n  var waitForCompletion = function waitForCompletion(_ref9) {\n    var activeXhrs = _ref9.activeXhrs,\n        decryptionWorker = _ref9.decryptionWorker,\n        trackInfoFn = _ref9.trackInfoFn,\n        timingInfoFn = _ref9.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n        id3Fn = _ref9.id3Fn,\n        captionsFn = _ref9.captionsFn,\n        isEndOfTimeline = _ref9.isEndOfTimeline,\n        endedTimelineFn = _ref9.endedTimelineFn,\n        dataFn = _ref9.dataFn,\n        doneFn = _ref9.doneFn,\n        onTransmuxerLog = _ref9.onTransmuxerLog;\n    var count = 0;\n    var didError = false;\n    return function (error, segment) {\n      if (didError) {\n        return;\n      }\n\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n\n      count += 1;\n\n      if (count === activeXhrs.length) {\n        var segmentFinish = function segmentFinish() {\n          if (segment.encryptedBytes) {\n            return decryptSegment({\n              decryptionWorker: decryptionWorker,\n              segment: segment,\n              trackInfoFn: trackInfoFn,\n              timingInfoFn: timingInfoFn,\n              videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n              audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n              id3Fn: id3Fn,\n              captionsFn: captionsFn,\n              isEndOfTimeline: isEndOfTimeline,\n              endedTimelineFn: endedTimelineFn,\n              dataFn: dataFn,\n              doneFn: doneFn,\n              onTransmuxerLog: onTransmuxerLog\n            });\n          } // Otherwise, everything is ready just continue\n\n\n          handleSegmentBytes({\n            segment: segment,\n            bytes: segment.bytes,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        }; // Keep track of when *all* of the requests have completed\n\n\n        segment.endOfAllRequests = Date.now();\n\n        if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n          return decrypt({\n            decryptionWorker: decryptionWorker,\n            // add -init to the \"id\" to differentiate between segment\n            // and init segment decryption, just in case they happen\n            // at the same time at some point in the future.\n            id: segment.requestId + '-init',\n            encryptedBytes: segment.map.encryptedBytes,\n            key: segment.map.key\n          }, function (decryptedBytes) {\n            segment.map.bytes = decryptedBytes;\n            parseInitSegment(segment, function (parseError) {\n              if (parseError) {\n                abortAll(activeXhrs);\n                return doneFn(parseError, segment);\n              }\n\n              segmentFinish();\n            });\n          });\n        }\n\n        segmentFinish();\n      }\n    };\n  };\n  /**\n   * Calls the abort callback if any request within the batch was aborted. Will only call\n   * the callback once per batch of requests, even if multiple were aborted.\n   *\n   * @param {Object} loadendState - state to check to see if the abort function was called\n   * @param {Function} abortFn - callback to call for abort\n   */\n\n\n  var handleLoadEnd = function handleLoadEnd(_ref10) {\n    var loadendState = _ref10.loadendState,\n        abortFn = _ref10.abortFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n        abortFn();\n        loadendState.calledAbortFn = true;\n      }\n    };\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n\n  var handleProgress = function handleProgress(_ref11) {\n    var segment = _ref11.segment,\n        progressFn = _ref11.progressFn;\n    _ref11.trackInfoFn;\n    _ref11.timingInfoFn;\n    _ref11.videoSegmentTimingInfoFn;\n    _ref11.audioSegmentTimingInfoFn;\n    _ref11.id3Fn;\n    _ref11.captionsFn;\n    _ref11.isEndOfTimeline;\n    _ref11.endedTimelineFn;\n    _ref11.dataFn;\n    return function (event) {\n      var request = event.target;\n\n      if (request.aborted) {\n        return;\n      }\n\n      segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n      if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n        segment.stats.firstBytesReceivedAt = Date.now();\n      }\n\n      return progressFn(event, segment);\n    };\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [transmuxer]: Object,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n   *                             aborted\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n   *                            request, transmuxed if needed\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @return {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n\n  var mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n    var xhr = _ref12.xhr,\n        xhrOptions = _ref12.xhrOptions,\n        decryptionWorker = _ref12.decryptionWorker,\n        segment = _ref12.segment,\n        abortFn = _ref12.abortFn,\n        progressFn = _ref12.progressFn,\n        trackInfoFn = _ref12.trackInfoFn,\n        timingInfoFn = _ref12.timingInfoFn,\n        videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n        id3Fn = _ref12.id3Fn,\n        captionsFn = _ref12.captionsFn,\n        isEndOfTimeline = _ref12.isEndOfTimeline,\n        endedTimelineFn = _ref12.endedTimelineFn,\n        dataFn = _ref12.dataFn,\n        doneFn = _ref12.doneFn,\n        onTransmuxerLog = _ref12.onTransmuxerLog;\n    var activeXhrs = [];\n    var finishProcessingFn = waitForCompletion({\n      activeXhrs: activeXhrs,\n      decryptionWorker: decryptionWorker,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    }); // optionally, request the decryption key\n\n    if (segment.key && !segment.key.bytes) {\n      var objects = [segment.key];\n\n      if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n        objects.push(segment.map.key);\n      }\n\n      var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n      var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n\n    if (segment.map && !segment.map.bytes) {\n      var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n      if (differentMapKey) {\n        var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n          uri: segment.map.key.resolvedUri,\n          responseType: 'arraybuffer'\n        });\n        var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n        var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n        activeXhrs.push(mapKeyXhr);\n      }\n\n      var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map)\n      });\n      var initSegmentRequestCallback = handleInitSegmentResponse({\n        segment: segment,\n        finishProcessingFn: finishProcessingFn\n      });\n      var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n\n    var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment)\n    });\n    var segmentRequestCallback = handleSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn,\n      responseType: segmentRequestOptions.responseType\n    });\n    var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress({\n      segment: segment,\n      progressFn: progressFn,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn\n    }));\n    activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n    // multiple times, provide a shared state object\n\n    var loadendState = {};\n    activeXhrs.forEach(function (activeXhr) {\n      activeXhr.addEventListener('loadend', handleLoadEnd({\n        loadendState: loadendState,\n        abortFn: abortFn\n      }));\n    });\n    return function () {\n      return abortAll(activeXhrs);\n    };\n  };\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n\n\n  var logFn$1 = logger('CodecUtils');\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   *\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n  var getCodecs = function getCodecs(media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    var mediaAttributes = media.attributes || {};\n\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n  };\n\n  var isMaat = function isMaat(master, media) {\n    var mediaAttributes = media.attributes || {};\n    return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  };\n\n  var isMuxed = function isMuxed(master, media) {\n    if (!isMaat(master, media)) {\n      return true;\n    }\n\n    var mediaAttributes = media.attributes || {};\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n    for (var groupId in audioGroup) {\n      // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n      // or there are listed playlists (the case for DASH, as the manifest will have already\n      // provided all of the details necessary to generate the audio playlist, as opposed to\n      // HLS' externally requested playlists), then the content is demuxed.\n      if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var unwrapCodecList = function unwrapCodecList(codecList) {\n    var codecs = {};\n    codecList.forEach(function (_ref) {\n      var mediaType = _ref.mediaType,\n          type = _ref.type,\n          details = _ref.details;\n      codecs[mediaType] = codecs[mediaType] || [];\n      codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n    });\n    Object.keys(codecs).forEach(function (mediaType) {\n      if (codecs[mediaType].length > 1) {\n        logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n        codecs[mediaType] = null;\n        return;\n      }\n\n      codecs[mediaType] = codecs[mediaType][0];\n    });\n    return codecs;\n  };\n\n  var codecCount = function codecCount(codecObj) {\n    var count = 0;\n\n    if (codecObj.audio) {\n      count++;\n    }\n\n    if (codecObj.video) {\n      count++;\n    }\n\n    return count;\n  };\n  /**\n   * Calculates the codec strings for a working configuration of\n   * SourceBuffers to play variant streams in a master playlist. If\n   * there is no possible working configuration, an empty object will be\n   * returned.\n   *\n   * @param master {Object} the m3u8 object for the master playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Object} the codec strings.\n   *\n   * @private\n   */\n\n\n  var codecsForPlaylist = function codecsForPlaylist(master, media) {\n    var mediaAttributes = media.attributes || {};\n    var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n    if (isMaat(master, media) && !codecInfo.audio) {\n      if (!isMuxed(master, media)) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n        if (defaultCodecs.audio) {\n          codecInfo.audio = defaultCodecs.audio;\n        }\n      }\n    }\n\n    return codecInfo;\n  };\n\n  var logFn = logger('PlaylistSelector');\n\n  var representationToString = function representationToString(representation) {\n    if (!representation || !representation.playlist) {\n      return;\n    }\n\n    var playlist = representation.playlist;\n    return JSON.stringify({\n      id: playlist.id,\n      bandwidth: representation.bandwidth,\n      width: representation.width,\n      height: representation.height,\n      codecs: playlist.attributes && playlist.attributes.CODECS || ''\n    });\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n\n  var safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n    if (!el) {\n      return '';\n    }\n\n    var result = window.getComputedStyle(el);\n\n    if (!result) {\n      return '';\n    }\n\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n\n  var stableSort = function stableSort(array, sortFn) {\n    var newArray = array.slice();\n    array.sort(function (left, right) {\n      var cmp = sortFn(left, right);\n\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n    var leftBandwidth;\n    var rightBandwidth;\n\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n\n    leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n\n    rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n\n  var comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n    var leftWidth;\n    var rightWidth;\n\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n\n    leftWidth = leftWidth || window.Number.MAX_VALUE;\n\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n\n    rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} master\n   *        Object representation of the master manifest\n   * @param {number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {number} playerWidth\n   *        Current width of the player element (should account for the device pixel ratio)\n   * @param {number} playerHeight\n   *        Current height of the player element (should account for the device pixel ratio)\n   * @param {boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @param {Object} masterPlaylistController\n   *        the current masterPlaylistController object\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n    // If we end up getting called before `master` is available, exit early\n    if (!master) {\n      return;\n    }\n\n    var options = {\n      bandwidth: playerBandwidth,\n      width: playerWidth,\n      height: playerHeight,\n      limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n    };\n    var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n    if (Playlist.isAudioOnly(master)) {\n      playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n      // at the buttom of this function for debugging.\n\n      options.audioOnly = true;\n    } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n    var sortedPlaylistReps = playlists.map(function (playlist) {\n      var bandwidth;\n      var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window.Number.MAX_VALUE;\n      return {\n        bandwidth: bandwidth,\n        width: width,\n        height: height,\n        playlist: playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, function (left, right) {\n      return left.bandwidth - right.bandwidth;\n    }); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isIncompatible(rep.playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return Playlist.isEnabled(rep.playlist);\n    });\n\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n        return !Playlist.isDisabled(rep.playlist);\n      });\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n\n    var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n      return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n    });\n    var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n      if (_chosenRep && _chosenRep.playlist) {\n        var type = 'sortedPlaylistReps';\n\n        if (bandwidthBestRep) {\n          type = 'bandwidthBestRep';\n        }\n\n        if (enabledPlaylistReps[0]) {\n          type = 'enabledPlaylistReps';\n        }\n\n        logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n        return _chosenRep.playlist;\n      }\n\n      logFn('could not choose a playlist with options', options);\n      return null;\n    } // filter out playlists without resolution information\n\n\n    var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n      return rep.width && rep.height;\n    }); // sort variants by resolution\n\n    stableSort(haveResolution, function (left, right) {\n      return left.width - right.width;\n    }); // if we have the exact resolution as the player use it\n\n    var resolutionBestRepList = haveResolution.filter(function (rep) {\n      return rep.width === playerWidth && rep.height === playerHeight;\n    });\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n    var resolutionPlusOneList;\n    var resolutionPlusOneSmallest;\n    var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(function (rep) {\n        return rep.width > playerWidth || rep.height > playerHeight;\n      }); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n        return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n      }); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n        return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n      })[0];\n    }\n\n    var leastPixelDiffRep; // If this selector proves to be better than others,\n    // resolutionPlusOneRep and resolutionBestRep and all\n    // the code involving them should be removed.\n\n    if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n      // find the variant that is closest to the player's pixel size\n      var leastPixelDiffList = haveResolution.map(function (rep) {\n        rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n        return rep;\n      }); // get the highest bandwidth, closest resolution playlist\n\n      stableSort(leastPixelDiffList, function (left, right) {\n        // sort by highest bandwidth if pixelDiff is the same\n        if (left.pixelDiff === right.pixelDiff) {\n          return right.bandwidth - left.bandwidth;\n        }\n\n        return left.pixelDiff - right.pixelDiff;\n      });\n      leastPixelDiffRep = leastPixelDiffList[0];\n    } // fallback chain of variants\n\n\n    var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (chosenRep && chosenRep.playlist) {\n      var _type = 'sortedPlaylistReps';\n\n      if (leastPixelDiffRep) {\n        _type = 'leastPixelDiffRep';\n      } else if (resolutionPlusOneRep) {\n        _type = 'resolutionPlusOneRep';\n      } else if (resolutionBestRep) {\n        _type = 'resolutionBestRep';\n      } else if (bandwidthBestRep) {\n        _type = 'bandwidthBestRep';\n      } else if (enabledPlaylistReps[0]) {\n        _type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n      return chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  };\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n\n  var lastBandwidthSelector = function lastBandwidthSelector() {\n    var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n    return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n  /**\n   * Chooses the appropriate media playlist based on an\n   * exponential-weighted moving average of the bandwidth after\n   * filtering for player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @param {number} decay - a number between 0 and 1. Higher values of\n   * this parameter will cause previous bandwidth estimates to lose\n   * significance more quickly.\n   * @return {Function} a function which can be invoked to create a new\n   * playlist selector function.\n   * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n   */\n\n\n  var movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n    var average = -1;\n    var lastSystemBandwidth = -1;\n\n    if (decay < 0 || decay > 1) {\n      throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n    }\n\n    return function () {\n      var pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n\n      if (average < 0) {\n        average = this.systemBandwidth;\n        lastSystemBandwidth = this.systemBandwidth;\n      } // stop the average value from decaying for every 250ms\n      // when the systemBandwidth is constant\n      // and\n      // stop average from setting to a very low value when the\n      // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n      if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n        average = decay * this.systemBandwidth + (1 - decay) * average;\n        lastSystemBandwidth = this.systemBandwidth;\n      }\n\n      return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n    };\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.master\n   *        Object representation of the master manifest\n   * @param {number} settings.currentTime\n   *        The current time of the player\n   * @param {number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {number} settings.duration\n   *        Duration of the media\n   * @param {number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n\n  var minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n    var master = settings.master,\n        currentTime = settings.currentTime,\n        bandwidth = settings.bandwidth,\n        duration = settings.duration,\n        segmentDuration = settings.segmentDuration,\n        timeUntilRebuffer = settings.timeUntilRebuffer,\n        currentTimeline = settings.currentTimeline,\n        syncController = settings.syncController; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    var compatiblePlaylists = master.playlists.filter(function (playlist) {\n      return !Playlist.isIncompatible(playlist);\n    }); // filter out any playlists that have been disabled manually through the representations\n    // api or blacklisted temporarily due to playback errors.\n\n    var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been blacklisted or disabled\n      // by the user through the representations api. In this case, ignore blacklisting and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n        return !Playlist.isDisabled(playlist);\n      });\n    }\n\n    var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n      var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      var numRequests = syncPoint ? 1 : 2;\n      var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist: playlist,\n        rebufferingImpact: rebufferingImpact\n      };\n    });\n    var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n      return estimate.rebufferingImpact <= 0;\n    }); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, function (a, b) {\n      return comparePlaylistBandwidth(b.playlist, a.playlist);\n    });\n\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n\n    stableSort(rebufferingEstimates, function (a, b) {\n      return a.rebufferingImpact - b.rebufferingImpact;\n    });\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n\n  var lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n    var _this = this; // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n\n\n    var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, function (a, b) {\n      return comparePlaylistBandwidth(a, b);\n    }); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    var playlistsWithVideo = playlists.filter(function (playlist) {\n      return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n    });\n    return playlistsWithVideo[0] || null;\n  };\n  /**\n   * Combine all segments into a single Uint8Array\n   *\n   * @param {Object} segmentObj\n   * @return {Uint8Array} concatenated bytes\n   * @private\n   */\n\n\n  var concatSegments = function concatSegments(segmentObj) {\n    var offset = 0;\n    var tempBuffer;\n\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(function (segment) {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n    }\n\n    return tempBuffer;\n  };\n  /**\n   * @file text-tracks.js\n   */\n\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStream the caption stream to create\n   * @private\n   */\n\n\n  var createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n    if (!inbandTextTracks[captionStream]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-608'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n      if (/^cc708_/.test(captionStream)) {\n        instreamId = 'SERVICE' + captionStream.split('_')[1];\n      }\n\n      var track = tech.textTracks().getTrackById(instreamId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[captionStream] = track;\n      } else {\n        // This section gets called when we have caption services that aren't specified in the manifest.\n        // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var label = captionStream;\n        var language = captionStream;\n        var def = false;\n        var captionService = captionServices[instreamId];\n\n        if (captionService) {\n          label = captionService.label;\n          language = captionService.language;\n          def = captionService[\"default\"];\n        } // Otherwise, create a track with the default `CC#` label and\n        // without a language\n\n\n        inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: instreamId,\n          // TODO: investigate why this doesn't seem to turn the caption on by default\n          \"default\": def,\n          label: label,\n          language: language\n        }, false).track;\n      }\n    }\n  };\n  /**\n   * Add caption text track data to a source handler given an array of captions\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {Array} captionArray an array of caption data\n   * @private\n   */\n\n\n  var addCaptionData = function addCaptionData(_ref) {\n    var inbandTextTracks = _ref.inbandTextTracks,\n        captionArray = _ref.captionArray,\n        timestampOffset = _ref.timestampOffset;\n\n    if (!captionArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    });\n  };\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n\n  var deprecateOldCue = function deprecateOldCue(cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get: function get() {\n          videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get: function get() {\n          videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get: function get() {\n          videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n  /**\n   * Add metadata text track data to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} metadataArray an array of meta data\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {number} videoDuration the duration of the video\n   * @private\n   */\n\n\n  var addMetadata = function addMetadata(_ref2) {\n    var inbandTextTracks = _ref2.inbandTextTracks,\n        metadataArray = _ref2.metadataArray,\n        timestampOffset = _ref2.timestampOffset,\n        videoDuration = _ref2.videoDuration;\n\n    if (!metadataArray) {\n      return;\n    }\n\n    var Cue = window.WebKitDataCue || window.VTTCue;\n    var metadataTrack = inbandTextTracks.metadataTrack_;\n\n    if (!metadataTrack) {\n      return;\n    }\n\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        metadataTrack.addCue(cue);\n      });\n    });\n\n    if (!metadataTrack.cues || !metadataTrack.cues.length) {\n      return;\n    } // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n\n    var cues = metadataTrack.cues;\n    var cuesArray = []; // Create a copy of the TextTrackCueList...\n    // ...disregarding cues with a falsey value\n\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i]) {\n        cuesArray.push(cues[i]);\n      }\n    } // Group cues by their startTime value\n\n\n    var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n      var timeSlot = obj[cue.startTime] || [];\n      timeSlot.push(cue);\n      obj[cue.startTime] = timeSlot;\n      return obj;\n    }, {}); // Sort startTimes by ascending order\n\n    var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }); // Map each cue group's endTime to the next group's startTime\n\n    sortedStartTimes.forEach(function (startTime, idx) {\n      var cueGroup = cuesGroupedByStartTime[startTime];\n      var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n      cueGroup.forEach(function (cue) {\n        cue.endTime = nextTime;\n      });\n    });\n  };\n  /**\n   * Create metadata text track on video.js if it does not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {string} dispatchType the inband metadata track dispatch type\n   * @param {Object} tech the video.js tech\n   * @private\n   */\n\n\n  var createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n    if (inbandTextTracks.metadataTrack_) {\n      return;\n    }\n\n    inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  };\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n\n  var removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n    var i;\n    var cue;\n\n    if (!track) {\n      return;\n    }\n\n    if (!track.cues) {\n      return;\n    }\n\n    i = track.cues.length;\n\n    while (i--) {\n      cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n      if (cue.startTime >= start && cue.endTime <= end) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * Remove duplicate cues from a track on video.js (a cue is considered a\n   * duplicate if it has the same time interval and text as another)\n   *\n   * @param {Object} track the text track to remove the duplicate cues from\n   * @private\n   */\n\n\n  var removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n    var cues = track.cues;\n\n    if (!cues) {\n      return;\n    }\n\n    for (var i = 0; i < cues.length; i++) {\n      var duplicates = [];\n      var occurrences = 0;\n\n      for (var j = 0; j < cues.length; j++) {\n        if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n          occurrences++;\n\n          if (occurrences > 1) {\n            duplicates.push(cues[j]);\n          }\n        }\n      }\n\n      if (duplicates.length) {\n        duplicates.forEach(function (dupe) {\n          return track.removeCue(dupe);\n        });\n      }\n    }\n  };\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n\n  var gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n    var currentTimePts = Math.ceil((currentTime - mapping + 3) * clock_1);\n    var i;\n\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n\n  var updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n    if (!gops.length) {\n      return buffer;\n    }\n\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n\n    var start = gops[0].pts;\n    var i = 0;\n\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n\n  var removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n    var startPts = Math.ceil((start - mapping) * clock_1);\n    var endPts = Math.ceil((end - mapping) * clock_1);\n    var updatedBuffer = buffer.slice();\n    var i = buffer.length;\n\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n\n    var j = i + 1;\n\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n\n  var shallowEqual = function shallowEqual(a, b) {\n    // if both are undefined\n    // or one or the other is undefined\n    // they are not equal\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // they are the same object and thus, equal\n\n\n    if (a === b) {\n      return true;\n    } // sort keys so we can make sure they have\n    // all the same keys later.\n\n\n    var akeys = Object.keys(a).sort();\n    var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n    if (akeys.length !== bkeys.length) {\n      return false;\n    }\n\n    for (var i = 0; i < akeys.length; i++) {\n      var key = akeys[i]; // different sorted keys, not equal\n\n      if (key !== bkeys[i]) {\n        return false;\n      } // different values, not equal\n\n\n      if (a[key] !== b[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\n  var QUOTA_EXCEEDED_ERR = 22;\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Array} segments - the segments array from a playlist.\n   * @return {number} An index of a segment from the playlist to load\n   */\n\n  var getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n    segments = segments || [];\n    var timelineSegments = [];\n    var time = 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (currentTimeline === segment.timeline) {\n        timelineSegments.push(i);\n        time += segment.duration;\n\n        if (time > targetTime) {\n          return i;\n        }\n      }\n    }\n\n    if (timelineSegments.length === 0) {\n      return 0;\n    } // default to the last timeline segment\n\n\n    return timelineSegments[timelineSegments.length - 1];\n  }; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n  // number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n  // as a start to prevent any potential issues with removing content too close to the\n  // playhead.\n\n\n  var MIN_BACK_BUFFER = 1; // in ms\n\n  var CHECK_BUFFER_DELAY = 500;\n\n  var finite = function finite(num) {\n    return typeof num === 'number' && isFinite(num);\n  }; // With most content hovering around 30fps, if a segment has a duration less than a half\n  // frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n  // not accurately reflect the rest of the content.\n\n\n  var MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\n  var illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n      return null;\n    }\n\n    if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n\n    if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interrupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {number} currentTime\n   *        The current time of the player\n   * @param {number} targetDuration\n   *        The target duration of the current playlist\n   * @return {number}\n   *         Time that is safe to remove from the back buffer without interrupting playback\n   */\n\n\n  var safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n    // 30 seconds before the playhead provides a safe default for trimming.\n    //\n    // Choosing a reasonable default is particularly important for high bitrate content and\n    // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n    // throw an APPEND_BUFFER_ERR.\n    var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n    if (seekable.length) {\n      // Some live playlists may have a shorter window of content than the full allowed back\n      // buffer. For these playlists, don't save content that's no longer within the window.\n      trimTime = Math.max(trimTime, seekable.start(0));\n    } // Don't remove within target duration of the current time to avoid the possibility of\n    // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n    var maxTrimTime = currentTime - targetDuration;\n    return Math.min(maxTrimTime, trimTime);\n  };\n\n  var segmentInfoString = function segmentInfoString(segmentInfo) {\n    var startOfSegment = segmentInfo.startOfSegment,\n        duration = segmentInfo.duration,\n        segment = segmentInfo.segment,\n        part = segmentInfo.part,\n        _segmentInfo$playlist = segmentInfo.playlist,\n        seq = _segmentInfo$playlist.mediaSequence,\n        id = _segmentInfo$playlist.id,\n        _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n        segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n        index = segmentInfo.mediaIndex,\n        partIndex = segmentInfo.partIndex,\n        timeline = segmentInfo.timeline;\n    var segmentLen = segments.length - 1;\n    var selection = 'mediaIndex/partIndex increment';\n\n    if (segmentInfo.getMediaInfoForTime) {\n      selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n    } else if (segmentInfo.isSyncRequest) {\n      selection = 'getSyncSegmentCandidate (isSyncRequest)';\n    }\n\n    if (segmentInfo.independent) {\n      selection += \" with independent \" + segmentInfo.independent;\n    }\n\n    var hasPartIndex = typeof partIndex === 'number';\n    var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n    var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n      preloadSegment: segment\n    }) - 1 : 0;\n    return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n  };\n\n  var timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n    return mediaType + \"TimingInfo\";\n  };\n  /**\n   * Returns the timestamp offset to use for the segment.\n   *\n   * @param {number} segmentTimeline\n   *        The timeline of the segment\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} startOfSegment\n   *        The estimated segment start\n   * @param {TimeRange[]} buffered\n   *        The loader's buffer\n   * @param {boolean} overrideCheck\n   *        If true, no checks are made to see if the timestamp offset value should be set,\n   *        but sets it directly to a value.\n   *\n   * @return {number|null}\n   *         Either a number representing a new timestamp offset, or null if the segment is\n   *         part of the same timeline\n   */\n\n\n  var timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n    var segmentTimeline = _ref.segmentTimeline,\n        currentTimeline = _ref.currentTimeline,\n        startOfSegment = _ref.startOfSegment,\n        buffered = _ref.buffered,\n        overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n    // timestamp offset on the transmuxer and source buffer.\n    //\n    // Previously, we changed the timestampOffset if the start of this segment was less than\n    // the currently set timestampOffset, but this isn't desirable as it can produce bad\n    // behavior, especially around long running live streams.\n\n    if (!overrideCheck && segmentTimeline === currentTimeline) {\n      return null;\n    } // When changing renditions, it's possible to request a segment on an older timeline. For\n    // instance, given two renditions with the following:\n    //\n    // #EXTINF:10\n    // segment1\n    // #EXT-X-DISCONTINUITY\n    // #EXTINF:10\n    // segment2\n    // #EXTINF:10\n    // segment3\n    //\n    // And the current player state:\n    //\n    // current time: 8\n    // buffer: 0 => 20\n    //\n    // The next segment on the current rendition would be segment3, filling the buffer from\n    // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n    // then the next segment to be requested will be segment1 from the new rendition in\n    // order to fill time 8 and onwards. Using the buffered end would result in repeated\n    // content (since it would position segment1 of the new rendition starting at 20s). This\n    // case can be identified when the new segment's timeline is a prior value. Instead of\n    // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n    // more accurate to the actual start time of the segment.\n\n\n    if (segmentTimeline < currentTimeline) {\n      return startOfSegment;\n    } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n    // value uses the end of the last segment if it is available. While this value\n    // should often be correct, it's better to rely on the buffered end, as the new\n    // content post discontinuity should line up with the buffered end as if it were\n    // time 0 for the new content.\n\n\n    return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n  };\n  /**\n   * Returns whether or not the loader should wait for a timeline change from the timeline\n   * change controller before processing the segment.\n   *\n   * Primary timing in VHS goes by video. This is different from most media players, as\n   * audio is more often used as the primary timing source. For the foreseeable future, VHS\n   * will continue to use video as the primary timing source, due to the current logic and\n   * expectations built around it.\n\n   * Since the timing follows video, in order to maintain sync, the video loader is\n   * responsible for setting both audio and video source buffer timestamp offsets.\n   *\n   * Setting different values for audio and video source buffers could lead to\n   * desyncing. The following examples demonstrate some of the situations where this\n   * distinction is important. Note that all of these cases involve demuxed content. When\n   * content is muxed, the audio and video are packaged together, therefore syncing\n   * separate media playlists is not an issue.\n   *\n   * CASE 1: Audio prepares to load a new timeline before video:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:                     ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader              ^\n   *\n   * In the above example, the audio loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the video loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the audio loader goes ahead and loads and appends the 6th segment before the video\n   * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n   * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n   * the audio loader must provide the audioAppendStart value to trim the content in the\n   * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n   * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n   * segment until that value is provided.\n   *\n   * CASE 2: Video prepares to load a new timeline before audio:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:             ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader                      ^\n   *\n   * In the above example, the video loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the audio loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the video loader goes ahead and loads and appends the 6th segment, then once the\n   * segment is loaded and processed, both the video and audio timestamp offsets will be\n   * set, since video is used as the primary timing source. This is to ensure content lines\n   * up appropriately, as any modifications to the video timing are reflected by audio when\n   * the video loader sets the audio and video timestamp offsets to the same value. However,\n   * setting the timestamp offset for audio before audio has had a chance to change\n   * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n   * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n   *\n   * CASE 3: When seeking, audio prepares to load a new timeline before video\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:           ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader            ^\n   *\n   * In the above example, both audio and video loaders are loading segments from timeline\n   * 0, but imagine that the seek originated from timeline 1.\n   *\n   * When seeking to a new timeline, the timestamp offset will be set based on the expected\n   * segment start of the loaded video segment. In order to maintain sync, the audio loader\n   * must wait for the video loader to load its segment and update both the audio and video\n   * timestamp offsets before it may load and append its own segment. This is the case\n   * whether the seek results in a mismatched segment request (e.g., the audio loader\n   * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n   * loaders choose to load the same segment index from each playlist, as the segments may\n   * not be aligned perfectly, even for matching segment indexes.\n   *\n   * @param {Object} timelinechangeController\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} segmentTimeline\n   *        The timeline of the segment being loaded\n   * @param {('main'|'audio')} loaderType\n   *        The loader type\n   * @param {boolean} audioDisabled\n   *        Whether the audio is disabled for the loader. This should only be true when the\n   *        loader may have muxed audio in its segment, but should not append it, e.g., for\n   *        the main loader when an alternate audio playlist is active.\n   *\n   * @return {boolean}\n   *         Whether the loader should wait for a timeline change from the timeline change\n   *         controller before processing the segment\n   */\n\n\n  var shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n    var timelineChangeController = _ref2.timelineChangeController,\n        currentTimeline = _ref2.currentTimeline,\n        segmentTimeline = _ref2.segmentTimeline,\n        loaderType = _ref2.loaderType,\n        audioDisabled = _ref2.audioDisabled;\n\n    if (currentTimeline === segmentTimeline) {\n      return false;\n    }\n\n    if (loaderType === 'audio') {\n      var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n        type: 'main'\n      }); // Audio loader should wait if:\n      //\n      // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n      // * main hasn't yet changed to the timeline audio is looking to load\n\n      return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n    } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n    // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n    // loader's segments (or the content is audio/video only and handled by the main\n    // loader).\n\n\n    if (loaderType === 'main' && audioDisabled) {\n      var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n        type: 'audio'\n      }); // Main loader should wait for the audio loader if audio is not pending a timeline\n      // change to the current timeline.\n      //\n      // Since the main loader is responsible for setting the timestamp offset for both\n      // audio and video, the main loader must wait for audio to be about to change to its\n      // timeline before setting the offset, otherwise, if audio is behind in loading,\n      // segments from the previous timeline would be adjusted by the new timestamp offset.\n      //\n      // This requirement means that video will not cross a timeline until the audio is\n      // about to cross to it, so that way audio and video will always cross the timeline\n      // together.\n      //\n      // In addition to normal timeline changes, these rules also apply to the start of a\n      // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n      // that these rules apply to the first timeline change because if they did not, it's\n      // possible that the main loader will cross two timelines before the audio loader has\n      // crossed one. Logic may be implemented to handle the startup as a special case, but\n      // it's easier to simply treat all timeline changes the same.\n\n      if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n        return false;\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  var mediaDuration = function mediaDuration(timingInfos) {\n    var maxDuration = 0;\n    ['video', 'audio'].forEach(function (type) {\n      var typeTimingInfo = timingInfos[type + \"TimingInfo\"];\n\n      if (!typeTimingInfo) {\n        return;\n      }\n\n      var start = typeTimingInfo.start,\n          end = typeTimingInfo.end;\n      var duration;\n\n      if (typeof start === 'bigint' || typeof end === 'bigint') {\n        duration = window.BigInt(end) - window.BigInt(start);\n      } else if (typeof start === 'number' && typeof end === 'number') {\n        duration = end - start;\n      }\n\n      if (typeof duration !== 'undefined' && duration > maxDuration) {\n        maxDuration = duration;\n      }\n    }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n    // as we only need BigInt when we are above that.\n\n    if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n      maxDuration = Number(maxDuration);\n    }\n\n    return maxDuration;\n  };\n\n  var segmentTooLong = function segmentTooLong(_ref3) {\n    var segmentDuration = _ref3.segmentDuration,\n        maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n    // information.\n\n    if (!segmentDuration) {\n      return false;\n    } // For HLS:\n    //\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n    // The EXTINF duration of each Media Segment in the Playlist\n    // file, when rounded to the nearest integer, MUST be less than or equal\n    // to the target duration; longer segments can trigger playback stalls\n    // or other errors.\n    //\n    // For DASH, the mpd-parser uses the largest reported segment duration as the target\n    // duration. Although that reported duration is occasionally approximate (i.e., not\n    // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n    return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n  };\n\n  var getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n    // Right now we aren't following DASH's timing model exactly, so only perform\n    // this check for HLS content.\n    if (sourceType !== 'hls') {\n      return null;\n    }\n\n    var segmentDuration = mediaDuration({\n      audioTimingInfo: segmentInfo.audioTimingInfo,\n      videoTimingInfo: segmentInfo.videoTimingInfo\n    }); // Don't report if we lack information.\n    //\n    // If the segment has a duration of 0 it is either a lack of information or a\n    // metadata only segment and shouldn't be reported here.\n\n    if (!segmentDuration) {\n      return null;\n    }\n\n    var targetDuration = segmentInfo.playlist.targetDuration;\n    var isSegmentWayTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration * 2\n    });\n    var isSegmentSlightlyTooLong = segmentTooLong({\n      segmentDuration: segmentDuration,\n      maxDuration: targetDuration\n    });\n    var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n    if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n      return {\n        severity: isSegmentWayTooLong ? 'warn' : 'info',\n        message: segmentTooLongMessage\n      };\n    }\n\n    return null;\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n\n  var SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n    function SegmentLoader(settings, options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n\n      _this.bandwidth = settings.bandwidth;\n      _this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      _this.roundTrip = NaN;\n\n      _this.resetStats_();\n\n      _this.mediaIndex = null;\n      _this.partIndex = null; // private settings\n\n      _this.hasPlayed_ = settings.hasPlayed;\n      _this.currentTime_ = settings.currentTime;\n      _this.seekable_ = settings.seekable;\n      _this.seeking_ = settings.seeking;\n      _this.duration_ = settings.duration;\n      _this.mediaSource_ = settings.mediaSource;\n      _this.vhs_ = settings.vhs;\n      _this.loaderType_ = settings.loaderType;\n      _this.currentMediaInfo_ = void 0;\n      _this.startingMediaInfo_ = void 0;\n      _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      _this.goalBufferLength_ = settings.goalBufferLength;\n      _this.sourceType_ = settings.sourceType;\n      _this.sourceUpdater_ = settings.sourceUpdater;\n      _this.inbandTextTracks_ = settings.inbandTextTracks;\n      _this.state_ = 'INIT';\n      _this.timelineChangeController_ = settings.timelineChangeController;\n      _this.shouldSaveSegmentTimingInfo_ = true;\n      _this.parse708captions_ = settings.parse708captions;\n      _this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n      _this.captionServices_ = settings.captionServices;\n      _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n      _this.checkBufferTimeout_ = null;\n      _this.error_ = void 0;\n      _this.currentTimeline_ = -1;\n      _this.pendingSegment_ = null;\n      _this.xhrOptions_ = null;\n      _this.pendingSegments_ = [];\n      _this.audioDisabled_ = false;\n      _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n      _this.gopBuffer_ = [];\n      _this.timeMapping_ = 0;\n      _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n      _this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      _this.playlistOfLastInitSegment_ = {\n        audio: null,\n        video: null\n      };\n      _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n      // information yet to start the loading process (e.g., if the audio loader wants to\n      // load a segment from the next timeline but the main loader hasn't yet crossed that\n      // timeline), then the load call will be added to the queue until it is ready to be\n      // processed.\n\n      _this.loadQueue_ = [];\n      _this.metadataQueue_ = {\n        id3: [],\n        caption: []\n      };\n      _this.waitingOnRemove_ = false;\n      _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n      _this.activeInitSegmentId_ = null;\n      _this.initSegments_ = {}; // HLSe playback\n\n      _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n      _this.keyCache_ = {};\n      _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      _this.syncController_ = settings.syncController;\n      _this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n      _this.transmuxer_ = _this.createTransmuxer_();\n\n      _this.triggerSyncInfoUpdate_ = function () {\n        return _this.trigger('syncinfoupdate');\n      };\n\n      _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n      _this.mediaSource_.addEventListener('sourceopen', function () {\n        if (!_this.isEndOfStream_()) {\n          _this.ended_ = false;\n        }\n      }); // ...for determining the fetch location\n\n\n      _this.fetchAtBuffer_ = false;\n      _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n      Object.defineProperty(assertThisInitialized(_this), 'state', {\n        get: function get() {\n          return this.state_;\n        },\n        set: function set(newState) {\n          if (newState !== this.state_) {\n            this.logger_(this.state_ + \" -> \" + newState);\n            this.state_ = newState;\n            this.trigger('statechange');\n          }\n        }\n      });\n\n      _this.sourceUpdater_.on('ready', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      }); // Only the main loader needs to listen for pending timeline changes, as the main\n      // loader should wait for audio to be ready to change its timeline so that both main\n      // and audio timelines change together. For more details, see the\n      // shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'main') {\n        _this.timelineChangeController_.on('pendingtimelinechange', function () {\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      } // The main loader only listens on pending timeline changes, but the audio loader,\n      // since its loads follow main, needs to listen on timeline changes. For more details,\n      // see the shouldWaitForTimelineChange function.\n\n\n      if (_this.loaderType_ === 'audio') {\n        _this.timelineChangeController_.on('timelinechange', function () {\n          if (_this.hasEnoughInfoToLoad_()) {\n            _this.processLoadQueue_();\n          }\n\n          if (_this.hasEnoughInfoToAppend_()) {\n            _this.processCallQueue_();\n          }\n        });\n      }\n\n      return _this;\n    }\n\n    var _proto = SegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      return segmentTransmuxer.createTransmuxer({\n        remux: false,\n        alignGopsAtEnd: this.safeAppend_,\n        keepOriginalTimestamps: true,\n        parse708captions: this.parse708captions_,\n        captionServices: this.captionServices_\n      });\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n    ;\n\n    _proto.resetStats_ = function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n      this.mediaAppends = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n\n      this.resetStats_();\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n\n      this.off();\n    };\n\n    _proto.setAudio = function setAudio(enable) {\n      this.audioDisabled_ = !enable;\n\n      if (enable) {\n        this.appendInitSegment_.audio = true;\n      } else {\n        // remove current track audio if it gets disabled\n        this.sourceUpdater_.removeAudio(0, this.duration_());\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n    ;\n\n    _proto.abort = function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n    ;\n\n    _proto.abort_ = function abort_() {\n      if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      this.waitingOnRemove_ = false;\n      window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n      this.quotaExceededErrorRetryTimeout_ = null;\n    };\n\n    _proto.checkForAbort_ = function checkForAbort_(requestId) {\n      // If the state is APPENDING, then aborts will not modify the state, meaning the first\n      // callback that happens should reset the state to READY so that loading can continue.\n      if (this.state === 'APPENDING' && !this.pendingSegment_) {\n        this.state = 'READY';\n        return true;\n      }\n\n      if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n    ;\n\n    _proto.error = function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.logger_('error occurred:', _error);\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    };\n\n    _proto.endOfStream = function endOfStream() {\n      this.ended_ = true;\n\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.gopBuffer_.length = 0;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      var trackInfo = this.getMediaInfo_();\n\n      if (!this.sourceUpdater_ || !trackInfo) {\n        return videojs.createTimeRanges();\n      }\n\n      if (this.loaderType_ === 'main') {\n        var hasAudio = trackInfo.hasAudio,\n            hasVideo = trackInfo.hasVideo,\n            isMuxed = trackInfo.isMuxed;\n\n        if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n          return this.sourceUpdater_.buffered();\n        }\n\n        if (hasVideo) {\n          return this.sourceUpdater_.videoBuffered();\n        }\n      } // One case that can be ignored for now is audio only with alt audio,\n      // as we don't yet have proper support for that.\n\n\n      return this.sourceUpdater_.audioBuffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          tracks: map.tracks,\n          timescales: map.timescales\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n    ;\n\n    _proto.segmentKey = function segmentKey(key, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n    ;\n\n    _proto.load = function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // if all the configuration is ready, initialize and begin loading\n\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n      // audio data from the muxed content should be removed\n\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n    ;\n\n    _proto.playlist = function playlist(newPlaylist, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        }; // Setting the date time mapping means mapping the program date time (if available)\n        // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n        // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n        // be updated as the playlist is refreshed before the loader starts loading, the\n        // program date time mapping needs to be updated as well.\n        //\n        // This mapping is only done for the main loader because a program date time should\n        // map equivalently between playlists.\n\n        if (this.loaderType_ === 'main') {\n          this.syncController_.setDateTimeMappingForStart(newPlaylist);\n        }\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must reset/resync the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          // on playlist changes we want it to be possible to fetch\n          // at the buffer for vod but not for live. So we use resetLoader\n          // for live and resyncLoader for vod. We want this because\n          // if a playlist uses independent and non-independent segments/parts the\n          // buffer may not accurately reflect the next segment that we should try\n          // downloading.\n          if (!newPlaylist.endList) {\n            this.resetLoader();\n          } else {\n            this.resyncLoader();\n          }\n        }\n\n        this.currentMediaInfo_ = void 0;\n        this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n        // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n        // new playlist was incremented by 1.\n\n        if (this.mediaIndex < 0) {\n          this.mediaIndex = null;\n          this.partIndex = null;\n        } else {\n          var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n          // unless parts fell off of the playlist for this segment.\n          // In that case we need to reset partIndex and resync\n\n          if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n            var mediaIndex = this.mediaIndex;\n            this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n            this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n            // as the part was dropped from our current playlists segment.\n            // The mediaIndex will still be valid so keep that around.\n\n            this.mediaIndex = mediaIndex;\n          }\n        }\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n        if (segmentInfo.mediaIndex < 0) {\n          segmentInfo.mediaIndex = null;\n          segmentInfo.partIndex = null;\n        } else {\n          // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n\n          if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n            segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n          }\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n    ;\n\n    _proto.pause = function pause() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n    ;\n\n    _proto.paused = function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     *\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n    ;\n\n    _proto.resetEverything = function resetEverything(done) {\n      this.ended_ = false;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        }); // reset the cache in the transmuxer\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n    ;\n\n    _proto.resetLoader = function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n    ;\n\n    _proto.resyncLoader = function resyncLoader() {\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n\n      this.mediaIndex = null;\n      this.partIndex = null;\n      this.syncPoint_ = null;\n      this.isPendingTimestampOffset_ = false;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.abort();\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * @param {boolean} force - force all remove operations to happen\n     * operation is complete\n     */\n    ;\n\n    _proto.remove = function remove(start, end, done, force) {\n      if (done === void 0) {\n        done = function done() {};\n      }\n\n      if (force === void 0) {\n        force = false;\n      } // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n\n\n      if (end === Infinity) {\n        end = this.duration_();\n      } // skip removes that would throw an error\n      // commonly happens during a rendition switch at the start of a video\n      // from start 0 to end 0\n\n\n      if (end <= start) {\n        this.logger_('skipping remove because end ${end} is <= start ${start}');\n        return;\n      }\n\n      if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n        this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n        return;\n      } // set it to one to complete this function's removes\n\n\n      var removesRemaining = 1;\n\n      var removeFinished = function removeFinished() {\n        removesRemaining--;\n\n        if (removesRemaining === 0) {\n          done();\n        }\n      };\n\n      if (force || !this.audioDisabled_) {\n        removesRemaining++;\n        this.sourceUpdater_.removeAudio(start, end, removeFinished);\n      } // While it would be better to only remove video if the main loader has video, this\n      // should be safe with audio only as removeVideo will call back even if there's no\n      // video buffer.\n      //\n      // In theory we can check to see if there's video before calling the remove, but in\n      // the event that we're switching between renditions and from video to audio only\n      // (when we add support for that), we may need to clear the video contents despite\n      // what the new media will contain.\n\n\n      if (force || this.loaderType_ === 'main') {\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        removesRemaining++;\n        this.sourceUpdater_.removeVideo(start, end, removeFinished);\n      } // remove any captions and ID3 tags\n\n\n      for (var track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n      removeFinished();\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBuffer_ = function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n    ;\n\n    _proto.monitorBufferTick_ = function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      // TODO since the source buffer maintains a queue, and we shouldn't call this function\n      // except when we're ready for the next segment, this check can most likely be removed\n      if (this.sourceUpdater_.updating()) {\n        return;\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        this.isPendingTimestampOffset_ = false;\n        this.timelineChangeController_.pendingTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if we should call endOfStream on the media source based\n     * on the state of the buffer or if appened segment was the final\n     * segment in the playlist.\n     *\n     * @param {number} [mediaIndex] the media index of segment we last appended\n     * @param {Object} [playlist] a media playlist object\n     * @return {boolean} do we need to call endOfStream on the MediaSource\n     */\n    ;\n\n    _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n      if (mediaIndex === void 0) {\n        mediaIndex = this.mediaIndex;\n      }\n\n      if (playlist === void 0) {\n        playlist = this.playlist_;\n      }\n\n      if (partIndex === void 0) {\n        partIndex = this.partIndex;\n      }\n\n      if (!playlist || !this.mediaSource_) {\n        return false;\n      }\n\n      var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n      var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n      var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n      // so that MediaSources can trigger the `ended` event when it runs out of\n      // buffered data instead of waiting for me\n\n      return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n    }\n    /**\n     * Determines what request should be made given current segment loader state.\n     *\n     * @return {Object} a request object that describes the segment/part to load\n     */\n    ;\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      var buffered = this.buffered_();\n      var bufferedEnd = lastBufferedEnd(buffered) || 0;\n      var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n      var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n      var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n      var segments = this.playlist_.segments; // return no segment if:\n      // 1. we don't have segments\n      // 2. The video has not yet played and we already downloaded a segment\n      // 3. we already have enough buffered time\n\n      if (!segments.length || preloaded || haveEnoughBuffer) {\n        return null;\n      }\n\n      this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      var next = {\n        partIndex: null,\n        mediaIndex: null,\n        startOfSegment: null,\n        playlist: this.playlist_,\n        isSyncRequest: Boolean(!this.syncPoint_)\n      };\n\n      if (next.isSyncRequest) {\n        next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      } else if (this.mediaIndex !== null) {\n        var segment = segments[this.mediaIndex];\n        var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n        next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n        if (segment.parts && segment.parts[partIndex + 1]) {\n          next.mediaIndex = this.mediaIndex;\n          next.partIndex = partIndex + 1;\n        } else {\n          next.mediaIndex = this.mediaIndex + 1;\n        }\n      } else {\n        // Find the segment containing the end of the buffer or current time.\n        var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n          experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        }),\n            segmentIndex = _Playlist$getMediaInf.segmentIndex,\n            startTime = _Playlist$getMediaInf.startTime,\n            _partIndex = _Playlist$getMediaInf.partIndex;\n\n        next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n        next.mediaIndex = segmentIndex;\n        next.startOfSegment = startTime;\n        next.partIndex = _partIndex;\n      }\n\n      var nextSegment = segments[next.mediaIndex];\n      var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n      // the next partIndex is invalid do not choose a next segment.\n\n      if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n        return null;\n      } // if the next segment has parts, and we don't have a partIndex.\n      // Set partIndex to 0\n\n\n      if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n        next.partIndex = 0;\n        nextPart = nextSegment.parts[0];\n      } // if we have no buffered data then we need to make sure\n      // that the next part we append is \"independent\" if possible.\n      // So we check if the previous part is independent, and request\n      // it if it is.\n\n\n      if (!bufferedTime && nextPart && !nextPart.independent) {\n        if (next.partIndex === 0) {\n          var lastSegment = segments[next.mediaIndex - 1];\n          var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n          if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n            next.mediaIndex -= 1;\n            next.partIndex = lastSegment.parts.length - 1;\n            next.independent = 'previous segment';\n          }\n        } else if (nextSegment.parts[next.partIndex - 1].independent) {\n          next.partIndex -= 1;\n          next.independent = 'previous part';\n        }\n      }\n\n      var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n      // 1. this is the last segment in the playlist\n      // 2. end of stream has been called on the media source already\n      // 3. the player is not seeking\n\n      if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n        return null;\n      }\n\n      return this.generateSegmentInfo_(next);\n    };\n\n    _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n      var independent = options.independent,\n          playlist = options.playlist,\n          mediaIndex = options.mediaIndex,\n          startOfSegment = options.startOfSegment,\n          isSyncRequest = options.isSyncRequest,\n          partIndex = options.partIndex,\n          forceTimestampOffset = options.forceTimestampOffset,\n          getMediaInfoForTime = options.getMediaInfoForTime;\n      var segment = playlist.segments[mediaIndex];\n      var part = typeof partIndex === 'number' && segment.parts[partIndex];\n      var segmentInfo = {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: part && part.resolvedUri || segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        partIndex: part ? partIndex : null,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: part && part.duration || segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment,\n        part: part,\n        byteLength: 0,\n        transmuxer: this.transmuxer_,\n        // type of getMediaInfoForTime that was used to get this segment\n        getMediaInfoForTime: getMediaInfoForTime,\n        independent: independent\n      };\n      var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n      segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n        segmentTimeline: segment.timeline,\n        currentTimeline: this.currentTimeline_,\n        startOfSegment: startOfSegment,\n        buffered: this.buffered_(),\n        overrideCheck: overrideCheck\n      });\n      var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n      if (typeof audioBufferedEnd === 'number') {\n        // since the transmuxer is using the actual timing values, but the buffer is\n        // adjusted by the timestamp offset, we must adjust the value here\n        segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n      }\n\n      if (this.sourceUpdater_.videoBuffered().length) {\n        segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n        // adjusted by the timestmap offset, we must adjust the value here\n        this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n      }\n\n      return segmentInfo;\n    } // get the timestampoffset for a segment,\n    // added so that vtt segment loader can override and prevent\n    // adding timestamp offsets.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n      return timestampOffsetForSegment(options);\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @private\n     */\n    ;\n\n    _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n      if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$1) {\n        return;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.vhs_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.trigger('earlyabort');\n    };\n\n    _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n      this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n      this.mediaRequestsAborted += 1;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n    ;\n\n    _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      this.trigger('progress');\n    };\n\n    _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      if (this.checkForIllegalMediaSwitch(trackInfo)) {\n        return;\n      }\n\n      trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n      // Guard against cases where we're not getting track info at all until we are\n      // certain that all streams will provide it.\n\n      if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n        this.startingMediaInfo_ = trackInfo;\n        this.currentMediaInfo_ = trackInfo;\n        this.logger_('trackinfo update', trackInfo);\n        this.trigger('trackinfo');\n      } // trackinfo may cause an abort if the trackinfo\n      // causes a codec change to an unsupported codec.\n\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // set trackinfo on the pending segment so that\n      // it can append.\n\n\n      this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n      segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n      segmentInfo[timingInfoProperty][timeType] = time;\n      this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    };\n\n    _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n      var _this2 = this;\n\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // This could only happen with fmp4 segments, but\n      // should still not happen in general\n\n\n      if (captionData.length === 0) {\n        this.logger_('SegmentLoader received no captions from a caption event');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n      // can be adjusted by the timestamp offset\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n      var captionTracks = {}; // get total start/end and captions for each track/stream\n\n      captionData.forEach(function (caption) {\n        // caption.stream is actually a track name...\n        // set to the existing values in tracks or default values\n        captionTracks[caption.stream] = captionTracks[caption.stream] || {\n          // Infinity, as any other value will be less than this\n          startTime: Infinity,\n          captions: [],\n          // 0 as an other value will be more than this\n          endTime: 0\n        };\n        var captionTrack = captionTracks[caption.stream];\n        captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n        captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n        captionTrack.captions.push(caption);\n      });\n      Object.keys(captionTracks).forEach(function (trackName) {\n        var _captionTracks$trackN = captionTracks[trackName],\n            startTime = _captionTracks$trackN.startTime,\n            endTime = _captionTracks$trackN.endTime,\n            captions = _captionTracks$trackN.captions;\n        var inbandTextTracks = _this2.inbandTextTracks_;\n\n        _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n        createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n        // We do this because a rendition change that also changes the timescale for captions\n        // will result in captions being re-parsed for certain segments. If we add them again\n        // without clearing we will have two of the same captions visible.\n\n        removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n        addCaptionData({\n          captionArray: captions,\n          inbandTextTracks: inbandTextTracks,\n          timestampOffset: timestampOffset\n        });\n      }); // Reset stored captions since we added parsed\n      // captions to a text track at this point\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    };\n\n    _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n        return;\n      }\n\n      var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n      // audio/video source with a metadata track, and an alt audio with a metadata track.\n      // However, this probably won't happen, and if it does it can be handled then.\n\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n      addMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        metadataArray: id3Frames,\n        timestampOffset: timestampOffset,\n        videoDuration: this.duration_()\n      });\n    };\n\n    _proto.processMetadataQueue_ = function processMetadataQueue_() {\n      this.metadataQueue_.id3.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.caption.forEach(function (fn) {\n        return fn();\n      });\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n    };\n\n    _proto.processCallQueue_ = function processCallQueue_() {\n      var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.callQueue_ = [];\n      callQueue.forEach(function (fun) {\n        return fun();\n      });\n    };\n\n    _proto.processLoadQueue_ = function processLoadQueue_() {\n      var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.loadQueue_ = [];\n      loadQueue.forEach(function (fun) {\n        return fun();\n      });\n    }\n    /**\n     * Determines whether the loader has enough info to load the next segment.\n     *\n     * @return {boolean}\n     *         Whether or not the loader has enough info to load the next segment\n     */\n    ;\n\n    _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n      // Since primary timing goes by video, only the audio loader potentially needs to wait\n      // to load.\n      if (this.loaderType_ !== 'audio') {\n        return true;\n      }\n\n      var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n      // enough info to load.\n\n      if (!segmentInfo) {\n        return false;\n      } // The first segment can and should be loaded immediately so that source buffers are\n      // created together (before appending). Source buffer creation uses the presence of\n      // audio and video data to determine whether to create audio/video source buffers, and\n      // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n      if (!this.getCurrentMediaInfo_()) {\n        return true;\n      }\n\n      if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n      // can be requested and downloaded and only wait before it is transmuxed or parsed.\n      // But in practice, there are a few reasons why it is better to wait until a loader\n      // is ready to append that segment before requesting and downloading:\n      //\n      // 1. Because audio and main loaders cross discontinuities together, if this loader\n      //    is waiting for the other to catch up, then instead of requesting another\n      //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n      //    allotted to the loader currently behind.\n      // 2. media-segment-request doesn't have to have logic to consider whether a segment\n      // is ready to be processed or not, isolating the queueing behavior to the loader.\n      // 3. The audio loader bases some of its segment properties on timing information\n      //    provided by the main loader, meaning that, if the logic for waiting on\n      //    processing was in media-segment-request, then it would also need to know how\n      //    to re-generate the segment information after the main loader caught up.\n      shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n    };\n\n    _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n      if (segmentInfo === void 0) {\n        segmentInfo = this.pendingSegment_;\n      }\n\n      return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n    };\n\n    _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n      if (!this.sourceUpdater_.ready()) {\n        return false;\n      } // If content needs to be removed or the loader is waiting on an append reattempt,\n      // then no additional content should be appended until the prior append is resolved.\n\n\n      if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n        return false;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n      // we do not have information on this specific\n      // segment yet\n\n      if (!segmentInfo || !trackInfo) {\n        return false;\n      }\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && !segmentInfo.videoTimingInfo) {\n        return false;\n      } // muxed content only relies on video timing information for now.\n\n\n      if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n        return false;\n      }\n\n      if (shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.handleData_ = function handleData_(simpleSegment, result) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // If there's anything in the call queue, then this data came later and should be\n      // executed after the calls currently queued.\n\n\n      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n        this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n      this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n      this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n      // logic may change behavior depending on the state, and changing state too early may\n      // inflate our estimates of bandwidth. In the future this should be re-examined to\n      // note more granular states.\n      // don't process and append data if the mediaSource is closed\n\n      if (this.mediaSource_.readyState === 'closed') {\n        return;\n      } // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n        segmentInfo.segment.map = simpleSegment.map;\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      segmentInfo.isFmp4 = simpleSegment.isFmp4;\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n      if (segmentInfo.isFmp4) {\n        this.trigger('fmp4');\n        segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n      } else {\n        var trackInfo = this.getCurrentMediaInfo_();\n        var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n        var firstVideoFrameTimeForData;\n\n        if (useVideoTimingInfo) {\n          firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n        } // Segment loader knows more about segment timing than the transmuxer (in certain\n        // aspects), so make any changes required for a more accurate start time.\n        // Don't set the end time yet, as the segment may not be finished processing.\n\n\n        segmentInfo.timingInfo.start = this.trueSegmentStart_({\n          currentStart: segmentInfo.timingInfo.start,\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex,\n          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n          useVideoTimingInfo: useVideoTimingInfo,\n          firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n          videoTimingInfo: segmentInfo.videoTimingInfo,\n          audioTimingInfo: segmentInfo.audioTimingInfo\n        });\n      } // Init segments for audio and video only need to be appended in certain cases. Now\n      // that data is about to be appended, we can check the final cases to determine\n      // whether we should append an init segment.\n\n\n      this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n      // as we use the start of the segment to offset the best guess (playlist provided)\n      // timestamp offset.\n\n      this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n      // be appended or not.\n\n      if (segmentInfo.isSyncRequest) {\n        // first save/update our timing info for this segment.\n        // this is what allows us to choose an accurate segment\n        // and the main reason we make a sync request.\n        this.updateTimingInfoEnd_(segmentInfo);\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n        var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n        // after taking into account its timing info, do not append it.\n\n        if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n          this.logger_('sync segment was incorrect, not appending');\n          return;\n        } // otherwise append it like any other segment as our guess was correct.\n\n\n        this.logger_('sync segment was correct, appending');\n      } // Save some state so that in the future anything waiting on first append (and/or\n      // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n      // we need some notion of whether the timestamp offset or other relevant information\n      // has had a chance to be set.\n\n\n      segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n      this.processMetadataQueue_();\n      this.appendData_(segmentInfo, result);\n    };\n\n    _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n      // alt audio doesn't manage timestamp offset\n      if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n      // segment for each chunk\n      !segmentInfo.changedTimestampOffset) {\n        // if the timestamp offset changed, the timeline may have changed, so we have to re-\n        // append init segments\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n      }\n\n      if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n        // make sure we append init segment on playlist changes, in case the media config\n        // changed\n        this.appendInitSegment_[type] = true;\n      }\n    };\n\n    _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n      var type = _ref4.type,\n          initSegment = _ref4.initSegment,\n          map = _ref4.map,\n          playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n      // (Section 3) required to parse the applicable Media Segments.  It applies to every\n      // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n      // or until the end of the playlist.\"\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n      if (map) {\n        var id = initSegmentId(map);\n\n        if (this.activeInitSegmentId_ === id) {\n          // don't need to re-append the init segment if the ID matches\n          return null;\n        } // a map-specified init segment takes priority over any transmuxed (or otherwise\n        // obtained) init segment\n        //\n        // this also caches the init segment for later use\n\n\n        initSegment = this.initSegmentForMap(map, true).bytes;\n        this.activeInitSegmentId_ = id;\n      } // We used to always prepend init segments for video, however, that shouldn't be\n      // necessary. Instead, we should only append on changes, similar to what we've always\n      // done for audio. This is more important (though may not be that important) for\n      // frame-by-frame appending for LHLS, simply because of the increased quantity of\n      // appends.\n\n\n      if (initSegment && this.appendInitSegment_[type]) {\n        // Make sure we track the playlist that we last used for the init segment, so that\n        // we can re-append the init segment in the event that we get data from a new\n        // playlist. Discontinuities and track changes are handled in other sections.\n        this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n        this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n        // we are appending the muxer init segment\n\n        this.activeInitSegmentId_ = null;\n        return initSegment;\n      }\n\n      return null;\n    };\n\n    _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n      var _this3 = this;\n\n      var segmentInfo = _ref5.segmentInfo,\n          type = _ref5.type,\n          bytes = _ref5.bytes;\n      var audioBuffered = this.sourceUpdater_.audioBuffered();\n      var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n      // should be cleared out during the buffer removals. However, log in case it helps\n      // debug.\n\n      if (audioBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n      }\n\n      if (videoBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n      }\n\n      var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n      var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n      var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n      var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n      if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n        // Can't remove enough buffer to make room for new segment (or the browser doesn't\n        // allow for appends of segments this size). In the future, it may be possible to\n        // split up the segment and append in pieces, but for now, error out this playlist\n        // in an attempt to switch to a more manageable rendition.\n        this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n        this.error({\n          message: 'Quota exceeded error with append of a single segment of content',\n          excludeUntil: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n      // that the segment-loader should block on future events until this one is handled, so\n      // that it doesn't keep moving onto further segments. Adding the call to the call\n      // queue will prevent further appends until waitingOnRemove_ and\n      // quotaExceededErrorRetryTimeout_ are cleared.\n      //\n      // Note that this will only block the current loader. In the case of demuxed content,\n      // the other load may keep filling as fast as possible. In practice, this should be\n      // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n      // source buffer, or video fills without enough room for audio to append (and without\n      // the availability of clearing out seconds of back buffer to make room for audio).\n      // But it might still be good to handle this case in the future as a TODO.\n\n\n      this.waitingOnRemove_ = true;\n      this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n      var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n      // before retrying.\n\n      var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n      this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n      this.remove(0, timeToRemoveUntil, function () {\n        _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n        _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n        // attempts (since we can't clear less than the minimum)\n\n        _this3.quotaExceededErrorRetryTimeout_ = window.setTimeout(function () {\n          _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n          _this3.quotaExceededErrorRetryTimeout_ = null;\n\n          _this3.processCallQueue_();\n        }, MIN_BACK_BUFFER * 1000);\n      }, true);\n    };\n\n    _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n      var segmentInfo = _ref6.segmentInfo,\n          type = _ref6.type,\n          bytes = _ref6.bytes; // if there's no error, nothing to do\n\n      if (!error) {\n        return;\n      }\n\n      if (error.code === QUOTA_EXCEEDED_ERR) {\n        this.handleQuotaExceededError_({\n          segmentInfo: segmentInfo,\n          type: type,\n          bytes: bytes\n        }); // A quota exceeded error should be recoverable with a future re-append, so no need\n        // to trigger an append error.\n\n        return;\n      }\n\n      this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n      this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n      // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n      //\n      // Trigger a special error so that it can be handled separately from normal,\n      // recoverable errors.\n\n      this.trigger('appenderror');\n    };\n\n    _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n      var segmentInfo = _ref7.segmentInfo,\n          type = _ref7.type,\n          initSegment = _ref7.initSegment,\n          data = _ref7.data,\n          bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n      if (!bytes) {\n        var segments = [data];\n        var byteLength = data.byteLength;\n\n        if (initSegment) {\n          // if the media initialization segment is changing, append it before the content\n          // segment\n          segments.unshift(initSegment);\n          byteLength += initSegment.byteLength;\n        } // Technically we should be OK appending the init segment separately, however, we\n        // haven't yet tested that, and prepending is how we have always done things.\n\n\n        bytes = concatSegments({\n          bytes: byteLength,\n          segments: segments\n        });\n      }\n\n      this.sourceUpdater_.appendBuffer({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }, this.handleAppendError_.bind(this, {\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }));\n    };\n\n    _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n      var timingInfoProperty = type + \"TimingInfo\";\n\n      if (!segment[timingInfoProperty]) {\n        segment[timingInfoProperty] = {};\n      }\n\n      segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n      segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n      segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n      segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n      segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n      segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n    };\n\n    _proto.appendData_ = function appendData_(segmentInfo, result) {\n      var type = result.type,\n          data = result.data;\n\n      if (!data || !data.byteLength) {\n        return;\n      }\n\n      if (type === 'audio' && this.audioDisabled_) {\n        return;\n      }\n\n      var initSegment = this.getInitSegmentAndUpdateState_({\n        type: type,\n        initSegment: result.initSegment,\n        playlist: segmentInfo.playlist,\n        map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n      });\n      this.appendToSourceBuffer_({\n        segmentInfo: segmentInfo,\n        type: type,\n        initSegment: initSegment,\n        data: data\n      });\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n    ;\n\n    _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n      var _this4 = this;\n\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'clearAllMp4Captions'\n          });\n        }\n      }\n\n      if (!this.hasEnoughInfoToLoad_()) {\n        this.loadQueue_.push(function () {\n          // regenerate the audioAppendStart, timestampOffset, etc as they\n          // may have changed since this function was added to the queue.\n          var options = _extends_1({}, segmentInfo, {\n            forceTimestampOffset: true\n          });\n\n          _extends_1(segmentInfo, _this4.generateSegmentInfo_(options));\n\n          _this4.isPendingTimestampOffset_ = false;\n\n          _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n        });\n        return;\n      }\n\n      this.updateTransmuxerAndRequestSegment_(segmentInfo);\n    };\n\n    _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n      var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n      // the transmuxer still needs to be updated before then.\n      //\n      // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n      // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n      if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n        this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n        segmentInfo.gopsToAlignWith = [];\n        this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n        this.transmuxer_.postMessage({\n          action: 'setTimestampOffset',\n          timestampOffset: segmentInfo.timestampOffset\n        });\n      }\n\n      var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n      var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n      var isWalkingForward = this.mediaIndex !== null;\n      var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n      // the first timeline\n      segmentInfo.timeline > 0;\n      var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n      this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n      // then this init segment has never been seen before and should be appended.\n      //\n      // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n      // both to true and leave the decision of whether to append the init segment to append time.\n\n      if (simpleSegment.map && !simpleSegment.map.bytes) {\n        this.logger_('going to request init segment.');\n        this.appendInitSegment_ = {\n          video: true,\n          audio: true\n        };\n      }\n\n      segmentInfo.abortRequests = mediaSegmentRequest({\n        xhr: this.vhs_.xhr,\n        xhrOptions: this.xhrOptions_,\n        decryptionWorker: this.decrypter_,\n        segment: simpleSegment,\n        abortFn: this.handleAbort_.bind(this, segmentInfo),\n        progressFn: this.handleProgress_.bind(this),\n        trackInfoFn: this.handleTrackInfo_.bind(this),\n        timingInfoFn: this.handleTimingInfo_.bind(this),\n        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n        captionsFn: this.handleCaptions_.bind(this),\n        isEndOfTimeline: isEndOfTimeline,\n        endedTimelineFn: function endedTimelineFn() {\n          _this5.logger_('received endedtimeline callback');\n        },\n        id3Fn: this.handleId3_.bind(this),\n        dataFn: this.handleData_.bind(this),\n        doneFn: this.segmentRequestFinished_.bind(this),\n        onTransmuxerLog: function onTransmuxerLog(_ref8) {\n          var message = _ref8.message,\n              level = _ref8.level,\n              stream = _ref8.stream;\n\n          _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n        }\n      });\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n    ;\n\n    _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @return {Object} a simplified segment object copy\n     */\n    ;\n\n    _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var simpleSegment = {\n        resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n        byterange: part ? part.byterange : segment.byterange,\n        requestId: segmentInfo.requestId,\n        transmuxer: segmentInfo.transmuxer,\n        audioAppendStart: segmentInfo.audioAppendStart,\n        gopsToAlignWith: segmentInfo.gopsToAlignWith,\n        part: segmentInfo.part\n      };\n      var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n      if (previousSegment && previousSegment.timeline === segment.timeline) {\n        // The baseStartTime of a segment is used to handle rollover when probing the TS\n        // segment to retrieve timing information. Since the probe only looks at the media's\n        // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n        // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n        // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n        // seconds of media time, so should be used here. The previous segment is used since\n        // the end of the previous segment should represent the beginning of the current\n        // segment, so long as they are on the same timeline.\n        if (previousSegment.videoTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n        } else if (previousSegment.audioTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n        }\n      }\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegmentForMap(segment.map);\n      }\n\n      return simpleSegment;\n    };\n\n    _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (stats) {\n        this.mediaBytesTransferred += stats.bytesReceived;\n        this.mediaTransferDuration += stats.roundTripTime;\n      }\n    };\n\n    _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n      // byteLength will be used for throughput, and should be based on bytes receieved,\n      // which we only know at the end of the request and should reflect total bytes\n      // downloaded rather than just bytes processed from components of the segment\n      this.pendingSegment_.byteLength = stats.bytesReceived;\n\n      if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      this.bandwidth = stats.bandwidth;\n      this.roundTrip = stats.roundTripTime;\n    };\n\n    _proto.handleTimeout_ = function handleTimeout_() {\n      // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functinality between segment loaders\n      this.mediaRequestsTimedout += 1;\n      this.bandwidth = 1;\n      this.roundTrip = NaN;\n      this.trigger('bandwidthupdate');\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n      // check the call queue directly since this function doesn't need to deal with any\n      // data, and can continue even if the source buffers are not set up and we didn't get\n      // any data from the segment\n      if (this.callQueue_.length) {\n        this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n      if (!this.pendingSegment_) {\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n      if (result.gopInfo) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n      } // Although we may have already started appending on progress, we shouldn't switch the\n      // state away from loading until we are officially done loading the segment data.\n\n\n      this.state = 'APPENDING'; // used for testing\n\n      this.trigger('appending');\n      this.waitForAppendsToComplete_(segmentInfo);\n    };\n\n    _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n      var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n      if (timelineMapping !== null) {\n        this.timeMapping_ = timelineMapping;\n      }\n    };\n\n    _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n    };\n\n    _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n      if (timestampOffset === null) {\n        return false;\n      } // note that we're potentially using the same timestamp offset for both video and\n      // audio\n\n\n      if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        return true;\n      }\n\n      if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n      var currentStart = _ref9.currentStart,\n          playlist = _ref9.playlist,\n          mediaIndex = _ref9.mediaIndex,\n          firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n          currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n          useVideoTimingInfo = _ref9.useVideoTimingInfo,\n          videoTimingInfo = _ref9.videoTimingInfo,\n          audioTimingInfo = _ref9.audioTimingInfo;\n\n      if (typeof currentStart !== 'undefined') {\n        // if start was set once, keep using it\n        return currentStart;\n      }\n\n      if (!useVideoTimingInfo) {\n        return audioTimingInfo.start;\n      }\n\n      var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n      // within that segment. Since the transmuxer maintains a cache of incomplete data\n      // from and/or the last frame seen, the start time may reflect a frame that starts\n      // in the previous segment. Check for that case and ensure the start time is\n      // accurate for the segment.\n\n      if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n        return firstVideoFrameTimeForData;\n      }\n\n      return videoTimingInfo.start;\n    };\n\n    _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n      var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n      if (!trackInfo) {\n        this.error({\n          message: 'No starting media returned, likely due to an unsupported media format.',\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n      // on each queue this loader is responsible for to ensure that the appends are\n      // complete.\n\n\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n      var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n      var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n      segmentInfo.waitingOnAppends = 0; // segments with no data\n\n      if (!segmentInfo.hasAppendedData_) {\n        if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n          // When there's no audio or video data in the segment, there's no audio or video\n          // timing information.\n          //\n          // If there's no audio or video timing information, then the timestamp offset\n          // can't be adjusted to the appropriate value for the transmuxer and source\n          // buffers.\n          //\n          // Therefore, the next segment should be used to set the timestamp offset.\n          this.isPendingTimestampOffset_ = true;\n        } // override settings for metadata only segments\n\n\n        segmentInfo.timingInfo = {\n          start: 0\n        };\n        segmentInfo.waitingOnAppends++;\n\n        if (!this.isPendingTimestampOffset_) {\n          // update the timestampoffset\n          this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n          // no video/audio data.\n\n          this.processMetadataQueue_();\n        } // append is \"done\" instantly with no data.\n\n\n        this.checkAppendsDone_(segmentInfo);\n        return;\n      } // Since source updater could call back synchronously, do the increments first.\n\n\n      if (waitForVideo) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForAudio) {\n        segmentInfo.waitingOnAppends++;\n      }\n\n      if (waitForVideo) {\n        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n\n      if (waitForAudio) {\n        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n    };\n\n    _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n      if (this.checkForAbort_(segmentInfo.requestId)) {\n        return;\n      }\n\n      segmentInfo.waitingOnAppends--;\n\n      if (segmentInfo.waitingOnAppends === 0) {\n        this.handleAppendsDone_();\n      }\n    };\n\n    _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n      if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n      // priority, timing-wise, so we must wait\n      typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n      segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n      this.loaderType_ !== 'main') {\n        return;\n      }\n\n      var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n      // the timing info here comes from video. In the event that the audio is longer than\n      // the video, this will trim the start of the audio.\n      // This also trims any offset from 0 at the beginning of the media\n\n      segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n        videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n        audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n        timingInfo: segmentInfo.timingInfo\n      }); // In the event that there are part segment downloads, each will try to update the\n      // timestamp offset. Retaining this bit of state prevents us from updating in the\n      // future (within the same segment), however, there may be a better way to handle it.\n\n      segmentInfo.changedTimestampOffset = true;\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n\n      if (didChange) {\n        this.trigger('timestampoffset');\n      }\n    };\n\n    _proto.getSegmentStartTimeForTimestampOffsetCalculation_ = function getSegmentStartTimeForTimestampOffsetCalculation_(_ref10) {\n      var videoTimingInfo = _ref10.videoTimingInfo,\n          audioTimingInfo = _ref10.audioTimingInfo,\n          timingInfo = _ref10.timingInfo;\n\n      if (!this.useDtsForTimestampOffset_) {\n        return timingInfo.start;\n      }\n\n      if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n        return videoTimingInfo.transmuxedDecodeStart;\n      } // handle audio only\n\n\n      if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n        return audioTimingInfo.transmuxedDecodeStart;\n      } // handle content not transmuxed (e.g., MP4)\n\n\n      return timingInfo.start;\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      var trackInfo = this.getMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n      if (!prioritizedTimingInfo) {\n        return;\n      }\n\n      segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n      // current example is the case of fmp4), so use the rough duration to calculate an\n      // end time.\n      prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleAppendsDone_ = function handleAppendsDone_() {\n      // appendsdone can cause an abort\n      if (this.pendingSegment_) {\n        this.trigger('appendsdone');\n      }\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n        // all appending cases?\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n      // best to wait until all appends are done so we're sure that the primary media is\n      // finished (and we have its end time).\n\n      this.updateTimingInfoEnd_(segmentInfo);\n\n      if (this.shouldSaveSegmentTimingInfo_) {\n        // Timeline mappings should only be saved for the main loader. This is for multiple\n        // reasons:\n        //\n        // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n        //    and the main loader try to save the timeline mapping, whichever comes later\n        //    will overwrite the first. In theory this is OK, as the mappings should be the\n        //    same, however, it breaks for (2)\n        // 2) In the event of a live stream, the initial live point will make for a somewhat\n        //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n        //    the mapping will be off for one of the streams, dependent on which one was\n        //    first saved (see (1)).\n        // 3) Primary timing goes by video in VHS, so the mapping should be video.\n        //\n        // Since the audio loader will wait for the main loader to load the first segment,\n        // the main loader will save the first timeline mapping, and ensure that there won't\n        // be a case where audio loads two segments without saving a mapping (thus leading\n        // to missing segment timing info).\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo: segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n      }\n\n      var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n      if (segmentDurationMessage) {\n        if (segmentDurationMessage.severity === 'warn') {\n          videojs.log.warn(segmentDurationMessage.message);\n        } else {\n          this.logger_(segmentDurationMessage.message);\n        }\n      }\n\n      this.recordThroughput_(segmentInfo);\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate'); // if the sync request was not appended\n        // then it was not the correct segment.\n        // throw it away and use the data it gave us\n        // to get the correct one.\n\n        if (!segmentInfo.hasAppendedData_) {\n          this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n          return;\n        }\n      }\n\n      this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.fetchAtBuffer_ = true;\n\n      if (this.currentTimeline_ !== segmentInfo.timeline) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        }); // If audio is not disabled, the main segment loader is responsible for updating\n        // the audio timeline as well. If the content is video only, this won't have any\n        // impact.\n\n        if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n          this.timelineChangeController_.lastTimelineChange({\n            type: 'audio',\n            from: this.currentTimeline_,\n            to: segmentInfo.timeline\n          });\n        }\n      }\n\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate');\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n      var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (badSegmentGuess || badPartGuess) {\n        this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n        this.resetEverything();\n        return;\n      }\n\n      var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress');\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n        this.endOfStream();\n      } // used for testing\n\n\n      this.trigger('appended');\n\n      if (segmentInfo.hasAppendedData_) {\n        this.mediaAppends++;\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n    ;\n\n    _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n      if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n        return;\n      }\n\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n    ;\n\n    _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window.WebKitDataCue || window.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    };\n\n    return SegmentLoader;\n  }(videojs.EventTarget);\n\n  function noop() {}\n\n  var toTitleCase = function toTitleCase(string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n\n    return string.replace(/./, function (w) {\n      return w.toUpperCase();\n    });\n  };\n\n  var bufferTypes = ['video', 'audio'];\n\n  var _updating = function updating(type, sourceUpdater) {\n    var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n    return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n  };\n\n  var nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n    for (var i = 0; i < queue.length; i++) {\n      var queueEntry = queue[i];\n\n      if (queueEntry.type === 'mediaSource') {\n        // If the next entry is a media source entry (uses multiple source buffers), block\n        // processing to allow it to go through first.\n        return null;\n      }\n\n      if (queueEntry.type === type) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  var shiftQueue = function shiftQueue(type, sourceUpdater) {\n    if (sourceUpdater.queue.length === 0) {\n      return;\n    }\n\n    var queueIndex = 0;\n    var queueEntry = sourceUpdater.queue[queueIndex];\n\n    if (queueEntry.type === 'mediaSource') {\n      if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n        sourceUpdater.queue.shift();\n        queueEntry.action(sourceUpdater);\n\n        if (queueEntry.doneFn) {\n          queueEntry.doneFn();\n        } // Only specific source buffer actions must wait for async updateend events. Media\n        // Source actions process synchronously. Therefore, both audio and video source\n        // buffers are now clear to process the next queue entries.\n\n\n        shiftQueue('audio', sourceUpdater);\n        shiftQueue('video', sourceUpdater);\n      } // Media Source actions require both source buffers, so if the media source action\n      // couldn't process yet (because one or both source buffers are busy), block other\n      // queue actions until both are available and the media source action can process.\n\n\n      return;\n    }\n\n    if (type === 'mediaSource') {\n      // If the queue was shifted by a media source action (this happens when pushing a\n      // media source action onto the queue), then it wasn't from an updateend event from an\n      // audio or video source buffer, so there's no change from previous state, and no\n      // processing should be done.\n      return;\n    } // Media source queue entries don't need to consider whether the source updater is\n    // started (i.e., source buffers are created) as they don't need the source buffers, but\n    // source buffer queue entries do.\n\n\n    if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n      return;\n    }\n\n    if (queueEntry.type !== type) {\n      queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n      if (queueIndex === null) {\n        // Either there's no queue entry that uses this source buffer type in the queue, or\n        // there's a media source queue entry before the next entry of this type, in which\n        // case wait for that action to process first.\n        return;\n      }\n\n      queueEntry = sourceUpdater.queue[queueIndex];\n    }\n\n    sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n    //\n    // The queue pending operation must be set before the action is performed in the event\n    // that the action results in a synchronous event that is acted upon. For instance, if\n    // an exception is thrown that can be handled, it's possible that new actions will be\n    // appended to an empty queue and immediately executed, but would not have the correct\n    // pending information if this property was set after the action was performed.\n\n    sourceUpdater.queuePending[type] = queueEntry;\n    queueEntry.action(type, sourceUpdater);\n\n    if (!queueEntry.doneFn) {\n      // synchronous operation, process next entry\n      sourceUpdater.queuePending[type] = null;\n      shiftQueue(type, sourceUpdater);\n      return;\n    }\n  };\n\n  var cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n    var buffer = sourceUpdater[type + \"Buffer\"];\n    var titleType = toTitleCase(type);\n\n    if (!buffer) {\n      return;\n    }\n\n    buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n    buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n    sourceUpdater.codecs[type] = null;\n    sourceUpdater[type + \"Buffer\"] = null;\n  };\n\n  var inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n    return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n  };\n\n  var actions = {\n    appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.appendBuffer(bytes);\n        } catch (e) {\n          sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n          sourceUpdater.queuePending[type] = null;\n          onError(e);\n        }\n      };\n    },\n    remove: function remove(start, end) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.remove(start, end);\n        } catch (e) {\n          sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n        }\n      };\n    },\n    timestampOffset: function timestampOffset(offset) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n        sourceBuffer.timestampOffset = offset;\n      };\n    },\n    callback: function callback(_callback) {\n      return function (type, sourceUpdater) {\n        _callback();\n      };\n    },\n    endOfStream: function endOfStream(error) {\n      return function (sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n        try {\n          sourceUpdater.mediaSource.endOfStream(error);\n        } catch (e) {\n          videojs.log.warn('Failed to call media source endOfStream', e);\n        }\n      };\n    },\n    duration: function duration(_duration) {\n      return function (sourceUpdater) {\n        sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n        try {\n          sourceUpdater.mediaSource.duration = _duration;\n        } catch (e) {\n          videojs.log.warn('Failed to set media source duration', e);\n        }\n      };\n    },\n    abort: function abort() {\n      return function (type, sourceUpdater) {\n        if (sourceUpdater.mediaSource.readyState !== 'open') {\n          return;\n        }\n\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n        try {\n          sourceBuffer.abort();\n        } catch (e) {\n          videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    addSourceBuffer: function addSourceBuffer(type, codec) {\n      return function (sourceUpdater) {\n        var titleType = toTitleCase(type);\n        var mime = getMimeForCodec(codec);\n        sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n        var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n        sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n        sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n        sourceUpdater.codecs[type] = codec;\n        sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n      };\n    },\n    removeSourceBuffer: function removeSourceBuffer(type) {\n      return function (sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n        try {\n          sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n        } catch (e) {\n          videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n        }\n      };\n    },\n    changeType: function changeType(codec) {\n      return function (type, sourceUpdater) {\n        var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n        var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n        // or the media source does not contain this source buffer.\n\n        if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n          return;\n        } // do not update codec if we don't need to.\n\n\n        if (sourceUpdater.codecs[type] === codec) {\n          return;\n        }\n\n        sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n        sourceBuffer.changeType(mime);\n        sourceUpdater.codecs[type] = codec;\n      };\n    }\n  };\n\n  var pushQueue = function pushQueue(_ref) {\n    var type = _ref.type,\n        sourceUpdater = _ref.sourceUpdater,\n        action = _ref.action,\n        doneFn = _ref.doneFn,\n        name = _ref.name;\n    sourceUpdater.queue.push({\n      type: type,\n      action: action,\n      doneFn: doneFn,\n      name: name\n    });\n    shiftQueue(type, sourceUpdater);\n  };\n\n  var onUpdateend = function onUpdateend(type, sourceUpdater) {\n    return function (e) {\n      // Although there should, in theory, be a pending action for any updateend receieved,\n      // there are some actions that may trigger updateend events without set definitions in\n      // the w3c spec. For instance, setting the duration on the media source may trigger\n      // updateend events on source buffers. This does not appear to be in the spec. As such,\n      // if we encounter an updateend without a corresponding pending action from our queue\n      // for that source buffer type, process the next action.\n      if (sourceUpdater.queuePending[type]) {\n        var doneFn = sourceUpdater.queuePending[type].doneFn;\n        sourceUpdater.queuePending[type] = null;\n\n        if (doneFn) {\n          // if there's an error, report it\n          doneFn(sourceUpdater[type + \"Error_\"]);\n        }\n      }\n\n      shiftQueue(type, sourceUpdater);\n    };\n  };\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n   * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n   */\n\n\n  var SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n    function SourceUpdater(mediaSource) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.mediaSource = mediaSource;\n\n      _this.sourceopenListener_ = function () {\n        return shiftQueue('mediaSource', assertThisInitialized(_this));\n      };\n\n      _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n      _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n      _this.audioTimestampOffset_ = 0;\n      _this.videoTimestampOffset_ = 0;\n      _this.queue = [];\n      _this.queuePending = {\n        audio: null,\n        video: null\n      };\n      _this.delayedAudioAppendQueue_ = [];\n      _this.videoAppendQueued_ = false;\n      _this.codecs = {};\n      _this.onVideoUpdateEnd_ = onUpdateend('video', assertThisInitialized(_this));\n      _this.onAudioUpdateEnd_ = onUpdateend('audio', assertThisInitialized(_this));\n\n      _this.onVideoError_ = function (e) {\n        // used for debugging\n        _this.videoError_ = e;\n      };\n\n      _this.onAudioError_ = function (e) {\n        // used for debugging\n        _this.audioError_ = e;\n      };\n\n      _this.createdSourceBuffers_ = false;\n      _this.initializedEme_ = false;\n      _this.triggeredReady_ = false;\n      return _this;\n    }\n\n    var _proto = SourceUpdater.prototype;\n\n    _proto.initializedEme = function initializedEme() {\n      this.initializedEme_ = true;\n      this.triggerReady();\n    };\n\n    _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n      // if false, likely waiting on one of the segment loaders to get enough data to create\n      // source buffers\n      return this.createdSourceBuffers_;\n    };\n\n    _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n      return this.initializedEme_;\n    };\n\n    _proto.ready = function ready() {\n      return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n    };\n\n    _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n      if (this.hasCreatedSourceBuffers()) {\n        // already created them before\n        return;\n      } // the intial addOrChangeSourceBuffers will always be\n      // two add buffers.\n\n\n      this.addOrChangeSourceBuffers(codecs);\n      this.createdSourceBuffers_ = true;\n      this.trigger('createdsourcebuffers');\n      this.triggerReady();\n    };\n\n    _proto.triggerReady = function triggerReady() {\n      // only allow ready to be triggered once, this prevents the case\n      // where:\n      // 1. we trigger createdsourcebuffers\n      // 2. ie 11 synchronously initializates eme\n      // 3. the synchronous initialization causes us to trigger ready\n      // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n      if (this.ready() && !this.triggeredReady_) {\n        this.triggeredReady_ = true;\n        this.trigger('ready');\n      }\n    }\n    /**\n     * Add a type of source buffer to the media source.\n     *\n     * @param {string} type\n     *        The type of source buffer to add.\n     *\n     * @param {string} codec\n     *        The codec to add the source buffer with.\n     */\n    ;\n\n    _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.addSourceBuffer(type, codec),\n        name: 'addSourceBuffer'\n      });\n    }\n    /**\n     * call abort on a source buffer.\n     *\n     * @param {string} type\n     *        The type of source buffer to call abort on.\n     */\n    ;\n\n    _proto.abort = function abort(type) {\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.abort(type),\n        name: 'abort'\n      });\n    }\n    /**\n     * Call removeSourceBuffer and remove a specific type\n     * of source buffer on the mediaSource.\n     *\n     * @param {string} type\n     *        The type of source buffer to remove.\n     */\n    ;\n\n    _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n      if (!this.canRemoveSourceBuffer()) {\n        videojs.log.error('removeSourceBuffer is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.removeSourceBuffer(type),\n        name: 'removeSourceBuffer'\n      });\n    }\n    /**\n     * Whether or not the removeSourceBuffer function is supported\n     * on the mediaSource.\n     *\n     * @return {boolean}\n     *          if removeSourceBuffer can be called.\n     */\n    ;\n\n    _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n      // IE reports that it supports removeSourceBuffer, but often throws\n      // errors when attempting to use the function. So we report that it\n      // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n      // throws errors, so we report that it does not support this as well.\n      return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    SourceUpdater.canChangeType = function canChangeType() {\n      return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n    ;\n\n    _proto.canChangeType = function canChangeType() {\n      return this.constructor.canChangeType();\n    }\n    /**\n     * Call the changeType function on a source buffer, given the code and type.\n     *\n     * @param {string} type\n     *        The type of source buffer to call changeType on.\n     *\n     * @param {string} codec\n     *        The codec string to change type with on the source buffer.\n     */\n    ;\n\n    _proto.changeType = function changeType(type, codec) {\n      if (!this.canChangeType()) {\n        videojs.log.error('changeType is not supported!');\n        return;\n      }\n\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.changeType(codec),\n        name: 'changeType'\n      });\n    }\n    /**\n     * Add source buffers with a codec or, if they are already created,\n     * call changeType on source buffers using changeType.\n     *\n     * @param {Object} codecs\n     *        Codecs to switch to\n     */\n    ;\n\n    _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n      var _this2 = this;\n\n      if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n        throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n      }\n\n      Object.keys(codecs).forEach(function (type) {\n        var codec = codecs[type];\n\n        if (!_this2.hasCreatedSourceBuffers()) {\n          return _this2.addSourceBuffer(type, codec);\n        }\n\n        if (_this2.canChangeType()) {\n          _this2.changeType(type, codec);\n        }\n      });\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {MediaObject} object containing audioBytes and/or videoBytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n    ;\n\n    _proto.appendBuffer = function appendBuffer(options, doneFn) {\n      var _this3 = this;\n\n      var segmentInfo = options.segmentInfo,\n          type = options.type,\n          bytes = options.bytes;\n      this.processedAppend_ = true;\n\n      if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n        this.delayedAudioAppendQueue_.push([options, doneFn]);\n        this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n        return;\n      } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n      // not be fired. This means that the queue will be blocked until the next action\n      // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n      // these errors by calling the doneFn with the specific error.\n\n\n      var onError = doneFn;\n      pushQueue({\n        type: type,\n        sourceUpdater: this,\n        action: actions.appendBuffer(bytes, segmentInfo || {\n          mediaIndex: -1\n        }, onError),\n        doneFn: doneFn,\n        name: 'appendBuffer'\n      });\n\n      if (type === 'video') {\n        this.videoAppendQueued_ = true;\n\n        if (!this.delayedAudioAppendQueue_.length) {\n          return;\n        }\n\n        var queue = this.delayedAudioAppendQueue_.slice();\n        this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n        this.delayedAudioAppendQueue_.length = 0;\n        queue.forEach(function (que) {\n          _this3.appendBuffer.apply(_this3, que);\n        });\n      }\n    }\n    /**\n     * Get the audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The audio buffer's buffered time range\n     */\n    ;\n\n    _proto.audioBuffered = function audioBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get the video buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The video buffer's buffered time range\n     */\n    ;\n\n    _proto.videoBuffered = function videoBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n        return videojs.createTimeRange();\n      }\n\n      return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n    }\n    /**\n     * Get a combined video/audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         the combined time range\n     */\n    ;\n\n    _proto.buffered = function buffered() {\n      var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n      var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n      if (audio && !video) {\n        return this.audioBuffered();\n      }\n\n      if (video && !audio) {\n        return this.videoBuffered();\n      }\n\n      return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n    }\n    /**\n     * Add a callback to the queue that will set duration on the mediaSource.\n     *\n     * @param {number} duration\n     *        The duration to set\n     *\n     * @param {Function} [doneFn]\n     *        function to run after duration has been set.\n     */\n    ;\n\n    _proto.setDuration = function setDuration(duration, doneFn) {\n      if (doneFn === void 0) {\n        doneFn = noop;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.duration(duration),\n        name: 'duration',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Add a mediaSource endOfStream call to the queue\n     *\n     * @param {Error} [error]\n     *        Call endOfStream with an error\n     *\n     * @param {Function} [doneFn]\n     *        A function that should be called when the\n     *        endOfStream call has finished.\n     */\n    ;\n\n    _proto.endOfStream = function endOfStream(error, doneFn) {\n      if (error === void 0) {\n        error = null;\n      }\n\n      if (doneFn === void 0) {\n        doneFn = noop;\n      }\n\n      if (typeof error !== 'string') {\n        error = undefined;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.endOfStream(error),\n        name: 'endOfStream',\n        doneFn: doneFn\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeAudio = function removeAudio(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n    ;\n\n    _proto.removeVideo = function removeVideo(start, end, done) {\n      if (done === void 0) {\n        done = noop;\n      }\n\n      if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {boolean} the updating status of the SourceBuffer\n     */\n    ;\n\n    _proto.updating = function updating() {\n      // the audio/video source buffer is updating\n      if (_updating('audio', this) || _updating('video', this)) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Set/get the timestampoffset on the audio SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n      this.audioTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'audio',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.audioTimestampOffset_ = offset;\n      }\n\n      return this.audioTimestampOffset_;\n    }\n    /**\n     * Set/get the timestampoffset on the video SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n    ;\n\n    _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n      this.videoTimestampOffset !== offset) {\n        pushQueue({\n          type: 'video',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.videoTimestampOffset_ = offset;\n      }\n\n      return this.videoTimestampOffset_;\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the audio queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.audioQueueCallback = function audioQueueCallback(callback) {\n      if (!this.audioBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the video queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n    ;\n\n    _proto.videoQueueCallback = function videoQueueCallback(callback) {\n      if (!this.videoBuffer) {\n        return;\n      }\n\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this4 = this;\n\n      this.trigger('dispose');\n      bufferTypes.forEach(function (type) {\n        _this4.abort(type);\n\n        if (_this4.canRemoveSourceBuffer()) {\n          _this4.removeSourceBuffer(type);\n        } else {\n          _this4[type + \"QueueCallback\"](function () {\n            return cleanupBuffer(type, _this4);\n          });\n        }\n      });\n      this.videoAppendQueued_ = false;\n      this.delayedAudioAppendQueue_.length = 0;\n\n      if (this.sourceopenListener_) {\n        this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n      }\n\n      this.off();\n    };\n\n    return SourceUpdater;\n  }(videojs.EventTarget);\n\n  var uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n    return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n  };\n\n  var VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n    return _char3.charCodeAt(0);\n  }));\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  var VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n    inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n    function VTTSegmentLoader(settings, options) {\n      var _this;\n\n      if (options === void 0) {\n        options = {};\n      }\n\n      _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      _this.mediaSource_ = null;\n      _this.subtitlesTrack_ = null;\n      _this.loaderType_ = 'subtitle';\n      _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n      // the sync controller leads to improper behavior.\n\n      _this.shouldSaveSegmentTimingInfo_ = false;\n      return _this;\n    }\n\n    var _proto = VTTSegmentLoader.prototype;\n\n    _proto.createTransmuxer_ = function createTransmuxer_() {\n      // don't need to transmux any subtitles\n      return null;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n    ;\n\n    _proto.buffered_ = function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n        return videojs.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n    ;\n\n    _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n      if (set === void 0) {\n        set = false;\n      }\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n    ;\n\n    _proto.couldBeginLoading_ = function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n    ;\n\n    _proto.init_ = function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n    ;\n\n    _proto.track = function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     */\n    ;\n\n    _proto.remove = function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n    ;\n\n    _proto.fillBuffer_ = function fillBuffer_() {\n      var _this2 = this; // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.chooseNextRequest_();\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    } // never set a timestamp offset for vtt segments.\n    ;\n\n    _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n      return null;\n    };\n\n    _proto.chooseNextRequest_ = function chooseNextRequest_() {\n      return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n    ;\n\n    _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        // stop at the last possible segmentInfo\n        if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n          segmentInfo = null;\n          break;\n        }\n\n        segmentInfo = this.generateSegmentInfo_({\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex + 1,\n          startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n          isSyncRequest: segmentInfo.isSyncRequest\n        });\n      }\n\n      return segmentInfo;\n    };\n\n    _proto.stopForError = function stopForError(error) {\n      this.error(error);\n      this.state = 'READY';\n      this.pause();\n      this.trigger('error');\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n    ;\n\n    _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n      var _this3 = this;\n\n      if (!this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n\n      if (error) {\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n        }\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n        } else {\n          this.mediaRequestsErrored += 1;\n        }\n\n        this.stopForError(error);\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functionality between segment loaders\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.state = 'APPENDING'; // used for tests\n\n      this.trigger('appending');\n      var segment = segmentInfo.segment;\n\n      if (segment.map) {\n        segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.stopForError({\n            message: 'Error loading vtt.js'\n          });\n\n          return;\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.segmentRequestFinished_(error, simpleSegment, result);\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.stopForError({\n          message: e.message\n        });\n        return;\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.cues.length) {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.cues[0].startTime,\n          end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n        };\n      } else {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.startOfSegment,\n          end: segmentInfo.startOfSegment + segmentInfo.duration\n        };\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n      // the subtitle track\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n      // cues to have identical time-intervals, but if the text is also identical\n      // we can safely assume it is a duplicate that can be removed (ex. when a cue\n      // \"overlaps\" VTT segments)\n\n      removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n      this.handleAppendsDone_();\n    };\n\n    _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n      // that we do not support here.\n    };\n\n    _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n    ;\n\n    _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n      var decoder;\n      var decodeBytesToString = false;\n\n      if (typeof window.TextDecoder === 'function') {\n        decoder = new window.TextDecoder('utf8');\n      } else {\n        decoder = window.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n    ;\n\n    _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / clock_1 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    };\n\n    return VTTSegmentLoader;\n  }(SegmentLoader);\n  /**\n   * @file ad-cue-tags.js\n   */\n\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   *\n   * @param {Object} track\n   *        the track to find the cue for\n   *\n   * @param {number} mediaTime\n   *        the time to find the cue at\n   *\n   * @return {Object|null}\n   *         the found cue or null\n   */\n\n\n  var findAdCue = function findAdCue(track, mediaTime) {\n    var cues = track.cues;\n\n    for (var i = 0; i < cues.length; i++) {\n      var cue = cues[i];\n\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n\n    return null;\n  };\n\n  var updateAdCues = function updateAdCues(media, track, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    if (!media.segments) {\n      return;\n    }\n\n    var mediaTime = offset;\n    var cue;\n\n    for (var i = 0; i < media.segments.length; i++) {\n      var segment = media.segments[i];\n\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n          var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n              adOffset = _segment$cueOutCont$s[0],\n              adTotal = _segment$cueOutCont$s[1];\n\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n\n      mediaTime += segment.duration;\n    }\n  }; // synchronize expired playlist segments.\n  // the max media sequence diff is 48 hours of live stream\n  // content with two second segments. Anything larger than that\n  // will likely be invalid.\n\n\n  var MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\n  var syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (duration !== Infinity) {\n        var syncPoint = {\n          time: 0,\n          segmentIndex: 0,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n        return null;\n      }\n\n      var syncPoint = null;\n      var lastDistance = null;\n      var partsAndSegments = getPartsAndSegments(playlist);\n      currentTime = currentTime || 0;\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n        if (!datetimeMapping || !segment.dateTimeObject) {\n          continue;\n        }\n\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (var z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      var lastDistance = null;\n      currentTime = currentTime || 0;\n      var partsAndSegments = getPartsAndSegments(playlist);\n\n      for (var i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        var partAndSegment = partsAndSegments[index];\n        var segment = partAndSegment.segment;\n        var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n        if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n          var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: start,\n              segmentIndex: partAndSegment.segmentIndex,\n              partIndex: partAndSegment.partIndex\n            };\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      var syncPoint = null;\n      currentTime = currentTime || 0;\n\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        var lastDistance = null;\n\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var discontinuitySync = syncController.discontinuities[discontinuity];\n\n          if (discontinuitySync) {\n            var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex: segmentIndex,\n                partIndex: null\n              };\n            }\n          }\n        }\n      }\n\n      return syncPoint;\n    }\n  }, // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n      if (playlist.syncInfo) {\n        var syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n\n      return null;\n    }\n  }];\n\n  var SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(SyncController, _videojs$EventTarget);\n\n    function SyncController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n      _this.timelines = [];\n      _this.discontinuities = [];\n      _this.timelineToDatetimeMappings = {};\n      _this.logger_ = logger('SyncController');\n      return _this;\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Object}\n     *          A sync-point object\n     */\n\n\n    var _proto = SyncController.prototype;\n\n    _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @return {number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n    ;\n\n    _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: playlist.segments,\n        startIndex: syncPoint.segmentIndex,\n        endIndex: 0\n      }));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Array}\n     *          A list of sync-point objects\n     */\n    ;\n\n    _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {string} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {number} target.value\n     *        The value to target for the specified key.\n     * @return {Object}\n     *          The sync-point nearest the target\n     */\n    ;\n\n    _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n    ;\n\n    _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n      if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n        videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n        return;\n      } // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n     * before segments start to load.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n    ;\n\n    _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n      // It's possible for the playlist to be updated before playback starts, meaning time\n      // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n      // crossed, then the old time zero mapping (for the prior timeline) would be retained\n      // unless the mappings are cleared.\n      this.timelineToDatetimeMappings = {};\n\n      if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var firstSegment = playlist.segments[0];\n        var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n        this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n      }\n    }\n    /**\n     * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n     * based on the latest timing information.\n     *\n     * @param {Object} options\n     *        Options object\n     * @param {SegmentInfo} options.segmentInfo\n     *        The current active request information\n     * @param {boolean} options.shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved for timeline mapping and program date time mappings.\n     */\n    ;\n\n    _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n      var segmentInfo = _ref.segmentInfo,\n          shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n      var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n      var segment = segmentInfo.segment;\n\n      if (didCalculateSegmentTimeMapping) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!segmentInfo.playlist.syncInfo) {\n          segmentInfo.playlist.syncInfo = {\n            mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n\n      var dateTime = segment.dateTimeObject;\n\n      if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n        this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n      }\n    };\n\n    _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    };\n\n    _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {Object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @param {boolean} shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved in timelines.\n     * @return {boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n    ;\n\n    _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n      // TODO: remove side effects\n      var segment = segmentInfo.segment;\n      var part = segmentInfo.part;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n      var start;\n      var end;\n\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n\n        if (shouldSaveTimelineMapping) {\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n        }\n\n        start = segmentInfo.startOfSegment;\n        end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        start = timingInfo.start + mappingObj.mapping;\n        end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      if (part) {\n        part.start = start;\n        part.end = end;\n      } // If we don't have a segment start yet or the start value we got\n      // is less than our current segment.start value, save a new start value.\n      // We have to do this because parts will have segment timing info saved\n      // multiple times and we want segment start to be the earliest part start\n      // value for that segment.\n\n\n      if (!segment.start || start < segment.start) {\n        segment.start = start;\n      }\n\n      segment.end = end;\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n    ;\n\n    _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex,\n                endIndex: segmentIndex\n              });\n            } else {\n              time = segment.end + sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex + 1,\n                endIndex: segmentIndex\n              });\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.off();\n    };\n\n    return SyncController;\n  }(videojs.EventTarget);\n  /**\n   * The TimelineChangeController acts as a source for segment loaders to listen for and\n   * keep track of latest and pending timeline changes. This is useful to ensure proper\n   * sync, as each loader may need to make a consideration for what timeline the other\n   * loader is on before making changes which could impact the other loader's media.\n   *\n   * @class TimelineChangeController\n   * @extends videojs.EventTarget\n   */\n\n\n  var TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n    function TimelineChangeController() {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      _this.pendingTimelineChanges_ = {};\n      _this.lastTimelineChanges_ = {};\n      return _this;\n    }\n\n    var _proto = TimelineChangeController.prototype;\n\n    _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n      this.pendingTimelineChanges_[type] = null;\n      this.trigger('pendingtimelinechange');\n    };\n\n    _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n      var type = _ref.type,\n          from = _ref.from,\n          to = _ref.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.pendingTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        this.trigger('pendingtimelinechange');\n      }\n\n      return this.pendingTimelineChanges_[type];\n    };\n\n    _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n      var type = _ref2.type,\n          from = _ref2.from,\n          to = _ref2.to;\n\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.lastTimelineChanges_[type] = {\n          type: type,\n          from: from,\n          to: to\n        };\n        delete this.pendingTimelineChanges_[type];\n        this.trigger('timelinechange');\n      }\n\n      return this.lastTimelineChanges_[type];\n    };\n\n    _proto.dispose = function dispose() {\n      this.trigger('dispose');\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n      this.off();\n    };\n\n    return TimelineChangeController;\n  }(videojs.EventTarget);\n  /* rollup-plugin-worker-factory start for worker!/Users/abarstow/videojs/http-streaming/src/decrypter-worker.js */\n\n\n  var workerCode = transform(getWorkerString(function () {\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    function createCommonjsModule(fn, basedir, module) {\n      return module = {\n        path: basedir,\n        exports: {},\n        require: function require(path, base) {\n          return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n        }\n      }, fn(module, module.exports), module.exports;\n    }\n\n    function commonjsRequire() {\n      throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n    }\n\n    var createClass = createCommonjsModule(function (module) {\n      function _defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        return Constructor;\n      }\n\n      module.exports = _createClass;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var setPrototypeOf = createCommonjsModule(function (module) {\n      function _setPrototypeOf(o, p) {\n        module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n          o.__proto__ = p;\n          return o;\n        };\n\n        module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n        return _setPrototypeOf(o, p);\n      }\n\n      module.exports = _setPrototypeOf;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    var inheritsLoose = createCommonjsModule(function (module) {\n      function _inheritsLoose(subClass, superClass) {\n        subClass.prototype = Object.create(superClass.prototype);\n        subClass.prototype.constructor = subClass;\n        setPrototypeOf(subClass, superClass);\n      }\n\n      module.exports = _inheritsLoose;\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n    });\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n    var Stream = /*#__PURE__*/function () {\n      function Stream() {\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      var _proto = Stream.prototype;\n\n      _proto.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      }\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {boolean} if we could turn it off or not\n       */\n      ;\n\n      _proto.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n        // In Video.js we slice listener functions\n        // on trigger so that it does not mess up the order\n        // while we loop through.\n        //\n        // Here we slice on off so that the loop in trigger\n        // can continue using it's old reference to loop without\n        // messing up the order.\n\n        this.listeners[type] = this.listeners[type].slice(0);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      }\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {string} type the event name\n       */\n      ;\n\n      _proto.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      }\n      /**\n       * Destroys the stream and cleans up.\n       */\n      ;\n\n      _proto.dispose = function dispose() {\n        this.listeners = {};\n      }\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n      ;\n\n      _proto.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     *\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n    /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i;\n      var x;\n      var xInv;\n      var d = [];\n      var th = [];\n      var x2;\n      var x4;\n      var x8;\n      var s;\n      var tEnc;\n      var tDec; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = /*#__PURE__*/function () {\n      function AES(key) {\n        /**\n        * The expanded S-box and inverse S-box tables. These will be computed\n        * on the client so that we don't have to send them down the wire.\n        *\n        * There are two tables, _tables[0] is for encryption and\n        * _tables[1] is for decryption.\n        *\n        * The first 4 sub-tables are the expanded S-box with MixColumns. The\n        * last (_tables[01][4]) is the S-box itself.\n        *\n        * @private\n        */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i;\n        var j;\n        var tmp;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        var encKey = key.slice(0);\n        var decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {number} encrypted0 the first word to decrypt\n       * @param {number} encrypted1 the second word to decrypt\n       * @param {number} encrypted2 the third word to decrypt\n       * @param {number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      var _proto = AES.prototype;\n\n      _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2;\n        var b2;\n        var c2; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * A wrapper around the Stream class to use setTimeout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream = /*#__PURE__*/function (_Stream) {\n      inheritsLoose(AsyncStream, _Stream);\n\n      function AsyncStream() {\n        var _this;\n\n        _this = _Stream.call(this, Stream) || this;\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      var _proto = AsyncStream.prototype;\n\n      _proto.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      }\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n      ;\n\n      _proto.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream;\n    }(Stream);\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt = function decrypt(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0;\n      var init1;\n      var init2;\n      var init3;\n      var encrypted0;\n      var encrypted1;\n      var encrypted2;\n      var encrypted3; // iteration variable\n\n      var wordIx; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter = /*#__PURE__*/function () {\n      function Decrypter(encrypted, key, initVector, done) {\n        var step = Decrypter.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {number} the value of step 32000\n       */\n\n\n      var _proto = Decrypter.prototype;\n      /**\n       * @private\n       */\n\n      _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter, null, [{\n        key: \"STEP\",\n        get: function get() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter;\n    }();\n\n    var win;\n\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n\n    var window_1 = win;\n\n    var isArrayBufferView = function isArrayBufferView(obj) {\n      if (ArrayBuffer.isView === 'function') {\n        return ArrayBuffer.isView(obj);\n      }\n\n      return obj && obj.buffer instanceof ArrayBuffer;\n    };\n\n    var BigInt = window_1.BigInt || Number;\n    [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (isArrayBufferView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /* global self */\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     */\n\n\n    self.onmessage = function (event) {\n      var data = event.data;\n      var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n      var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n      var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n      /* eslint-disable no-new, handle-callback-err */\n\n      new Decrypter(encrypted, key, iv, function (err, bytes) {\n        self.postMessage(createTransferableMessage({\n          source: data.source,\n          decrypted: bytes\n        }), [bytes.buffer]);\n      });\n      /* eslint-enable */\n    };\n  }));\n  var Decrypter = factory(workerCode);\n  /* rollup-plugin-worker-factory end for worker!/Users/abarstow/videojs/http-streaming/src/decrypter-worker.js */\n\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  var audioTrackKind_ = function audioTrackKind_(properties) {\n    var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n\n  var stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n    segmentLoader.abort();\n    segmentLoader.pause();\n\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n\n  var startLoaders = function startLoaders(playlistLoader, mediaType) {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n\n  var onGroupChanged = function onGroupChanged(type, settings) {\n    return function () {\n      var _settings$segmentLoad = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad[type],\n          mainSegmentLoader = _settings$segmentLoad.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n      if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup || activeGroup.isMasterPlaylist) {\n        // there is no group active or active group is a main playlist and won't change\n        return;\n      }\n\n      if (!activeGroup.playlistLoader) {\n        if (previousActiveLoader) {\n          // The previous group had a playlist loader but the new active group does not\n          // this means we are switching from demuxed to muxed audio. In this case we want to\n          // do a destructive reset of the main segment loader and not restart the audio\n          // loaders.\n          mainSegmentLoader.resetEverything();\n        }\n\n        return;\n      } // Non-destructive resync\n\n\n      segmentLoader.resyncLoader();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onGroupChanging = function onGroupChanging(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      mediaType.lastGroup_ = null;\n      segmentLoader.abort();\n      segmentLoader.pause();\n    };\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n\n  var onTrackChanged = function onTrackChanged(type, settings) {\n    return function () {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          _settings$segmentLoad2 = settings.segmentLoaders,\n          segmentLoader = _settings$segmentLoad2[type],\n          mainSegmentLoader = _settings$segmentLoad2.main,\n          mediaType = settings.mediaTypes[type];\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.getActiveGroup();\n      var previousActiveLoader = mediaType.activePlaylistLoader;\n      var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n      if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n        return;\n      }\n\n      mediaType.lastGroup_ = activeGroup;\n      mediaType.lastTrack_ = activeTrack;\n      stopLoaders(segmentLoader, mediaType);\n\n      if (!activeGroup) {\n        // there is no group active so we do not want to restart loaders\n        return;\n      }\n\n      if (activeGroup.isMasterPlaylist) {\n        // track did not change, do nothing\n        if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n          return;\n        }\n\n        var mpc = settings.vhs.masterPlaylistController_;\n        var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n        if (mpc.media() === newPlaylist) {\n          return;\n        }\n\n        mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n        masterPlaylistLoader.pause();\n        mainSegmentLoader.resetEverything();\n        mpc.fastQualityChange_(newPlaylist);\n        return;\n      }\n\n      if (type === 'AUDIO') {\n        if (!activeGroup.playlistLoader) {\n          // when switching from demuxed audio/video to muxed audio/video (noted by no\n          // playlist loader for the audio group), we want to do a destructive reset of the\n          // main segment loader and not restart the audio loaders\n          mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n          // it should be stopped\n\n          mainSegmentLoader.resetEverything();\n          return;\n        } // although the segment loader is an audio segment loader, call the setAudio\n        // function to ensure it is prepared to re-append the init segment (or handle other\n        // config changes)\n\n\n        segmentLoader.setAudio(true);\n        mainSegmentLoader.setAudio(false);\n      }\n\n      if (previousActiveLoader === activeGroup.playlistLoader) {\n        // Nothing has actually changed. This can happen because track change events can fire\n        // multiple times for a \"single\" change. One for enabling the new active track, and\n        // one for disabling the track that was active\n        startLoaders(activeGroup.playlistLoader, mediaType);\n        return;\n      }\n\n      if (segmentLoader.track) {\n        // For WebVTT, set the new text track in the segmentloader\n        segmentLoader.track(activeTrack);\n      } // destructive reset\n\n\n      segmentLoader.resetEverything();\n      startLoaders(activeGroup.playlistLoader, mediaType);\n    };\n  };\n\n  var onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type],\n            blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n        stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n        var activeTrack = mediaType.activeTrack();\n        var activeGroup = mediaType.activeGroup();\n        var id = (activeGroup.filter(function (group) {\n          return group[\"default\"];\n        })[0] || activeGroup[0]).id;\n        var defaultTrack = mediaType.tracks[id];\n\n        if (activeTrack === defaultTrack) {\n          // Default track encountered an error. All we can do now is blacklist the current\n          // rendition and hope another will switch audio groups\n          blacklistCurrentPlaylist({\n            message: 'Problem encountered loading the default audio track.'\n          });\n          return;\n        }\n\n        videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n        for (var trackId in mediaType.tracks) {\n          mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n        }\n\n        mediaType.onTrackChanged();\n      };\n    },\n\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var segmentLoader = settings.segmentLoaders[type],\n            mediaType = settings.mediaTypes[type];\n        videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n        stopLoaders(segmentLoader, mediaType);\n        var track = mediaType.activeTrack();\n\n        if (track) {\n          track.mode = 'disabled';\n        }\n\n        mediaType.onTrackChanged();\n      };\n    }\n  };\n  var setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: function AUDIO(type, playlistLoader, settings) {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n      var tech = settings.tech,\n          requestOptions = settings.requestOptions,\n          segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      playlistLoader.on('loadedmetadata', function () {\n        var media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', function () {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n  var initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': function AUDIO(type, settings) {\n      var vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$ = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$.groups,\n          tracks = _settings$mediaTypes$.tracks,\n          logger_ = _settings$mediaTypes$.logger_,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n      var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            \"default\": {\n              \"default\": true\n            }\n          }\n        };\n\n        if (audioOnlyMaster) {\n          mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n        }\n      }\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (audioOnlyMaster) {\n            logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n            properties.isMasterPlaylist = true;\n            playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n            // use the resolved media playlist object\n          } else if (sourceType === 'vhs-json' && properties.playlists) {\n            playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n          } else if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n            // should we even have properties.playlists in this check.\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = new videojs.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              \"default\": properties[\"default\"],\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': function SUBTITLES(type, settings) {\n      var tech = settings.tech,\n          vhs = settings.vhs,\n          sourceType = settings.sourceType,\n          segmentLoader = settings.segmentLoaders[type],\n          requestOptions = settings.requestOptions,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$2 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$2.groups,\n          tracks = _settings$mediaTypes$2.tracks,\n          masterPlaylistLoader = settings.masterPlaylistLoader;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          if (mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n\n          var properties = mediaGroups[type][groupId][variantLabel];\n          var playlistLoader = void 0;\n\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n          } else if (sourceType === 'dash') {\n            var playlists = properties.playlists.filter(function (p) {\n              return p.excludeUntil !== Infinity;\n            });\n\n            if (!playlists.length) {\n              return;\n            }\n\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n          } else if (sourceType === 'vhs-json') {\n            playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n            // as provided, otherwise use the resolved URI to load the playlist\n            properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n          }\n\n          properties = videojs.mergeOptions({\n            id: variantLabel,\n            playlistLoader: playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              \"default\": properties[\"default\"] && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n      var tech = settings.tech,\n          mediaGroups = settings.master.mediaGroups,\n          _settings$mediaTypes$3 = settings.mediaTypes[type],\n          groups = _settings$mediaTypes$3.groups,\n          tracks = _settings$mediaTypes$3.tracks;\n\n      for (var groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n\n        for (var variantLabel in mediaGroups[type][groupId]) {\n          var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n          if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n            continue;\n          }\n\n          var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n          var newProps = {\n            label: variantLabel,\n            language: properties.language,\n            instreamId: properties.instreamId,\n            \"default\": properties[\"default\"] && properties.autoselect\n          };\n\n          if (captionServices[newProps.instreamId]) {\n            newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n          }\n\n          if (newProps[\"default\"] === undefined) {\n            delete newProps[\"default\"];\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n\n          groups[groupId].push(videojs.mergeOptions({\n            id: variantLabel\n          }, properties));\n\n          if (typeof tracks[variantLabel] === 'undefined') {\n            var track = tech.addRemoteTextTrack({\n              id: newProps.instreamId,\n              kind: 'captions',\n              \"default\": newProps[\"default\"],\n              language: newProps.language,\n              label: newProps.label\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n\n  var groupMatch = function groupMatch(list, media) {\n    for (var i = 0; i < list.length; i++) {\n      if (playlistMatch(media, list[i])) {\n        return true;\n      }\n\n      if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n\n  var activeGroup = function activeGroup(type, settings) {\n    return function (track) {\n      var masterPlaylistLoader = settings.masterPlaylistLoader,\n          groups = settings.mediaTypes[type].groups;\n      var media = masterPlaylistLoader.media();\n\n      if (!media) {\n        return null;\n      }\n\n      var variants = null; // set to variants to main media active group\n\n      if (media.attributes[type]) {\n        variants = groups[media.attributes[type]];\n      }\n\n      var groupKeys = Object.keys(groups);\n\n      if (!variants) {\n        // find the masterPlaylistLoader media\n        // that is in a media group if we are dealing\n        // with audio only\n        if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n          for (var i = 0; i < groupKeys.length; i++) {\n            var groupPropertyList = groups[groupKeys[i]];\n\n            if (groupMatch(groupPropertyList, media)) {\n              variants = groupPropertyList;\n              break;\n            }\n          } // use the main group if it exists\n\n        } else if (groups.main) {\n          variants = groups.main; // only one group, use that one\n        } else if (groupKeys.length === 1) {\n          variants = groups[groupKeys[0]];\n        }\n      }\n\n      if (typeof track === 'undefined') {\n        return variants;\n      }\n\n      if (track === null || !variants) {\n        // An active track was specified so a corresponding group is expected. track === null\n        // means no track is currently active so there is no corresponding group\n        return null;\n      }\n\n      return variants.filter(function (props) {\n        return props.id === track.id;\n      })[0] || null;\n    };\n  };\n\n  var activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: function AUDIO(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].enabled) {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    },\n\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: function SUBTITLES(type, settings) {\n      return function () {\n        var tracks = settings.mediaTypes[type].tracks;\n\n        for (var id in tracks) {\n          if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n            return tracks[id];\n          }\n        }\n\n        return null;\n      };\n    }\n  };\n\n  var getActiveGroup = function getActiveGroup(type, _ref) {\n    var mediaTypes = _ref.mediaTypes;\n    return function () {\n      var activeTrack_ = mediaTypes[type].activeTrack();\n\n      if (!activeTrack_) {\n        return null;\n      }\n\n      return mediaTypes[type].activeGroup(activeTrack_);\n    };\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the master manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.masterPlaylistLoader\n   *        PlaylistLoader for the master source\n   * @param {VhsHandler} settings.vhs\n   *        VHS SourceHandler\n   * @param {Object} settings.master\n   *        The parsed master manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.blacklistCurrentPlaylist\n   *        Blacklists the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n\n  var setupMediaGroups = function setupMediaGroups(settings) {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      initialize[type](type, settings);\n    });\n    var mediaTypes = settings.mediaTypes,\n        masterPlaylistLoader = settings.masterPlaylistLoader,\n        tech = settings.tech,\n        vhs = settings.vhs,\n        _settings$segmentLoad3 = settings.segmentLoaders,\n        audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n        mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n      mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n    if (audioGroup) {\n      var groupId = (audioGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || audioGroup[0]).id;\n      mediaTypes.AUDIO.tracks[groupId].enabled = true;\n      mediaTypes.AUDIO.onGroupChanged();\n      mediaTypes.AUDIO.onTrackChanged();\n      var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n      // track is changed, but needs to be handled here since the track may not be considered\n      // changed on the first call to onTrackChanged\n\n      if (!activeAudioGroup.playlistLoader) {\n        // either audio is muxed with video or the stream is audio only\n        mainSegmentLoader.setAudio(true);\n      } else {\n        // audio is demuxed\n        mainSegmentLoader.setAudio(false);\n        audioSegmentLoader.setAudio(true);\n      }\n    }\n\n    masterPlaylistLoader.on('mediachange', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanged();\n      });\n    });\n    masterPlaylistLoader.on('mediachanging', function () {\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        return mediaTypes[type].onGroupChanging();\n      });\n    }); // custom audio track change event handler for usage event\n\n    var onAudioTrackChanged = function onAudioTrackChanged() {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-audio-change'\n      });\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-audio-change'\n      });\n    };\n\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    vhs.on('dispose', function () {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n\n    for (var id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n\n  var createMediaTypes = function createMediaTypes() {\n    var mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop,\n        activeTrack: noop,\n        getActiveGroup: noop,\n        onGroupChanged: noop,\n        onTrackChanged: noop,\n        lastTrack_: null,\n        logger_: logger(\"MediaGroups[\" + type + \"]\")\n      };\n    });\n    return mediaTypes;\n  };\n\n  var ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\n  var Vhs$1; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  var loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\n  var sumLoaderStat = function sumLoaderStat(stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n\n  var shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n    var currentPlaylist = _ref.currentPlaylist,\n        buffered = _ref.buffered,\n        currentTime = _ref.currentTime,\n        nextPlaylist = _ref.nextPlaylist,\n        bufferLowWaterLine = _ref.bufferLowWaterLine,\n        bufferHighWaterLine = _ref.bufferHighWaterLine,\n        duration = _ref.duration,\n        experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n        log = _ref.log; // we have no other playlist to switch to\n\n    if (!nextPlaylist) {\n      videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n      return false;\n    }\n\n    var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n    if (!currentPlaylist) {\n      log(sharedLogLine + \" as current playlist is not set\");\n      return true;\n    } // no need to switch if playlist is the same\n\n\n    if (nextPlaylist.id === currentPlaylist.id) {\n      return false;\n    } // determine if current time is in a buffered range.\n\n\n    var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n    // This is because in LIVE, the player plays 3 segments from the end of the\n    // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n    // in those segments, a viewer will never experience a rendition upswitch.\n\n    if (!currentPlaylist.endList) {\n      // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n      // doubles the time to first playback.\n      if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n        log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n        return false;\n      }\n\n      log(sharedLogLine + \" as current playlist is live\");\n      return true;\n    }\n\n    var forwardBuffer = timeAheadOf(buffered, currentTime);\n    var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n    // duration is below the max potential low water line\n\n    if (duration < maxBufferLowWaterLine) {\n      log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n      return true;\n    }\n\n    var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n    var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n    // we can switch down\n\n    if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n      var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n      if (experimentalBufferBasedABR) {\n        logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n      }\n\n      log(logLine);\n      return true;\n    } // and if our buffer is higher than the low water line,\n    // we can switch up\n\n\n    if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n      var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n      if (experimentalBufferBasedABR) {\n        _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n      }\n\n      log(_logLine);\n      return true;\n    }\n\n    log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n    return false;\n  };\n  /**\n   * the master playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a master playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class MasterPlaylistController\n   * @extends videojs.EventTarget\n   */\n\n\n  var MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n    inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n    function MasterPlaylistController(options) {\n      var _this;\n\n      _this = _videojs$EventTarget.call(this) || this;\n      var src = options.src,\n          handleManifestRedirects = options.handleManifestRedirects,\n          withCredentials = options.withCredentials,\n          tech = options.tech,\n          bandwidth = options.bandwidth,\n          externVhs = options.externVhs,\n          useCueTags = options.useCueTags,\n          blacklistDuration = options.blacklistDuration,\n          enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n          sourceType = options.sourceType,\n          cacheEncryptionKeys = options.cacheEncryptionKeys,\n          experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n          experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n          captionServices = options.captionServices;\n\n      if (!src) {\n        throw new Error('A non-empty playlist URL or JSON manifest string is required');\n      }\n\n      var maxPlaylistRetries = options.maxPlaylistRetries;\n\n      if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n        maxPlaylistRetries = Infinity;\n      }\n\n      Vhs$1 = externVhs;\n      _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n      _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n      _this.withCredentials = withCredentials;\n      _this.tech_ = tech;\n      _this.vhs_ = tech.vhs;\n      _this.sourceType_ = sourceType;\n      _this.useCueTags_ = useCueTags;\n      _this.blacklistDuration = blacklistDuration;\n      _this.maxPlaylistRetries = maxPlaylistRetries;\n      _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n      if (_this.useCueTags_) {\n        _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n        _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n\n      _this.requestOptions_ = {\n        withCredentials: withCredentials,\n        handleManifestRedirects: handleManifestRedirects,\n        maxPlaylistRetries: maxPlaylistRetries,\n        timeout: null\n      };\n\n      _this.on('error', _this.pauseLoading);\n\n      _this.mediaTypes_ = createMediaTypes();\n      _this.mediaSource = new window.MediaSource();\n      _this.handleDurationChange_ = _this.handleDurationChange_.bind(assertThisInitialized(_this));\n      _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(assertThisInitialized(_this));\n      _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(assertThisInitialized(_this));\n\n      _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n      _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n      _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n      // everything, and the MediaSource should not be detached without a proper disposal\n\n\n      _this.seekable_ = videojs.createTimeRanges();\n      _this.hasPlayed_ = false;\n      _this.syncController_ = new SyncController(options);\n      _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      _this.decrypter_ = new Decrypter();\n      _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n      _this.inbandTextTracks_ = {};\n      _this.timelineChangeController_ = new TimelineChangeController();\n      var segmentLoaderSettings = {\n        vhs: _this.vhs_,\n        parse708captions: options.parse708captions,\n        useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n        captionServices: captionServices,\n        mediaSource: _this.mediaSource,\n        currentTime: _this.tech_.currentTime.bind(_this.tech_),\n        seekable: function seekable() {\n          return _this.seekable();\n        },\n        seeking: function seeking() {\n          return _this.tech_.seeking();\n        },\n        duration: function duration() {\n          return _this.duration();\n        },\n        hasPlayed: function hasPlayed() {\n          return _this.hasPlayed_;\n        },\n        goalBufferLength: function goalBufferLength() {\n          return _this.goalBufferLength();\n        },\n        bandwidth: bandwidth,\n        syncController: _this.syncController_,\n        decrypter: _this.decrypter_,\n        sourceType: _this.sourceType_,\n        inbandTextTracks: _this.inbandTextTracks_,\n        cacheEncryptionKeys: cacheEncryptionKeys,\n        sourceUpdater: _this.sourceUpdater_,\n        timelineChangeController: _this.timelineChangeController_,\n        experimentalExactManifestTimings: options.experimentalExactManifestTimings\n      }; // The source type check not only determines whether a special DASH playlist loader\n      // should be used, but also covers the case where the provided src is a vhs-json\n      // manifest object (instead of a URL). In the case of vhs-json, the default\n      // PlaylistLoader should be used.\n\n      _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n      _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n\n      _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        segmentMetadataTrack: _this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n        loaderType: 'vtt',\n        featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n      }), options);\n\n      _this.setupSegmentLoaderListeners_();\n\n      if (_this.experimentalBufferBasedABR) {\n        _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n          return _this.startABRTimer_();\n        });\n\n        _this.tech_.on('pause', function () {\n          return _this.stopABRTimer_();\n        });\n\n        _this.tech_.on('play', function () {\n          return _this.startABRTimer_();\n        });\n      } // Create SegmentLoader stat-getters\n      // mediaRequests_\n      // mediaRequestsAborted_\n      // mediaRequestsTimedout_\n      // mediaRequestsErrored_\n      // mediaTransferDuration_\n      // mediaBytesTransferred_\n      // mediaAppends_\n\n\n      loaderStats.forEach(function (stat) {\n        _this[stat + '_'] = sumLoaderStat.bind(assertThisInitialized(_this), stat);\n      });\n      _this.logger_ = logger('MPC');\n      _this.triggeredFmp4Usage = false;\n\n      if (_this.tech_.preload() === 'none') {\n        _this.loadOnPlay_ = function () {\n          _this.loadOnPlay_ = null;\n\n          _this.masterPlaylistLoader_.load();\n        };\n\n        _this.tech_.one('play', _this.loadOnPlay_);\n      } else {\n        _this.masterPlaylistLoader_.load();\n      }\n\n      _this.timeToLoadedData__ = -1;\n      _this.mainAppendsToLoadedData__ = -1;\n      _this.audioAppendsToLoadedData__ = -1;\n      var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n      _this.tech_.one(event, function () {\n        var timeToLoadedDataStart = Date.now();\n\n        _this.tech_.one('loadeddata', function () {\n          _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n          _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n          _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n        });\n      });\n\n      return _this;\n    }\n\n    var _proto = MasterPlaylistController.prototype;\n\n    _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n      return this.mainAppendsToLoadedData__;\n    };\n\n    _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n      return this.audioAppendsToLoadedData__;\n    };\n\n    _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n      var main = this.mainAppendsToLoadedData_();\n      var audio = this.audioAppendsToLoadedData_();\n\n      if (main === -1 || audio === -1) {\n        return -1;\n      }\n\n      return main + audio;\n    };\n\n    _proto.timeToLoadedData_ = function timeToLoadedData_() {\n      return this.timeToLoadedData__;\n    }\n    /**\n     * Run selectPlaylist and switch to the new playlist if we should\n     *\n     * @private\n     *\n     */\n    ;\n\n    _proto.checkABR_ = function checkABR_() {\n      var nextPlaylist = this.selectPlaylist();\n\n      if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n        this.switchMedia_(nextPlaylist, 'abr');\n      }\n    };\n\n    _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n      var oldMedia = this.media();\n      var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n      var newId = playlist.id || playlist.uri;\n\n      if (oldId && oldId !== newId) {\n        this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n        this.tech_.trigger({\n          type: 'usage',\n          name: \"vhs-rendition-change-\" + cause\n        });\n      }\n\n      this.masterPlaylistLoader_.media(playlist, delay);\n    }\n    /**\n     * Start a timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.startABRTimer_ = function startABRTimer_() {\n      var _this2 = this;\n\n      this.stopABRTimer_();\n      this.abrTimer_ = window.setInterval(function () {\n        return _this2.checkABR_();\n      }, 250);\n    }\n    /**\n     * Stop the timer that periodically calls checkABR_\n     *\n     * @private\n     */\n    ;\n\n    _proto.stopABRTimer_ = function stopABRTimer_() {\n      // if we're scrubbing, we don't need to pause.\n      // This getter will be added to Video.js in version 7.11.\n      if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n        return;\n      }\n\n      window.clearInterval(this.abrTimer_);\n      this.abrTimer_ = null;\n    }\n    /**\n     * Get a list of playlists for the currently selected audio playlist\n     *\n     * @return {Array} the array of audio playlists\n     */\n    ;\n\n    _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n      var master = this.master();\n      var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n      // assume that the audio tracks are contained in masters\n      // playlist array, use that or an empty array.\n\n      if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n        return defaultPlaylists;\n      }\n\n      var AUDIO = master.mediaGroups.AUDIO;\n      var groupKeys = Object.keys(AUDIO);\n      var track; // get the current active track\n\n      if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n        track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n      } else {\n        // default group is `main` or just the first group.\n        var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n        for (var label in defaultGroup) {\n          if (defaultGroup[label][\"default\"]) {\n            track = {\n              label: label\n            };\n            break;\n          }\n        }\n      } // no active track no playlists.\n\n\n      if (!track) {\n        return defaultPlaylists;\n      }\n\n      var playlists = []; // get all of the playlists that are possible for the\n      // active track.\n\n      for (var group in AUDIO) {\n        if (AUDIO[group][track.label]) {\n          var properties = AUDIO[group][track.label];\n\n          if (properties.playlists && properties.playlists.length) {\n            playlists.push.apply(playlists, properties.playlists);\n          } else if (properties.uri) {\n            playlists.push(properties);\n          } else if (master.playlists.length) {\n            // if an audio group does not have a uri\n            // see if we have main playlists that use it as a group.\n            // if we do then add those to the playlists list.\n            for (var i = 0; i < master.playlists.length; i++) {\n              var playlist = master.playlists[i];\n\n              if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n                playlists.push(playlist);\n              }\n            }\n          }\n        }\n      }\n\n      if (!playlists.length) {\n        return defaultPlaylists;\n      }\n\n      return playlists;\n    }\n    /**\n     * Register event handlers on the master playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n      var _this3 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this3.tech_.preload() !== 'none') {\n          _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n          _this3.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this3.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this3.audioSegmentLoader_,\n            SUBTITLES: _this3.subtitleSegmentLoader_,\n            main: _this3.mainSegmentLoader_\n          },\n          tech: _this3.tech_,\n          requestOptions: _this3.requestOptions_,\n          masterPlaylistLoader: _this3.masterPlaylistLoader_,\n          vhs: _this3.vhs_,\n          master: _this3.master(),\n          mediaTypes: _this3.mediaTypes_,\n          blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n        });\n\n        _this3.triggerPresenceUsage_(_this3.master(), media);\n\n        _this3.setupFirstPlay();\n\n        if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this3.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this3.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        if (_this3.loadOnPlay_) {\n          _this3.tech_.off('play', _this3.loadOnPlay_);\n        }\n\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // exclude any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this3.excludeUnsupportedVariants_();\n\n          var selectedMedia;\n\n          if (_this3.enableLowInitialPlaylist) {\n            selectedMedia = _this3.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this3.selectPlaylist();\n          }\n\n          if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n            return;\n          }\n\n          _this3.initialMedia_ = selectedMedia;\n\n          _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n          // fire again since the playlist will be requested. In the case of vhs-json\n          // (where the manifest object is provided as the source), when the media\n          // playlist's `segments` list is already available, a media playlist won't be\n          // requested, and loadedplaylist won't fire again, so the playlist handler must be\n          // called on its own here.\n\n\n          var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n          if (!haveJsonSource) {\n            return;\n          }\n\n          updatedPlaylist = _this3.initialMedia_;\n        }\n\n        _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this3.mainSegmentLoader_.abort();\n\n        _this3.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this3.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n          _this3.requestOptions_.timeout = 0;\n        } else {\n          _this3.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n\n        _this3.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n        // excluded for not-changing. We likely just have a really slowly updating\n        // playlist.\n\n\n        if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n          return;\n        }\n\n        var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this3.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }); // useful for monitoring QoS\n\n\n          _this3.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-disabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-enabled'\n        });\n\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * Given an updated media playlist (whether it was loaded for the first time, or\n     * refreshed for live playlists), update any relevant properties and state to reflect\n     * changes in the media that should be accounted for (e.g., cues and duration).\n     *\n     * @param {Object} updatedPlaylist the updated media playlist object\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n      if (this.useCueTags_) {\n        this.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n\n      this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n      this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n\n        if (this.audioSegmentLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n    ;\n\n    _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-demuxed'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-webvtt'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Vhs$1.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-aes'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-alternate-audio'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-playlist-cue-tags'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    };\n\n    _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n      var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n      var currentTime = this.tech_.currentTime();\n      var bufferLowWaterLine = this.bufferLowWaterLine();\n      var bufferHighWaterLine = this.bufferHighWaterLine();\n      var buffered = this.tech_.buffered();\n      return shouldSwitchToMedia({\n        buffered: buffered,\n        currentTime: currentTime,\n        currentPlaylist: currentPlaylist,\n        nextPlaylist: nextPlaylist,\n        bufferLowWaterLine: bufferLowWaterLine,\n        bufferHighWaterLine: bufferHighWaterLine,\n        duration: this.duration(),\n        experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n        log: this.logger_\n      });\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n    ;\n\n    _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n      var _this4 = this;\n\n      if (!this.experimentalBufferBasedABR) {\n        this.mainSegmentLoader_.on('bandwidthupdate', function () {\n          var nextPlaylist = _this4.selectPlaylist();\n\n          if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n            _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n          }\n\n          _this4.tech_.trigger('bandwidthupdate');\n        });\n        this.mainSegmentLoader_.on('progress', function () {\n          _this4.trigger('progress');\n        });\n      }\n\n      this.mainSegmentLoader_.on('error', function () {\n        _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.mainSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-timestamp-offset'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this4.onSyncInfoUpdate_();\n      });\n      this.audioSegmentLoader_.on('appenderror', function () {\n        _this4.error = _this4.audioSegmentLoader_.error_;\n\n        _this4.trigger('error');\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this4.logger_('main segment loader ended');\n\n        _this4.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function (event) {\n        // never try to early abort with the new ABR algorithm\n        if (_this4.experimentalBufferBasedABR) {\n          return;\n        }\n\n        _this4.delegateLoaders_('all', ['abort']);\n\n        _this4.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n\n      var updateCodecs = function updateCodecs() {\n        if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n          return _this4.tryToCreateSourceBuffers_();\n        }\n\n        var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n        if (!codecs) {\n          return;\n        }\n\n        _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n      };\n\n      this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n      this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n      this.mainSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('fmp4', function () {\n        if (!_this4.triggeredFmp4Usage) {\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n\n          _this4.tech_.trigger({\n            type: 'usage',\n            name: 'hls-fmp4'\n          });\n\n          _this4.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this4.logger_('audioSegmentLoader ended');\n\n        _this4.onEndOfStream();\n      });\n    };\n\n    _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n    ;\n\n    _proto.load = function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     * @deprecated\n     */\n    ;\n\n    _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      this.fastQualityChange_(media);\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n    ;\n\n    _proto.fastQualityChange_ = function fastQualityChange_(media) {\n      var _this5 = this;\n\n      if (media === void 0) {\n        media = this.selectPlaylist();\n      }\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        this.logger_('skipping fastQualityChange because new media is same as old');\n        return;\n      }\n\n      this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n        } else {\n          _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n    ;\n\n    _proto.play = function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n\n      if (this.hasPlayed_) {\n        this.load();\n      }\n\n      var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n    ;\n\n    _proto.setupFirstPlay = function setupFirstPlay() {\n      var _this6 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this6.trigger('firstplay');\n\n            _this6.tech_.setCurrentTime(seekable.end(0));\n\n            _this6.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable.end(0));\n      }\n\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceOpen_ = function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * handle the sourceended event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleSourceEnded_ = function handleSourceEnded_() {\n      if (!this.inbandTextTracks_.metadataTrack_) {\n        return;\n      }\n\n      var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n      if (!cues || !cues.length) {\n        return;\n      }\n\n      var duration = this.duration();\n      cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n    }\n    /**\n     * handle the durationchange event on the MediaSource\n     *\n     * @private\n     */\n    ;\n\n    _proto.handleDurationChange_ = function handleDurationChange_() {\n      this.tech_.trigger('durationchange');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n    ;\n\n    _proto.onEndOfStream = function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n        if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.stopABRTimer_();\n      this.sourceUpdater_.endOfStream();\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     *\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n    ;\n\n    _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n    ;\n\n    _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n      if (error === void 0) {\n        error = {};\n      } // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n\n      var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        if (this.mediaSource.readyState !== 'open') {\n          this.trigger('error');\n        } else {\n          this.sourceUpdater_.endOfStream('network');\n        }\n\n        return;\n      }\n\n      currentPlaylist.playlistErrors_++;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n      var enabledPlaylists = playlists.filter(isEnabled);\n      var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n      // forever\n\n      if (playlists.length === 1 && blacklistDuration !== Infinity) {\n        videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        var reincluded = false;\n        playlists.forEach(function (playlist) {\n          // skip current playlist which is about to be blacklisted\n          if (playlist === currentPlaylist) {\n            return;\n          }\n\n          var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n          if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n            reincluded = true;\n            delete playlist.excludeUntil;\n          }\n        });\n\n        if (reincluded) {\n          videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n          // playlist. This is needed for users relying on the retryplaylist event to catch a\n          // case where the player might be stuck and looping through \"dead\" playlists.\n\n          this.tech_.trigger('retryplaylist');\n        }\n      } // Blacklist this playlist\n\n\n      var excludeUntil;\n\n      if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n        excludeUntil = Infinity;\n      } else {\n        excludeUntil = Date.now() + blacklistDuration * 1000;\n      }\n\n      currentPlaylist.excludeUntil = excludeUntil;\n\n      if (error.reason) {\n        currentPlaylist.lastExcludeReason_ = error.reason;\n      }\n\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-blacklisted'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n      // Would be something like media().id !=== currentPlaylist.id and we  would need something\n      // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n      // from loading a new playlist on any blacklist.\n      // Select a new playlist\n\n      var nextPlaylist = this.selectPlaylist();\n\n      if (!nextPlaylist) {\n        this.error = 'Playback cannot continue. No available working or supported playlists.';\n        this.trigger('error');\n        return;\n      }\n\n      var logFn = error.internal ? this.logger_ : videojs.log.warn;\n      var errorMessage = error.message ? ' ' + error.message : '';\n      logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n      if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n        this.delegateLoaders_('audio', ['abort', 'pause']);\n      } // if subtitle group changed reset subtitle loaders\n\n\n      if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n        this.delegateLoaders_('subtitle', ['abort', 'pause']);\n      }\n\n      this.delegateLoaders_('main', ['abort', 'pause']);\n      var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n      var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n      return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n    }\n    /**\n     * Pause all segment/playlist loaders\n     */\n    ;\n\n    _proto.pauseLoading = function pauseLoading() {\n      this.delegateLoaders_('all', ['abort', 'pause']);\n      this.stopABRTimer_();\n    }\n    /**\n     * Call a set of functions in order on playlist loaders, segment loaders,\n     * or both types of loaders.\n     *\n     * @param {string} filter\n     *        Filter loaders that should call fnNames using a string. Can be:\n     *        * all - run on all loaders\n     *        * audio - run on all audio loaders\n     *        * subtitle - run on all subtitle loaders\n     *        * main - run on the main/master loaders\n     *\n     * @param {Array|string} fnNames\n     *        A string or array of function names to call.\n     */\n    ;\n\n    _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n      var _this7 = this;\n\n      var loaders = [];\n      var dontFilterPlaylist = filter === 'all';\n\n      if (dontFilterPlaylist || filter === 'main') {\n        loaders.push(this.masterPlaylistLoader_);\n      }\n\n      var mediaTypes = [];\n\n      if (dontFilterPlaylist || filter === 'audio') {\n        mediaTypes.push('AUDIO');\n      }\n\n      if (dontFilterPlaylist || filter === 'subtitle') {\n        mediaTypes.push('CLOSED-CAPTIONS');\n        mediaTypes.push('SUBTITLES');\n      }\n\n      mediaTypes.forEach(function (mediaType) {\n        var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n        if (loader) {\n          loaders.push(loader);\n        }\n      });\n      ['main', 'audio', 'subtitle'].forEach(function (name) {\n        var loader = _this7[name + \"SegmentLoader_\"];\n\n        if (loader && (filter === name || filter === 'all')) {\n          loaders.push(loader);\n        }\n      });\n      loaders.forEach(function (loader) {\n        return fnNames.forEach(function (fnName) {\n          if (typeof loader[fnName] === 'function') {\n            loader[fnName]();\n          }\n        });\n      });\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // if the seek location is already buffered, continue buffering as usual\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n    ;\n\n    _proto.duration = function duration() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        // no playlists loaded yet, so can't determine a duration\n        return 0;\n      } // Don't rely on the media source for duration in the case of a live playlist since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, just return Infinity.\n\n\n      if (!media.endList) {\n        return Infinity;\n      } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n      // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Vhs$1.Playlist.duration(media);\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.seekable_;\n    };\n\n    _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n      var audioSeekable; // TODO check for creation of both source buffers before updating seekable\n      //\n      // A fix was made to this function where a check for\n      // this.sourceUpdater_.hasCreatedSourceBuffers\n      // was added to ensure that both source buffers were created before seekable was\n      // updated. However, it originally had a bug where it was checking for a true and\n      // returning early instead of checking for false. Setting it to check for false to\n      // return early though created other issues. A call to play() would check for seekable\n      // end without verifying that a seekable range was present. In addition, even checking\n      // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n      // due to a media update calling load on the segment loaders, skipping a seek to live,\n      // thereby starting live streams at the beginning of the stream rather than at the end.\n      //\n      // This conditional should be fixed to wait for the creation of two source buffers at\n      // the same time as the other sections of code are fixed to properly seek to live and\n      // not throw an error due to checking for a seekable end when no seekable range exists.\n      //\n      // For now, fall back to the older behavior, with the understanding that the seekable\n      // range may not be completely correct, leading to a suboptimal initial live point.\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      var master = this.masterPlaylistLoader_.master;\n      var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.duration());\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd;\n      var oldStart;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n    ;\n\n    _proto.updateDuration = function updateDuration(isLive) {\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n        this.updateDuration_ = null;\n      }\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.updateDuration_ = this.updateDuration.bind(this, isLive);\n        this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n        return;\n      }\n\n      if (isLive) {\n        var seekable = this.seekable();\n\n        if (!seekable.length) {\n          return;\n        } // Even in the case of a live playlist, the native MediaSource's duration should not\n        // be set to Infinity (even though this would be expected for a live playlist), since\n        // setting the native MediaSource's duration to infinity ends up with consequences to\n        // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n        //\n        // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n        // however, few browsers have support for setLiveSeekableRange()\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n        //\n        // Until a time when the duration of the media source can be set to infinity, and a\n        // seekable range specified across browsers, the duration should be greater than or\n        // equal to the last possible seekable value.\n        // MediaSource duration starts as NaN\n        // It is possible (and probable) that this case will never be reached for many\n        // sources, since the MediaSource reports duration as the highest value without\n        // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n        // we buffered times 0 to 100 with real times of 100 to 200, even though current\n        // time will be between 0 and 100, the native media source may report the duration\n        // as 200. However, since we report duration separate from the media source (as\n        // Infinity), and as long as the native media source duration value is greater than\n        // our reported seekable range, seeks will work as expected. The large number as\n        // duration for live is actually a strategy used by some players to work around the\n        // issue of live seekable ranges cited above.\n\n\n        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n          this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n        }\n\n        return;\n      }\n\n      var buffered = this.tech_.buffered();\n      var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n      if (buffered.length > 0) {\n        duration = Math.max(duration, buffered.end(buffered.length - 1));\n      }\n\n      if (this.mediaSource.duration !== duration) {\n        this.sourceUpdater_.setDuration(duration);\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      var _this8 = this;\n\n      this.trigger('dispose');\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this8.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.sourceUpdater_.dispose();\n      this.timelineChangeController_.dispose();\n      this.stopABRTimer_();\n\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      }\n\n      this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n      this.off();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n    ;\n\n    _proto.master = function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n    ;\n\n    _proto.media = function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    };\n\n    _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n      // otherwise check on the segment loader.\n\n      var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n      if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n        return false;\n      }\n\n      return true;\n    };\n\n    _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n      var _this9 = this;\n\n      var media = {\n        main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n        audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n      }; // set \"main\" media equal to video\n\n      media.video = media.main;\n      var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n      var codecs = {};\n      var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n      if (media.main.hasVideo) {\n        codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n      }\n\n      if (media.main.isMuxed) {\n        codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n      }\n\n      if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n        codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n        media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n      } // no codecs, no playback.\n\n\n      if (!codecs.audio && !codecs.video) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: 'Could not determine codecs for playlist.',\n          blacklistDuration: Infinity\n        });\n        return;\n      } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n      var supportFunction = function supportFunction(isFmp4, codec) {\n        return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n      };\n\n      var unsupportedCodecs = {};\n      var unsupportedAudio;\n      ['video', 'audio'].forEach(function (type) {\n        if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n          var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n          unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n          unsupportedCodecs[supporter].push(codecs[type]);\n\n          if (type === 'audio') {\n            unsupportedAudio = supporter;\n          }\n        }\n      });\n\n      if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n        var audioGroup = this.media().attributes.AUDIO;\n        this.master().playlists.forEach(function (variant) {\n          var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n          if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n        this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n      } // if we have any unsupported codecs blacklist this playlist.\n\n\n      if (Object.keys(unsupportedCodecs).length) {\n        var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n          if (acc) {\n            acc += ', ';\n          }\n\n          acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n          return acc;\n        }, '') + '.';\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          internal: true,\n          message: message,\n          blacklistDuration: Infinity\n        });\n        return;\n      } // check if codec switching is happening\n\n\n      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n        var switchMessages = [];\n        ['video', 'audio'].forEach(function (type) {\n          var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n          var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n          if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n            switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n          }\n        });\n\n        if (switchMessages.length) {\n          this.blacklistCurrentPlaylist({\n            playlist: this.media(),\n            message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n            blacklistDuration: Infinity,\n            internal: true\n          });\n          return;\n        }\n      } // TODO: when using the muxer shouldn't we just return\n      // the codecs that the muxer outputs?\n\n\n      return codecs;\n    }\n    /**\n     * Create source buffers and exlude any incompatible renditions.\n     *\n     * @private\n     */\n    ;\n\n    _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n      // media source is not ready yet or sourceBuffers are already\n      // created.\n      if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n\n      if (!this.areMediaTypesKnown_()) {\n        return;\n      }\n\n      var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n\n      this.sourceUpdater_.createSourceBuffers(codecs);\n      var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n      this.excludeIncompatibleVariants_(codecString);\n    }\n    /**\n     * Excludes playlists with codecs that are unsupported by the muxer and browser.\n     */\n    ;\n\n    _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n      var _this10 = this;\n\n      var playlists = this.master().playlists;\n      var ids = []; // TODO: why don't we have a property to loop through all\n      // playlist? Why did we ever mix indexes and keys?\n\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n\n        if (ids.indexOf(variant.id) !== -1) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var codecs = codecsForPlaylist(_this10.master, variant);\n        var unsupported = [];\n\n        if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n          unsupported.push(\"audio codec \" + codecs.audio);\n        }\n\n        if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n          unsupported.push(\"video codec \" + codecs.video);\n        }\n\n        if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n          unsupported.push(\"text codec \" + codecs.text);\n        }\n\n        if (unsupported.length) {\n          variant.excludeUntil = Infinity;\n\n          _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n    ;\n\n    _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n      var _this11 = this;\n\n      var ids = [];\n      var playlists = this.master().playlists;\n      var codecs = unwrapCodecList(parseCodecs(codecString));\n      var codecCount_ = codecCount(codecs);\n      var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n      var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n      Object.keys(playlists).forEach(function (key) {\n        var variant = playlists[key]; // check if we already processed this playlist.\n        // or it if it is already excluded forever.\n\n        if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n          return;\n        }\n\n        ids.push(variant.id);\n        var blacklistReasons = []; // get codecs from the playlist for this variant\n\n        var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n        var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n        // variant is incompatible. Wait for mux.js to probe\n\n        if (!variantCodecs.audio && !variantCodecs.video) {\n          return;\n        } // TODO: we can support this by removing the\n        // old media source and creating a new one, but it will take some work.\n        // The number of streams cannot change\n\n\n        if (variantCodecCount !== codecCount_) {\n          blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n        } // only exclude playlists by codec change, if codecs cannot switch\n        // during playback.\n\n\n        if (!_this11.sourceUpdater_.canChangeType()) {\n          var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n          var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n          if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n          } // the audio codec cannot change\n\n\n          if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n            blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n          }\n        }\n\n        if (blacklistReasons.length) {\n          variant.excludeUntil = Infinity;\n\n          _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n        }\n      });\n    };\n\n    _proto.updateAdCues_ = function updateAdCues_(media) {\n      var offset = 0;\n      var seekable = this.seekable();\n\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {number} Desired forward buffer length in seconds\n     */\n    ;\n\n    _proto.goalBufferLength = function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {number} Desired buffer low water line in seconds\n     */\n    ;\n\n    _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n    };\n\n    _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n      return Config.BUFFER_HIGH_WATER_LINE;\n    };\n\n    return MasterPlaylistController;\n  }(videojs.EventTarget);\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The master playlist loader\n   * @param {string} playlistID - id of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n\n  var enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n    return function (enable) {\n      var playlist = loader.master.playlists[playlistID];\n      var incompatible = isIncompatible(playlist);\n      var currentlyEnabled = isEnabled(playlist);\n\n      if (typeof enable === 'undefined') {\n        return currentlyEnabled;\n      }\n\n      if (enable) {\n        delete playlist.disabled;\n      } else {\n        playlist.disabled = true;\n      }\n\n      if (enable !== currentlyEnabled && !incompatible) {\n        // Ensure the outside world knows about our changes\n        changePlaylistFn();\n\n        if (enable) {\n          loader.trigger('renditionenabled');\n        } else {\n          loader.trigger('renditiondisabled');\n        }\n      }\n\n      return enable;\n    };\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n\n  var Representation = function Representation(vhsHandler, playlist, id) {\n    var mpc = vhsHandler.masterPlaylistController_,\n        smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n    var changeType = smoothQualityChange ? 'smooth' : 'fast';\n    var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      var resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n    }\n\n    this.codecs = codecsForPlaylist(mpc.master(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the master playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  };\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the VhsHandler class\n   *\n   * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n   * representation API into\n   */\n\n\n  var renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n    // Add a single API-specific function to the VhsHandler instance\n    vhsHandler.representations = function () {\n      var master = vhsHandler.masterPlaylistController_.master();\n      var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n      if (!playlists) {\n        return [];\n      }\n\n      return playlists.filter(function (media) {\n        return !isIncompatible(media);\n      }).map(function (e, i) {\n        return new Representation(vhsHandler, e, e.id);\n      });\n    };\n  };\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n\n\n  var timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  var PlaybackWatcher = /*#__PURE__*/function () {\n    /**\n     * Represents an PlaybackWatcher object.\n     *\n     * @class\n     * @param {Object} options an object that includes the tech and settings\n     */\n    function PlaybackWatcher(options) {\n      var _this = this;\n\n      this.masterPlaylistController_ = options.masterPlaylistController;\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n      this.media = options.media;\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.timer_ = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n\n      var playHandler = function playHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var canPlayHandler = function canPlayHandler() {\n        return _this.monitorCurrentTime_();\n      };\n\n      var waitingHandler = function waitingHandler() {\n        return _this.techWaiting_();\n      };\n\n      var cancelTimerHandler = function cancelTimerHandler() {\n        return _this.cancelTimer_();\n      };\n\n      var mpc = this.masterPlaylistController_;\n      var loaderTypes = ['main', 'subtitle', 'audio'];\n      var loaderChecks = {};\n      loaderTypes.forEach(function (type) {\n        loaderChecks[type] = {\n          reset: function reset() {\n            return _this.resetSegmentDownloads_(type);\n          },\n          updateend: function updateend() {\n            return _this.checkSegmentDownloads_(type);\n          }\n        };\n        mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n        // isn't changing we want to reset. We cannot assume that the new rendition\n        // will also be stalled, until after new appends.\n\n        mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n        // This prevents one segment playlists (single vtt or single segment content)\n        // from being detected as stalling. As the buffer will not change in those cases, since\n        // the buffer is the entire video duration.\n\n        _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      /**\n       * We check if a seek was into a gap through the following steps:\n       * 1. We get a seeking event and we do not get a seeked event. This means that\n       *    a seek was attempted but not completed.\n       * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n       *    removed everything from our buffer and appended a segment, and should be ready\n       *    to check for gaps.\n       */\n\n      var setSeekingHandlers = function setSeekingHandlers(fn) {\n        ['main', 'audio'].forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n        });\n      };\n\n      this.seekingAppendCheck_ = function () {\n        if (_this.fixesBadSeeks_()) {\n          _this.consecutiveUpdates = 0;\n          _this.lastRecordedTime = _this.tech_.currentTime();\n          setSeekingHandlers('off');\n        }\n      };\n\n      this.clearSeekingAppendCheck_ = function () {\n        return setSeekingHandlers('off');\n      };\n\n      this.watchForBadSeeking_ = function () {\n        _this.clearSeekingAppendCheck_();\n\n        setSeekingHandlers('on');\n      };\n\n      this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n      this.tech_.on('seeking', this.watchForBadSeeking_);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler);\n      /*\n        An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n        is surfaced in one of two ways:\n         1)  The `waiting` event is fired before the player has buffered content, making it impossible\n            to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n            we can check if playback is stalled due to a gap, and skip the gap if necessary.\n        2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n            is in a playing state. To catch this case, it's important that our one-time play listener is setup\n            even if the player is in a playing state\n      */\n\n      this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n      this.dispose = function () {\n        _this.clearSeekingAppendCheck_();\n\n        _this.logger_('dispose');\n\n        _this.tech_.off('waiting', waitingHandler);\n\n        _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n        _this.tech_.off('canplay', canPlayHandler);\n\n        _this.tech_.off('play', playHandler);\n\n        _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n        _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n        loaderTypes.forEach(function (type) {\n          mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n          mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n          _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n        });\n\n        if (_this.checkCurrentTimeTimeout_) {\n          window.clearTimeout(_this.checkCurrentTimeTimeout_);\n        }\n\n        _this.cancelTimer_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n\n    var _proto = PlaybackWatcher.prototype;\n\n    _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * Reset stalled download stats for a specific type of loader\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#playlistupdate\n     * @listens Tech#seeking\n     * @listens Tech#seeked\n     */\n    ;\n\n    _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n      var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n      if (this[type + \"StalledDownloads_\"] > 0) {\n        this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n      }\n\n      this[type + \"StalledDownloads_\"] = 0;\n      this[type + \"Buffered_\"] = loader.buffered_();\n    }\n    /**\n     * Checks on every segment `appendsdone` to see\n     * if segment appends are making progress. If they are not\n     * and we are still downloading bytes. We blacklist the playlist.\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#appendsdone\n     */\n    ;\n\n    _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n      var mpc = this.masterPlaylistController_;\n      var loader = mpc[type + \"SegmentLoader_\"];\n      var buffered = loader.buffered_();\n      var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n      this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n      // the buffered value for this loader changed\n      // appends are working\n\n      if (isBufferedDifferent) {\n        this.resetSegmentDownloads_(type);\n        return;\n      }\n\n      this[type + \"StalledDownloads_\"]++;\n      this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n        playlistId: loader.playlist_ && loader.playlist_.id,\n        buffered: timeRangesToArray(buffered)\n      }); // after 10 possibly stalled appends with no reset, exclude\n\n      if (this[type + \"StalledDownloads_\"] < 10) {\n        return;\n      }\n\n      this.logger_(type + \" loader stalled download exclusion\");\n      this.resetSegmentDownloads_(type);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-\" + type + \"-download-exclusion\"\n      });\n\n      if (type === 'subtitle') {\n        return;\n      } // TODO: should we exclude audio tracks rather than main tracks\n      // when type is audio?\n\n\n      mpc.blacklistCurrentPlaylist({\n        message: \"Excessive \" + type + \" segment downloading detected.\"\n      }, Infinity);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n    ;\n\n    _proto.checkCurrentTime_ = function checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n    ;\n\n    _proto.cancelTimer_ = function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {boolean} whether an action was taken to fix the seek\n     * @private\n     */\n    ;\n\n    _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      } // TODO: It's possible that these seekable checks should be moved out of this function\n      // and into a function that runs on seekablechange. It's also possible that we only need\n      // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n      // seekable range.\n\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n        // happen in live with a 3 segment playlist), then don't use a time delta\n        seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n\n      var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n      var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n      var media = this.media(); // verify that at least two segment durations or one part duration have been\n      // appended before checking for a gap.\n\n      var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n      // appended before checking for a gap.\n\n      var bufferedToCheck = [audioBuffered, videoBuffered];\n\n      for (var i = 0; i < bufferedToCheck.length; i++) {\n        // skip null buffered\n        if (!bufferedToCheck[i]) {\n          continue;\n        }\n\n        var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n        // duration behind we haven't appended enough to call this a bad seek.\n\n        if (timeAhead < minAppendedDuration) {\n          return false;\n        }\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n      // to seek over the gap\n\n      if (nextRange.length === 0) {\n        return false;\n      }\n\n      seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n      this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n    ;\n\n    _proto.waiting_ = function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-unknown-waiting'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n    ;\n\n    _proto.techWaiting_ = function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-live-resync'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n      var buffered = this.tech_.buffered();\n      var videoUnderflow = this.videoUnderflow_({\n        audioBuffered: sourceUpdater.audioBuffered(),\n        videoBuffered: sourceUpdater.videoBuffered(),\n        currentTime: currentTime\n      });\n\n      if (videoUnderflow) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-video-underflow'\n        });\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      }\n\n      var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n        this.cancelTimer_();\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    };\n\n    _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n      if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n        allowSeeksWithinUnsafeLiveWindow = false;\n      }\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n      var videoBuffered = _ref.videoBuffered,\n          audioBuffered = _ref.audioBuffered,\n          currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n      if (!videoBuffered) {\n        return;\n      }\n\n      var gap; // find a gap in demuxed content.\n\n      if (videoBuffered.length && audioBuffered.length) {\n        // in Chrome audio will continue to play for ~3s when we run out of video\n        // so we have to check that the video buffer did have some buffer in the\n        // past.\n        var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n        var videoRange = findRange(videoBuffered, currentTime);\n        var audioRange = findRange(audioBuffered, currentTime);\n\n        if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n          gap = {\n            start: lastVideoRange.end(0),\n            end: audioRange.end(0)\n          };\n        } // find a gap in muxed content.\n\n      } else {\n        var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n\n        if (!nextRange.length) {\n          gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n        }\n      }\n\n      if (gap) {\n        this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n    ;\n\n    _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-gap-skip'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    };\n\n    _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    };\n\n    return PlaybackWatcher;\n  }();\n\n  var defaultOptions = {\n    errorInterval: 30,\n    getSource: function getSource(next) {\n      var tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      var sourceObj = tech.currentSource_ || this.currentSource();\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  var initPlugin = function initPlugin(player, options) {\n    var lastCalled = 0;\n    var seekTo = 0;\n    var localOptions = videojs.mergeOptions(defaultOptions, options);\n    player.ready(function () {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-initialized'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    var loadedMetadataHandler = function loadedMetadataHandler() {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n\n    var setSource = function setSource(sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n\n    var errorHandler = function errorHandler() {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'vhs-error-reload-canceled'\n        });\n        player.trigger({\n          type: 'usage',\n          name: 'hls-error-reload-canceled'\n        });\n        return;\n      }\n\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n\n    var cleanupEvents = function cleanupEvents() {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n\n    var reinitPlugin = function reinitPlugin(newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n\n  var reloadSourceOnError = function reloadSourceOnError(options) {\n    initPlugin(this, options);\n  };\n\n  var version$4 = \"2.14.3\";\n  var version$3 = \"6.0.1\";\n  var version$2 = \"0.21.1\";\n  var version$1 = \"4.7.1\";\n  var version = \"3.1.3\";\n  var Vhs = {\n    PlaylistLoader: PlaylistLoader,\n    Playlist: Playlist,\n    utils: utils,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    lastBandwidthSelector: lastBandwidthSelector,\n    movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n    comparePlaylistBandwidth: comparePlaylistBandwidth,\n    comparePlaylistResolution: comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properties\n\n  Object.keys(Config).forEach(function (prop) {\n    Object.defineProperty(Vhs, prop, {\n      get: function get() {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n        return Config[prop];\n      },\n      set: function set(value) {\n        videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n        if (typeof value !== 'number' || value < 0) {\n          videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n          return;\n        }\n\n        Config[prop] = value;\n      }\n    });\n  });\n  var LOCAL_STORAGE_KEY = 'videojs-vhs';\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleVhsMediaChange\n   */\n\n  var handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n    var newPlaylist = playlistLoader.media();\n    var selectedIndex = -1;\n\n    for (var i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.id) {\n        selectedIndex = i;\n        break;\n      }\n    }\n\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex: selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} vhs Vhs object to listen to for media events.\n   * @function handleVhsLoadedMetadata\n   */\n\n\n  var handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n    vhs.representations().forEach(function (rep) {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleVhsMediaChange(qualityLevels, vhs.playlists);\n  }; // HLS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n\n  Vhs.canPlaySource = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    }\n\n    var codecs = {};\n\n    if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n      codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n    }\n\n    if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n      codecs.audio = audioPlaylist.attributes.CODECS;\n    }\n\n    var videoContentType = getMimeForCodec(codecs.video);\n    var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n    var keySystemContentTypes = {};\n\n    for (var keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {};\n\n      if (audioContentType) {\n        keySystemContentTypes[keySystem].audioContentType = audioContentType;\n      }\n\n      if (videoContentType) {\n        keySystemContentTypes[keySystem].videoContentType = videoContentType;\n      } // Default to using the video playlist's PSSH even though they may be different, as\n      // videojs-contrib-eme will only accept one in the options.\n      //\n      // This shouldn't be an issue for most cases as early intialization will handle all\n      // unique PSSH values, and if they aren't, then encrypted events should have the\n      // specific information needed for the unique license.\n\n\n      if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n\n    return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n  };\n  /**\n   * @typedef {Object} KeySystems\n   *\n   * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n   * Note: not all options are listed here.\n   *\n   * @property {Uint8Array} [pssh]\n   *           Protection System Specific Header\n   */\n\n  /**\n   * Goes through all the playlists and collects an array of KeySystems options objects\n   * containing each playlist's keySystems and their pssh values, if available.\n   *\n   * @param {Object[]} playlists\n   *        The playlists to look through\n   * @param {string[]} keySystems\n   *        The keySystems to collect pssh values for\n   *\n   * @return {KeySystems[]}\n   *         An array of KeySystems objects containing available key systems and their\n   *         pssh values\n   */\n\n\n  var getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n    return playlists.reduce(function (keySystemsArr, playlist) {\n      if (!playlist.contentProtection) {\n        return keySystemsArr;\n      }\n\n      var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n        var keySystemOptions = playlist.contentProtection[keySystem];\n\n        if (keySystemOptions && keySystemOptions.pssh) {\n          keySystemsObj[keySystem] = {\n            pssh: keySystemOptions.pssh\n          };\n        }\n\n        return keySystemsObj;\n      }, {});\n\n      if (Object.keys(keySystemsOptions).length) {\n        keySystemsArr.push(keySystemsOptions);\n      }\n\n      return keySystemsArr;\n    }, []);\n  };\n  /**\n   * Returns a promise that waits for the\n   * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n   *\n   * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n   * browsers.\n   *\n   * As per the above ticket, this is particularly important for Chrome, where, if\n   * unencrypted content is appended before encrypted content and the key session has not\n   * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n   * during playback.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   * @param {Object[]} mainPlaylists\n   *        The playlists found on the master playlist object\n   *\n   * @return {Object}\n   *         Promise that resolves when the key session has been created\n   */\n\n\n  var waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n    var player = _ref.player,\n        sourceKeySystems = _ref.sourceKeySystems,\n        audioMedia = _ref.audioMedia,\n        mainPlaylists = _ref.mainPlaylists;\n\n    if (!player.eme.initializeMediaKeys) {\n      return Promise.resolve();\n    } // TODO should all audio PSSH values be initialized for DRM?\n    //\n    // All unique video rendition pssh values are initialized for DRM, but here only\n    // the initial audio playlist license is initialized. In theory, an encrypted\n    // event should be fired if the user switches to an alternative audio playlist\n    // where a license is required, but this case hasn't yet been tested. In addition, there\n    // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n    // languages).\n\n\n    var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n    var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n    var initializationFinishedPromises = [];\n    var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n    // only place where it should not be deduped is for ms-prefixed APIs, but the early\n    // return for IE11 above, and the existence of modern EME APIs in addition to\n    // ms-prefixed APIs on Edge should prevent this from being a concern.\n    // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n    keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n      keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n        player.tech_.one('keysessioncreated', resolve);\n      }));\n      initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n        player.eme.initializeMediaKeys({\n          keySystems: keySystemsOptions\n        }, function (err) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve();\n        });\n      }));\n    }); // The reasons Promise.race is chosen over Promise.any:\n    //\n    // * Promise.any is only available in Safari 14+.\n    // * None of these promises are expected to reject. If they do reject, it might be\n    //   better here for the race to surface the rejection, rather than mask it by using\n    //   Promise.any.\n\n    return Promise.race([// If a session was previously created, these will all finish resolving without\n    // creating a new session, otherwise it will take until the end of all license\n    // requests, which is why the key session check is used (to make setup much faster).\n    Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n    Promise.race(keySessionCreatedPromises)]);\n  };\n  /**\n   * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n   * there are keySystems on the source, sets up source options to prepare the source for\n   * eme.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} media\n   *        The active media playlist\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   *\n   * @return {boolean}\n   *         Whether or not options were configured and EME is available\n   */\n\n\n  var setupEmeOptions = function setupEmeOptions(_ref2) {\n    var player = _ref2.player,\n        sourceKeySystems = _ref2.sourceKeySystems,\n        media = _ref2.media,\n        audioMedia = _ref2.audioMedia;\n    var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n    if (!sourceOptions) {\n      return false;\n    }\n\n    player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n    // do nothing.\n\n    if (sourceOptions && !player.eme) {\n      videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n      return false;\n    }\n\n    return true;\n  };\n\n  var getVhsLocalStorage = function getVhsLocalStorage() {\n    if (!window.localStorage) {\n      return null;\n    }\n\n    var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n    if (!storedObject) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n\n  var updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n    if (!window.localStorage) {\n      return false;\n    }\n\n    var objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n\n    return objectToStore;\n  };\n  /**\n   * Parses VHS-supported media types from data URIs. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   * for information on data URIs.\n   *\n   * @param {string} dataUri\n   *        The data URI\n   *\n   * @return {string|Object}\n   *         The parsed object/string, or the original string if no supported media type\n   *         was found\n   */\n\n\n  var expandDataUri = function expandDataUri(dataUri) {\n    if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n      return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n    } // no known case for this data URI, return the string as-is\n\n\n    return dataUri;\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n\n  Vhs.supportsNativeHls = function () {\n    if (!document || !document.createElement) {\n      return false;\n    }\n\n    var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n\n    var canPlay = [// Apple santioned\n    'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n    'audio/mpegurl', // Very common\n    'audio/x-mpegurl', // Very common\n    'application/x-mpegurl', // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n\n  Vhs.supportsNativeDash = function () {\n    if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n      return false;\n    }\n\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n\n  Vhs.supportsTypeNatively = function (type) {\n    if (type === 'hls') {\n      return Vhs.supportsNativeHls;\n    }\n\n    if (type === 'dash') {\n      return Vhs.supportsNativeDash;\n    }\n\n    return false;\n  };\n  /**\n   * HLS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n\n  Vhs.isSupported = function () {\n    return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n\n  var Component = videojs.getComponent('Component');\n  /**\n   * The Vhs Handler object, where we orchestrate all of the parts\n   * of HLS to interact with video.js\n   *\n   * @class VhsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  var VhsHandler = /*#__PURE__*/function (_Component) {\n    inheritsLoose(VhsHandler, _Component);\n\n    function VhsHandler(source, tech, options) {\n      var _this;\n\n      _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n      if (options.hls && Object.keys(options.hls).length) {\n        videojs.log.warn('Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.');\n      } // if a tech level `initialBandwidth` option was passed\n      // use that over the VHS level `bandwidth` option\n\n\n      if (typeof options.initialBandwidth === 'number') {\n        _this.options_.bandwidth = options.initialBandwidth;\n      }\n\n      _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n      // backwards-compatibility\n\n      if (tech.options_ && tech.options_.playerId) {\n        var _player = videojs(tech.options_.playerId);\n\n        if (!_player.hasOwnProperty('hls')) {\n          Object.defineProperty(_player, 'hls', {\n            get: function get() {\n              videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'hls-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('vhs')) {\n          Object.defineProperty(_player, 'vhs', {\n            get: function get() {\n              videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n              tech.trigger({\n                type: 'usage',\n                name: 'vhs-player-access'\n              });\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        if (!_player.hasOwnProperty('dash')) {\n          Object.defineProperty(_player, 'dash', {\n            get: function get() {\n              videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n              return assertThisInitialized(_this);\n            },\n            configurable: true\n          });\n        }\n\n        _this.player_ = _player;\n      }\n\n      _this.tech_ = tech;\n      _this.source_ = source;\n      _this.stats = {};\n      _this.ignoreNextSeekingEvent_ = false;\n\n      _this.setOptions_();\n\n      if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native HLS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n\n      _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n        var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n        if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n          _this.masterPlaylistController_.fastQualityChange_();\n        } else {\n          // When leaving fullscreen, since the in page pixel dimensions should be smaller\n          // than full screen, see if there should be a rendition switch down to preserve\n          // bandwidth.\n          _this.masterPlaylistController_.checkABR_();\n        }\n      });\n\n      _this.on(_this.tech_, 'seeking', function () {\n        if (this.ignoreNextSeekingEvent_) {\n          this.ignoreNextSeekingEvent_ = false;\n          return;\n        }\n\n        this.setCurrentTime(this.tech_.currentTime());\n      });\n\n      _this.on(_this.tech_, 'error', function () {\n        // verify that the error was real and we are loaded\n        // enough to have mpc loaded.\n        if (this.tech_.error() && this.masterPlaylistController_) {\n          this.masterPlaylistController_.pauseLoading();\n        }\n      });\n\n      _this.on(_this.tech_, 'play', _this.play);\n\n      return _this;\n    }\n\n    var _proto = VhsHandler.prototype;\n\n    _proto.setOptions_ = function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n      this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-bandwidth-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-throughput-from-local-storage'\n            });\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n    ;\n\n    _proto.src = function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.src = expandDataUri(this.source_.src);\n      this.options_.tech = this.tech_;\n      this.options_.externVhs = Vhs;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n      };\n\n      if (this.options_.smoothQualityChange) {\n        videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n      }\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      var playbackWatcherOptions = videojs.mergeOptions({\n        liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n      }, this.options_, {\n        seekable: function seekable() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        },\n        masterPlaylistController: this.masterPlaylistController_\n      });\n      this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs.players[_this3.tech_.options_.playerId];\n        var error = _this3.masterPlaylistController_.error;\n\n        if (typeof error === 'object' && !error.code) {\n          error.code = 3;\n        } else if (typeof error === 'string') {\n          error = {\n            message: error,\n            code: 3\n          };\n        }\n\n        player.error(error);\n      });\n      var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get() {\n            var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n            var networkInformation = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            var tenMbpsAsBitsPerSecond = 10e6;\n\n            if (this.options_.useNetworkInformationApi && networkInformation) {\n              // downlink returns Mbps\n              // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n              var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n              // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n              // high quality streams are not filtered out.\n\n              if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n                playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n              } else {\n                playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n              }\n            }\n\n            return playerBandwidthEst;\n          },\n          set: function set(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set() {\n            videojs.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        mediaAppends: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mediaAppends_() || 0;\n          },\n          enumerable: true\n        },\n        mainAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        audioAppendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        appendsToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        timeToLoadedData: {\n          get: function get() {\n            return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to VhsHandler\n        renditionSelectionMixin(_this3);\n      });\n      this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n        _this3.setupEme_();\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.masterPlaylistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.mediaSourceUrl_ = window.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n      this.tech_.src(this.mediaSourceUrl_);\n    };\n\n    _proto.createKeySessions_ = function createKeySessions_() {\n      var _this4 = this;\n\n      var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      this.logger_('waiting for EME key session creation');\n      waitForKeySessionCreation({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n        mainPlaylists: this.playlists.master.playlists\n      }).then(function () {\n        _this4.logger_('created EME key session');\n\n        _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n      })[\"catch\"](function (err) {\n        _this4.logger_('error while creating EME key session', err);\n\n        _this4.player_.error({\n          message: 'Failed to initialize media keys for EME',\n          code: 3\n        });\n      });\n    };\n\n    _proto.handleWaitingForKey_ = function handleWaitingForKey_() {\n      // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n      // the key is in the manifest. While this should've happened on initial source load, it\n      // may happen again in live streams where the keys change, and the manifest info\n      // reflects the update.\n      //\n      // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n      // already requested keys for, we don't have to worry about this generating extraneous\n      // requests.\n      this.logger_('waitingforkey fired, attempting to create any new key sessions');\n      this.createKeySessions_();\n    }\n    /**\n     * If necessary and EME is available, sets up EME options and waits for key session\n     * creation.\n     *\n     * This function also updates the source updater so taht it can be used, as for some\n     * browsers, EME must be configured before content is appended (if appending unencrypted\n     * content before encrypted content).\n     */\n    ;\n\n    _proto.setupEme_ = function setupEme_() {\n      var _this5 = this;\n\n      var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      var didSetupEmeOptions = setupEmeOptions({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        media: this.playlists.media(),\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n      });\n      this.player_.tech_.on('keystatuschange', function (e) {\n        if (e.status !== 'output-restricted') {\n          return;\n        }\n\n        var masterPlaylist = _this5.masterPlaylistController_.master();\n\n        if (!masterPlaylist || !masterPlaylist.playlists) {\n          return;\n        }\n\n        var excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n        masterPlaylist.playlists.forEach(function (playlist) {\n          if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n            if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n              playlist.excludeUntil = Infinity;\n              excludedHDPlaylists.push(playlist);\n            }\n          }\n        });\n\n        if (excludedHDPlaylists.length) {\n          var _videojs$log;\n\n          (_videojs$log = videojs.log).warn.apply(_videojs$log, ['DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(excludedHDPlaylists)); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n\n          _this5.masterPlaylistController_.fastQualityChange_();\n        }\n      });\n      this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n      this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n      // promises.\n\n      if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n        // If EME options were not set up, we've done all we could to initialize EME.\n        this.masterPlaylistController_.sourceUpdater_.initializedEme();\n        return;\n      }\n\n      this.createKeySessions_();\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n    ;\n\n    _proto.setupQualityLevels_ = function setupQualityLevels_() {\n      var _this6 = this;\n\n      var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n\n      this.qualityLevels_ = player.qualityLevels();\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        handleVhsLoadedMetadata(_this6.qualityLevels_, _this6);\n      });\n      this.playlists.on('mediachange', function () {\n        handleVhsMediaChange(_this6.qualityLevels_, _this6.playlists);\n      });\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    VhsHandler.version = function version$5() {\n      return {\n        '@videojs/http-streaming': version$4,\n        'mux.js': version$3,\n        'mpd-parser': version$2,\n        'm3u8-parser': version$1,\n        'aes-decrypter': version\n      };\n    }\n    /**\n     * return the version\n     */\n    ;\n\n    _proto.version = function version() {\n      return this.constructor.version();\n    };\n\n    _proto.canChangeType = function canChangeType() {\n      return SourceUpdater.canChangeType();\n    }\n    /**\n     * Begin playing the video.\n     */\n    ;\n\n    _proto.play = function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.setCurrentTime = function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.duration = function duration() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n    ;\n\n    _proto.seekable = function seekable() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.vhs) {\n        delete this.tech_.vhs;\n      } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n      if (this.tech_) {\n        delete this.tech_.hls;\n      }\n\n      if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n        window.URL.revokeObjectURL(this.mediaSourceUrl_);\n        this.mediaSourceUrl_ = null;\n      }\n\n      if (this.tech_) {\n        this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n      }\n\n      _Component.prototype.dispose.call(this);\n    };\n\n    _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n    ;\n\n    _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n      if (pauseAfterSeek === void 0) {\n        pauseAfterSeek = true;\n      }\n\n      if (retryCount === void 0) {\n        retryCount = 2;\n      }\n\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    };\n\n    return VhsHandler;\n  }(Component);\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n\n  var VhsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$4,\n    canHandleSource: function canHandleSource(srcObj, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource: function handleSource(source, tech, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var localOptions = videojs.mergeOptions(videojs.options, options);\n      tech.vhs = new VhsHandler(source, tech, localOptions);\n\n      if (!videojs.hasOwnProperty('hls')) {\n        Object.defineProperty(tech, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n            return tech.vhs;\n          },\n          configurable: true\n        });\n      }\n\n      tech.vhs.xhr = xhrFactory();\n      tech.vhs.src(source.src, source.type);\n      return tech.vhs;\n    },\n    canPlayType: function canPlayType(type, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n          _videojs$mergeOptions2 = _videojs$mergeOptions.vhs;\n\n      _videojs$mergeOptions2 = _videojs$mergeOptions2 === void 0 ? {} : _videojs$mergeOptions2;\n      var _videojs$mergeOptions3 = _videojs$mergeOptions2.overrideNative,\n          overrideNative = _videojs$mergeOptions3 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions3,\n          _videojs$mergeOptions4 = _videojs$mergeOptions.hls;\n      _videojs$mergeOptions4 = _videojs$mergeOptions4 === void 0 ? {} : _videojs$mergeOptions4;\n      var _videojs$mergeOptions5 = _videojs$mergeOptions4.overrideNative,\n          legacyOverrideNative = _videojs$mergeOptions5 === void 0 ? false : _videojs$mergeOptions5;\n      var supportedType = simpleTypeFromSourceType(type);\n      var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || legacyOverrideNative || overrideNative);\n      return canUseMsePlayback ? 'maybe' : '';\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {boolean} if  native media sources are supported\n   */\n\n  var supportsNativeMediaSources = function supportsNativeMediaSources() {\n    return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n  }; // register source handlers with the appropriate techs\n\n\n  if (supportsNativeMediaSources()) {\n    videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n  }\n\n  videojs.VhsHandler = VhsHandler;\n  Object.defineProperty(videojs, 'HlsHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n      return VhsHandler;\n    },\n    configurable: true\n  });\n  videojs.VhsSourceHandler = VhsSourceHandler;\n  Object.defineProperty(videojs, 'HlsSourceHandler', {\n    get: function get() {\n      videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n      return VhsSourceHandler;\n    },\n    configurable: true\n  });\n  videojs.Vhs = Vhs;\n  Object.defineProperty(videojs, 'Hls', {\n    get: function get() {\n      videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n      return Vhs;\n    },\n    configurable: true\n  });\n\n  if (!videojs.use) {\n    videojs.registerComponent('Hls', Vhs);\n    videojs.registerComponent('Vhs', Vhs);\n  }\n\n  videojs.options.vhs = videojs.options.vhs || {};\n  videojs.options.hls = videojs.options.hls || {};\n\n  if (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n    var registerPlugin = videojs.registerPlugin || videojs.plugin;\n    registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs;\n\n})));\n"],"names":["global1","factory","exports","module","define","amd","globalThis","self","videojs","this","browserApi","version$5","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","i","length","document","_i","history","log$1","createLogger$1","name","logByType","level","log","_len","arguments","args","Array","_key","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","window","console","info","test","isArray","LogByTypeFactory","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","commonjsGlobal","global","createCommonjsModule","module1","_extends_1","_extends","Object","assign","target","source","key","prototype","call","apply","toString$1","toString","keys","object","isObject$1","each","forEach","sources","value","isPlain","constructor","computedStyle","el","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","match","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","maxTouchPoints","DocumentTouch","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","parent","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","createElement","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","WeakMap","vdata","floor","performance","now","Date","data","_proto","set","access","get","_supportsPassive","DomData","_cleanUpEvents","elem","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","passiveEvents","on","guid","hash","handlersCopy","m","n","opts","defineProperty","supportsPassive","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","clearTimeout","timeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","self1","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set$1","Set","keycode","exports1","searchInput","hasKeyCode","names","foundNamedKey","search","String","codes","aliases","charCodeAt","isEventKey","nameOrCode","code","backspace","tab","enter","ctrl","alt","esc","space","end","home","up","right","down","insert","delete","command","windows","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","fromCharCode","title","alias","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","requestNamedAnimationFrame","_this5","cancelNamedAnimationFrame","cancelAnimationFrame","_this6","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","assertThisInitialized","ReferenceError","inheritsLoose","subClass","superClass","create","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","Symbol","iterator","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","tuple","reviver","json","JSON","parse","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","MODAL_CLASS_NAME","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","window_1","isFunction_1","alert","confirm","prompt","httpHandler","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","contentType","_contentType$split","getCharset","headers","decode","Uint8Array","createXHR","lib","default_1","initParams","uri","params","_createXHR","called","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","loadFunc","aborted","useXDR","rawRequest","getAllResponseHeaders","row","parseHeaders","cors","XDomainRequest","XMLHttpRequest","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","isEmpty","beforeSend","send","array","forEachArray","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","default","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","load","NONE","LOADING","LOADED","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","doccy","topLevel","document_1","_objCreate","F","o","ParsingError","errorData","parseTimeStamp","input","computeSeconds","h","s","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","v","region","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","e1","e2","center","middle","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","b","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","window1","nextToken","shouldAdd","current","localName","annotation","rootDiv","tagStack","innerHTML","createProcessingInstruction","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","trackList","count","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","findBestPosition","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","processCues","overlay","paddedOverlay","margin","hasBeenReset","displayState","shouldCompute","fontSize","decoder","buffer","reportOrThrowError","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","parseTimestampMap","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","stream","alreadyCollectedLine","hasSubstring","vtt","directionSetting","lr","rl","alignSetting","auto","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","enumerable","pauseOnExit","TypeError","setting","findDirectionSetting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","isValidPercentValue","vttregion","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","_this8","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","_middleware","mwFactory","mwrest","_mws$i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","cache_","selectedLanguage","translate","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","substring","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newIndex","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","_this9","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this10","resolve","play_","_this11","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this12","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this13","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this14","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","handleSrc_","isRetry","_this15","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","str1","str2","_this16","sourceTech","_this17","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_ref3","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","_this18","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","_this19","playerChildren","controlBarHeight","disableAudioOnlyUI_","_this20","exitPromises","enablePosterModeUI_","disablePosterModeUI_","_this21","toJSON","createModal","_this22","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this23","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","setPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","Reflect","construct","sham","Proxy","_construct","Parent","Class","instance","Function","BASE_PLUGIN_NAME","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","hasPlugin","inherits","normalizeId","getPlayer","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","dom","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","DEFAULT_LOCATION$1","Stream","_length","pipe","destination","decodeB64ToUint8Array$1","b64Text","decodedString","atob","Buffer","LineStream","_Stream","nextNewline","TAB","parseByterange","byterangeString","offset","parseAttributes$1","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","IV","Uint32Array","PRECISE","subkey","addParser","expression","customType","dataParser","segment","addTagMapper","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","currentMap","uris","currentUri","hasParts","defaultMediaGroups","AUDIO","VIDEO","SUBTITLES","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","canBlockReload","canSkipDateranges","hint","isPart","otherHint","required","partInf","partTarget","comment","custom","identifier","missing","chunk","regexs","webm","ogg","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","mediaType","isAudioCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","ArrayBuffer","isView","toUint8","bytes","byteOffset","byteLength","BigInt","BYTE_TABLE","bytesToNumber","_temp","_ref$signed","signed","_ref$le","le","total","_byte","exponent","numberToBytes","_temp2","_ref2$le","byteCount","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","view","bytesMatch","_temp3","_ref3$offset","_ref3$mask","mask","bByte","DEFAULT_LOCATION","resolveUrl$1","baseUrl","relativeUrl","nativeURL","URL","protocolLess","removeLocation","newUrl","decodeB64ToUint8Array","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE$3","SVG","XML","XMLNS","conventions","NAMESPACE","NAMESPACE$2","notEmptyString","orderedSetReducer","toOrderedSet","splitOnASCIIWhitespace","copy","dest","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","namespaceURI","_nsMap","prefix","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation$1","Node","_xmlEncoder","_visitNode","Document","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","newFirst","newLast","pre","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer$1","nodeSerializeToString","isHtml","nodeFilter","buf","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","len","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","_importNode","deep","node2","_cloneNode","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","root","createElementNS","createDocumentType","nodeValue","refChild","oldChild","normalize","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importNode","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","nodeClassNamesSet","createComment","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","DOMImplementation","XMLSerializer","entities","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","NAMESPACE$1","nameStartChar","nameChar","tagNamePattern","ParseError$1","locator","XMLReader$1","copyLocator","lineNumber","columnNumber","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","fatalError","addValue","warning","setTagName","closed","appendElement$1","domBuilder","localNSMap","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","endElement","endPrefixMapping","parseHtmlSpecialContent","elStartEnd","elEndStart","characters","fixSelfClosed","closeMap","parseDCC","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","parseInstruction","processingInstruction","ElementAttributes","defaultNSMap","startDocument","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","appendText","xt","lineEnd","linePattern","lineStart","parseStack","tagStart","currentElement","endMatch","locator2","_parse","endDocument","getLocalName","getLocator","getQName","getURI","sax","XMLReader","ParseError","DOMParser$1","DOMHandler","cdata","_locator","_toString","chars","java","appendElement","hander","parseFromString","mimeType","xmlns","setDocumentLocator","errorImpl","isCallback","build","msg","buildErrorHandler","xml","documentURI","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","_error","DOMParser","__DOMHandler","isObject","merge","objects","flatten","lists","findIndex","matchingFunction","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","_ref$indexRange","indexRange","resolvedUri","startRange","endRange","MAX_SAFE_INTEGER","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$periodSta","periodStart","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","_attributes$startNumb","startNumber","toSegments","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","presentationTime","_attributes$number","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","getMediaGroupPlaylists","master","mediaGroupPlaylists","group","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","_ref5","oldManifest","newManifest","oldPlaylists","newPlaylists","_ref4","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","updateSequenceNumbers","generateSidxKey","mergeDiscontiguousPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatVideoPlaylist","_attributes2","CODECS","bandwidth","videoOnly","audioOnly","vttOnly","_ref6","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","_ref8","_mediaGroups","dashPlaylists","locations","_ref8$sidxMapping","previousManifest","_dashPlaylists$0$attr","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","captionServices","isAudioOnly","organizedAudioGroup","mainPlaylist","formattedPlaylists","roleLabel","formatted","_attributes","formatAudioPlaylist","organizeAudioPlaylists","organizedVttGroup","_m3u8Attributes","m3u8Attributes","formatVttPlaylist","organizeVttPlaylists","playlistTimelineStarts","_ref9","_ref7","subs","cc","svcObj","svc","service","channel","easyReader","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","getContent","parseDuration","_match$slice","year","month","day","hour","minute","second","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","_value$split","flags","_value$split2","_value$split2$","opt","_opt$split","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","adaptationSets","stringToMpdXml","manifestString","parsedManifestInfo","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periodNodes","periods","priorPeriod","priorPeriodAttributes","mpdType","getPeriodStart","representationInfo","inheritAttributes","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","MAX_UINT32","pow","getUint64","uint8","dv","DataView","getBigUint64","getUint32","parseSidx_1","subarray","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","ID3","getId3Offset","returnSize","getId3Size","normalizePath$1","findBox","paths","complete","normalizePaths$1","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","normalizePaths","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","matroska","ac3","riff","avi","fmp4","moov","moof","_isLikely","docType","h264","findH264Nal","h265","findH265Nal","isLikelyTypes","isLikelyFn","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","isLikely","detectContainerForBytes","ONE_SECOND_IN_TS","sampleRate","timestamp","clock_1","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backward","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_ret","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","phonyUri","audioOnlyMaster","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","onwarn","oninfo","_ref$customTagParsers","_ref$customTagMappers","customParser","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","buffers","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","fin","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","masterXml","oldMaster","newMaster","noChanges","playlistUpdate","_playlistUpdate","updateMaster","mpl","mup","createMUPTimeout_","mediaGroupSidx","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","ONE_SECOND_IN_TS$4","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","emulationPreventionBytesPositions","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","Cea708Service","serviceNum","encoding","currentWindow","createTextDecoder","startPts","win","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","_char","charCodeArray","newCode","isMultiByte","extended","currentByte","nextByte","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","privateData","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","subresults","toUnsigned$1","getUint64$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","didError","segmentFinish","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","WebKitDataCue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","SourceBuffer","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","basedir","require","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","__esModule","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","_segment$cueOutCont$s","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","qualityLevels","selectedIndex_","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","masterPlaylist","_videojs$log","excludedHDPlaylists","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions","_videojs$mergeOptions2","_videojs$mergeOptions3","_videojs$mergeOptions4","_videojs$mergeOptions5","legacyOverrideNative","supportedType"],"version":3,"file":"multimedia.ad071171.js.map"}